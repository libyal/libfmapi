= Message API (MAPI) definitions
Microsoft Outlook MAPI definitions for Exchange (ESEDB) and Outlook (NK2 and PFF) formats

:toc:
:toclevels: 4

:numbered!:
[abstract]
== Summary

The Microsoft (Office) Outlook Messaging API (MAPI) is used in multiple file formats.
This document is intended as a working document for the ESEDB, NK2 and PFF specification.

Which should allow existing Open Source forensic tooling to be able to process this file type.

[preface]
== Document information

[cols="1,5"]
|===
| Author(s): | Joachim Metz <joachim.metz@gmail.com>
| Abstract: | This document contains information about the Personal Folder File format.
| Classification: | Public
| Keywords: | MAPI, Message API
|===

[preface]
== License

....
Copyright (C) 2008-2022, Joachim Metz <joachim.metz@gmail.com>.
Permission is granted to copy, distribute and/or modify this document under the
terms of the GNU Free Documentation License, Version 1.3 or any later version
published by the Free Software Foundation; with no Invariant Sections, no
Front-Cover Texts, and no Back-Cover Texts. A copy of the license is included
in the section entitled "GNU Free Documentation License".
....

[preface]
== Revision history

[cols="1,1,1,5",options="header"]
|===
| Version | Author | Date | Comments
| 0.0.1 | J.B. Metz | January 2009 | Initial version based on PFF documentation.
| 0.0.2 | J.B. Metz | February 2009 | Added additional information.
| 0.0.3 | J.B. Metz | March 2009 | Added types encountered by C. Byington of the libpst project. +
Added long property types. +
Updated with information from libmapi-0.8.2 +
Worked on to dos.
| 0.0.4 | J.B. Metz | March 2009 | Additional information and corrections. +
Added NT security descriptor information. +
Additional information about several MAPI data types.
| 0.0.5 | J.B. Metz | April 2009 | Small fixes and additions.
| 0.0.6 | J.B. Metz | May 2009 | Update for recipient types based on patch by K. Mazur.
| 0.0.7 | J.B. Metz | May 2009 | Added information about MAPI X.400 object identifiers
| 0.0.8 | J.B. Metz | May 2009 | Added information about conversation index +
Update for multi value string based on patch by W. Brown
| 0.0.9 | J.B. Metz | June 2009 | Added information about MAPI definitions
| 0.0.10 | J.B. Metz | June 2009 | Corrected multi value for non variable sized types.
| 0.0.11 | J.B. Metz | July 2009 | Moved the NT security descriptor specification to a separate
document.
| 0.0.12 | J.B. Metz | July 2009 | Added information about MAPI definitions
| 0.0.13 | J.B. Metz | August 2009 | Correction for Conversation Index value. +
Added information about MAPI definitions
| 0.0.14 | J.B. Metz | September 2009 | Added information about invalid message body codepage.
| 0.0.15 | J.B. Metz | October 2009 | Additional findings.
| 0.0.16 | J.B. Metz | January 2010 | Additional findings from `[MS-PST]` +
Update value type identifiers to new format.
| 0.0.17 | J.B. Metz | April 2010 | Additional information about codepage 1200.
| 0.0.18 | J.B. Metz | June 2010 | Additional information about Exchange MAPI properties.
| 0.0.19 | J.B. Metz | July 2010 | Additional information about IPM classes.
| 0.0.20 | J.B. Metz | October 2010 | Additional information about one-off entry identifier
| 0.0.21 | J.B. Metz | January 2011 | License version update
Additional information about MAPI properties
| 0.0.22 | J.B. Metz | March 2012 | Moved locale identifier (LCID) to separate document.
| 0.0.23 | J.B. Metz | April 2012 | Small changes to codepage definitions
| 0.0.24 | J.B. Metz | May 2012 | Additional information.
| 0.0.25 | J.B. Metz | July 2012 | Email change.
| 0.0.26 | J.B. Metz | August 2012 | Updated references.
| 0.0.27 | J.B. Metz | February 2013 | Additional information.
| 0.0.28 | J.B. Metz | February 2013 | Additional information.
| 0.0.29 | J.B. Metz | August 2013 | Additional information with thanks to J. Lohman.
| 0.0.30 | J.B. Metz | November 2016 | Switched to asciidoc format.
| 0.0.31 | J.B. Metz | February 2022 | Migrated documentation and changes to formatting.
|===

:numbered:
== Overview

The Microsoft (Office) Outlook Messaging API (MAPI) is used in multiple file
formats. It is known to be used in the following file formats:

* Exchange MAPI database (MDB) on top of the Extensible Storage Engine Database format (EDB)
* Nickfile (NK2)
* Personal Folder File (PST, OST, PAB)

== Data types

The MAPI defines property data types. These are identified by Ptyp or PT_. In this document the
data types are referred to as value types.

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x0000 | PtypUnspecified +
(PT_UNSPECIFIED, PT_UNKNOWN) | Reserved for interface use (type is not important to caller)
| 0x0001 | PtypNull +
(PT_NULL) | NULL (empty value)
| 0x0002 | PtypInteger16 +
(PT_SHORT, PT_I2) | Integer 16-bit signed
| 0x0003 | PtypInteger32 +
(PT_LONG, PT_I4) | Integer 32-bit signed
| 0x0004 | PtypFloating32 +
(PT_FLOAT, PT_R4) | Floating point single precision (32-bit)
| 0x0005 | PtypFloating64 +
(PT_DOUBLE, PT_R8) | Floating point double precision (64-bit)
| 0x0006 | PtypCurrency
(PT_CURRENCY) | Currency (64-bit) +
See section: <<currency,Currency>>
| 0x0007 | PtypFloatingTime +
(PT_APPTIME) | Floating (or application) Time (64-bit) +
The floating time is a double precision floating point and contains the whole number part represents the number of days since December 30, 1899, and the fractional part represents the fraction of a day since midnight.
| | |
| 0x000a | PtypErrorCode +
(PT_ERROR) | Error value (32-bit) +
SCODE +
See section: <<error_values,Error values (SCODE)>>
| | |
| 0x000b | PtypBoolean +
(PT_BOOLEAN) | Boolean +
0 == false, 0 != true +
Some Microsoft documentation states it to be 8-bit strictly using 0 = false and 1 = true
| | |
| 0x000d | PtypObject, PtypEmbeddedTable +
(PT_OBJECT) | Embedded COM object or table +
Variable of size
| | |
| 0x0014 | PtypInteger64
(PT_LONGLONG, PT_I8) | Integer 64-bit signed
| | |
| 0x001e | PtypString8 +
(PT_STRING8) | (extended) ASCII or Single Byte Character (SBC) string +
The string in the file is not always terminated by a end-of-string character +
The string is formatted using a code page.
| 0x001f | PtypString +
(PT_UNICODE) | Unicode string +
The string uses UTF-16 little-endian (LE) without the byte order mark (BOM) +
The string in the file is not always terminated by a end-of-string character
| | |
| 0x0040 | PtypTime +
(PT_SYSTIME) | Windows FILETIME or System Time (64-bit) +
See section: <<filetime,FILETIME>>
| | |
| 0x0048 | PtypGuid +
(PT_CLSID) | (OLE) GUID or Class identifier (128-bit) +
See section: <<guid,GUID>>
| | |
| 0x00fb | PtypServerId +
(PT_SVREID) | Server identifier
Variable of size +
Contains a 16-bit count followed by server identifier structure
| | |
| 0x00fd | PtypRestriction +
(PT_SRESTRICT) | Restriction +
Variable of size +
Contains an array of restriction structure
| 0x00fe | PtypRuleAction +
(PT_ACTIONS) | Rule actions +
Variable of size +
Contains a 16-bit count followed by rule actions structure
| | |
| 0x0102 | PtypBinary +
(PT_BINARY) | Binary data +
Variable of size
| | |
| 0x1002 | PtypMultipleInteger16 +
(PT_MV_SHORT, PT_MV_I2) | Array of Integer 16-bit signed values
| 0x1003 | PtypMultipleInteger32 +
(PT_MV_LONG, PT_MV_I4) | Array of Integer 32-bit signed values
| 0x1004 | PtypMultipleFloating32 +
(PT_MV_FLOAT, PT_MV_R4) | Array of Floating point single precision (32-bit) values
| 0x1005 | PtypMultipleFloating64 +
(PT_MV_DOUBLE, PT_MV_R8) | Array of Floating point double precision (64-bit) values
| 0x1006 | PtypMultipleCurrency +
(PT_MV_CURRENCY) | Array of Currency values
| 0x1007 | PtypMultipleFloatingTime +
(PT_MV_APPTIME) | Array of Floating time values
| | |
| 0x1014 | PtypMultipleInteger64 +
(PT_MV_LONGLONG, PT_MV_I8) | Array of Integer 64-bit signed values
| | |
| 0x101e | PtypMultipleString8 +
(PT_MV_STRING8) | Array of (extended) ASCII or SBC string values
| 0x101f | PtypMultipleString +
(PT_MV_UNICODE) | Array of Unicode (UTF-16 LE) string values
| | |
| 0x1040 | PtypMultipleTime +
(PT_MV_SYSTIME) | Array of Windows Filetime (64-bit) values
| | |
| 0x1048 | PtypMultipleGuid +
(PT_MV_CLSID) | Array of GUID (Class identifier) values
| | |
| 0x1102 | PtypMultipleBinary +
(PT_MV_BINARY) | Array of Binary data values
|===

....
0x1000 => Multi value flag
0x2000 => Multi instance flag
....

=== [[currency]]Currency

a 32-bit low part and a 32-bit high part
It contains a scaled integer representation of a decimal number with four digits to the right of the decimal point. For example, a stored value of 327500 represents a currency value of 32.7500.

=== [[filetime]]FILETIME

a 32-bit low part and a 32-bit high part
It contains the number of 100ns periods since January 1, 1601

=== [[guid]]GUID

Unsigned 32-bit Integer, Unsigned 16-bit Integer, Unsigned 16-bit Integer, 8 byte array

=== Array (multi) value types

The array (multi) value types are variable size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | ... | | The element data dependent on the size of the type
|===

The array (multi) value types of an ASCII and Unicode string and Binary Data
are variable size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | The number of elements
| 4 | (amount x 4) | | Byte offset of the element data
| ... | ... | | (The element data)
|===

The byte offsets can contain duplicate values. This is used to indicate
an empty value (NULL). Note that the array (multi) value type can consist
of a single element.

=== Server identifier structure

The server identifier refers to either a folder or message object. The server
identifier structure consist of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 1 | | Structure definition used +
0x00 => custom definition +
0x01 => Microsoft definition
| 1 | 8 | | Folder identifier
| 9 | 8 | | Message identifier
| 17 | 4 | | Index within an array of server identifiers
|===

== The property identifiers

The MAPI defines property identifiers/names. These are identified by PidTag,
ptag or `PR_`. The property type is a combination of the item type and the item
value type. Transmittable properties are transferred with a message;
nontransmittable properties are not transferred with a message. Nontransmittable
properties usually contain information that is of value only to clients and
service providers operating with the current session.

[cols="1,5",options="header"]
|===
| Type | Description
| 0x0000 | Reserved for the special value PR_NULL (reserved by MAPI)
| 0x0001 – 0x0bff | Message envelope properties (defined by MAPI)
| 0x0c00 – 0x0dff | Recipient properties (defined by MAPI)
| 0x0e00 – 0x0fff | Non-transmittable message properties (defined by MAPI)
| 0x1000 – 0x2fff | Message content properties (defined by MAPI)
| 0x3000 - 0x33ff | Common object properties that appear on multiple objects (defined by MAPI)
| 0x3400 - 0x35ff | Message store properties (defined by MAPI)
| 0x3600 - 0x36ff | Folder and address book container properties (defined by MAPI)
| 0x3700 – 0x38ff | Attachment properties (defined by MAPI)
| 0x3900 – 0x39ff | Address book properties (defined by MAPI)
| 0x3a00 – 0x3bff | Messaging user properties (defined by MAPI)
| 0x3c00 – 0x3cff | Distribution list properties (defined by MAPI)
| 0x3d00 – 0x3dff | Profile properties (defined by MAPI)
| 0x3e00 – 0x3fff | Status object properties (defined by MAPI)
| 0x4000 - 0x57ff | Message envelope properties (defined by transport providers)
| 0x5800 – 0x5fff | Recipient properties (defined by transport and address book providers)
| 0x6000 - 0x65ff | Non-transmittable message properties (defined by clients)
| 0x6600 – 0x67ff | Non-transmittable properties (defined by a service provider) +
These properties can be visible or invisible to users.
| 0x67f0 – 0x67ff | Secure profile properties +
These properties can be hidden and encrypted.
| 0x6800 – 0x7bff | Message content properties for custom message classes (defined by creators of those classes)
| 0x7c00 – 0x7fff | Non-transmittable properties for custom message classes (defined by creators of those classes)
| 0x8000 – 0xfffe | Named properties (defined by clients and occasionally service providers) +
These properties are identified by name through the IMAPIProp::GetNamesFromIDs and IMAPIProp::GetIDsFromNames methods.
| 0xffff | Special error value PROP_ID_INVALID (reserved by MAPI)
|===

MAPI uses the `_A` and `_W` additives to signify if the property is an ASCII
(single byte character) or a Wide (multiple byte character) string. This
document does not bother with this distinction. The additive `_O` is used for
some types, it refers to the direct use of embedded object instead of data types.

=== Reserved (0x0000)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x0000 | 0x0001 (NULL) | PidTagNull +
(PR_NULL) | NULL value +
Represents a null value or setting of a property or reserves array space.
|===

=== Message envelope properties (0x0001 – 0x0bff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x0001 | 0x0003 (Integer 32-bit signed) | PidTagAcknowledgementMode +
(PR_ACKNOWLEDGEMENT_MODE) | Acknowledgment mode +
Contains the identifier of the mode for message acknowledgment. +
See section: <<acknowledgment_mode_definitions,Acknowledgment mode definitions>>
| 0x0002 | 0x000b (Boolean) | PidTagAlternateRecipientAllowed +
(PR_ALTERNATE_RECIPIENT_ALLOWED) | Alternate recipient allowed +
Contains TRUE if the sender permits auto forwarding of this message.
| | 0x001e (ASCII string) +
0x001f (Unicode string) | | [yellow-background]*Unknown*
| 0x0003 | 0x0102 (Binary data) | PidTagAuthorizingUsers +
(PR_AUTHORIZING_USERS) | Authorized users +
Contains a list of entry identifiers for users who have authorized the sending of a message.
| 0x0004 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAutoForwardComment +
(PR_AUTO_FORWARD_COMMENT) | Auto forward comment +
Contains a comment added by the auto-forwarding agent.
| 0x0005 | 0x000b (Boolean) | PidTagAutoForwarded +
(PR_AUTO_FORWARDED) | Auto forwarded +
Contains TRUE if the client requests an X-MS-Exchange-Organization-AutoForwarded header field.
| 0x0006 | 0x0102 (Binary data) | PidTagContentConfidentialityAlgorithmId +
(PR_CONTENT_CONFIDENTIALITY_ALGORITHM_ID) | Content confidentiality algorithm identifier +
Contains an identifier for the algorithm used to confirm message content confidentiality.
| 0x0007 | 0x0102 (Binary data) | PidTagContentCorrelator +
(PR_CONTENT_CORRELATOR) | Original content correlator +
Contains a value the message sender can use to match a report with the original message.
| 0x0008 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagContentIdentifier +
(PR_CONTENT_IDENTIFIER) | Content identifier +
Contains a key value that enables the message recipient to identify its content.
| 0x0009 | 0x0003 (Integer 32-bit signed) | PidTagContentLength +
(PR_CONTENT_LENGTH) | Content length +
Contains the message size in bytes.
| 0x000a | 0x000b (Boolean) | PidTagContentReturnRequested +
(PR_CONTENT_RETURN_REQUESTED) | Content return requested +
Contains TRUE if a message should be returned with a nondelivery report.
| 0x000b | 0x0102 (Binary data) | PidTagConversationKey +
(PR_CONVERSATION_KEY) | Conversation key +
Contains the mail conversation key which consists of a GUID
| 0x000c | 0x0102 (Binary data) | PidTagConversionEits +
(PR_CONVERSION_EITS) | Conversion encoded information types +
Contains the encoded information types (EITs) that are applied to a message in transit to describe conversions.
| 0x000d | 0x000b (Boolean) | PidTagConversionWithLossProhibited +
(PR_CONVERSION_WITH_LOSS_PROHIBITED) | Text conversions that loose information is prohibited
| 0x000e | 0x0102 (Binary data) | PidTagConvertedEits +
(PR_CONVERTED_EITS) | Encoded information types (EITS) conversation identifier +
Contains a conversion identifier for the types of text in a message.
| 0x000f | 0x0040 (Filetime) | PidTagDeferredDeliveryTime +
(PR_DEFERRED_DELIVERY_TIME) | Sender requested delivery date and time +
Contains the date and time when a message sender wants a message delivered.
| 0x0010 | 0x0040 (Filetime) | PidTagDeliverTime +
(PR_DELIVER_TIME) | Message delivery time +
Contains the date and time when the original message was delivered.
| 0x0011 | 0x0003 (Integer 32-bit signed) | PidTagDiscardReason +
(PR_DISCARD_REASON) | Message discard reason +
Contains a reason why a message transfer agent (MTA) has discarded a message.
| 0x0012 | 0x000b (Boolean) | PidTagDisclosureOfRecipients +
(PR_DISCLOSURE_OF_RECIPIENTS) | Disclosure of recipient allowed
| 0x0013 | 0x0102 (Binary data) | PidTagDistributionListExpansionHistory +
(PR_DL_EXPANSION_HISTORY) | Distribution list expansion history +
Contains a history showing how a distribution list has been expanded during message transmission.
| 0x0014 | 0x000b (Boolean) | PidTagDistributionListExpansionProhibited +
(PR_DL_EXPANSION_PROHIBITED) | Expansion of distribution list is prohibited
| 0x0015 | 0x0040 (Filetime) | PidTagExpiryTime +
(PR_EXPIRY_TIME) | Message expiry time +
Contains the date and time when the messaging system can invalidate the content of a message.
| 0x0016 | 0x000b (Boolean) | PidTagImplicitConversionProhibited +
(PR_IMPLICIT_CONVERSION_PROHIBITED) | Implicit message text conversions prohibited
| 0x0017 | 0x0003 (Integer 32-bit signed) | PidTagImportance +
(PR_IMPORTANCE) | Importance +
Contains a value that indicates the message sender's opinion of the importance of a message. +
See section: <<importance_definitions,Importance definitions>>
| 0x0018 | 0x0102 (Binary data) | PR_IPM_ID | Interpersonal message X400 identifier +
[yellow-background]*(No longer supported as of ...)*
| 0x0019 | 0x0040 (Filetime) | PidTagLatestDeliveryTime +
(PR_LATEST_DELIVERY_TIME) | Latest message delivery time +
Contains the latest date and time when a message transfer agent (MTA) should deliver a message.
| 0x001a | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagMessageClass +
(PR_MESSAGE_CLASS) | Message class +
Contains a text string that identifies the sender-defined message class. +
See section: <<message_class_definitions,Message class definitions>>
| | 0x0040 (Filetime) | | [yellow-background]*Unknown*
| 0x001b | 0x0102 (Binary data) | PidTagMessageDeliveryId +
(PR_MESSAGE_DELIVERY_ID) | Message delivery identifier
| 0x001b | 0x0102 (Binary data) | PidTagMessageDeliveryId +
(PR_MESSAGE_DELIVERY_ID) | Message delivery identifier
4+|
| 0x001e | 0x0102 (Binary data) | PidTagMessageSecurityLabel +
(PR_MESSAGE_SECURITY_LABEL) | Message security label
| 0x001f | 0x0102 (Binary data) | PidTagObsoletedMessageIds +
(PR_OBSOLETED_IPMS) | Obsolete message identifiers +
Contains the identifiers of messages that this message supersedes. +
[yellow-background]*Search key format*
| 0x0020 | 0x0102 (Binary data) | PidTagOriginallyIntendedRecipientName +
(PR_ORIGINALLY_INTENDED_RECIPIENT_NAME) | Originally intended recipient name +
Contains the encoded name of the originally intended recipient of an autoforwarded message.
| 0x0021 | 0x0102 (Binary data) | PidTagOriginalEits +
(PR_ORIGINAL_EITS) | Message text original encoded information types (EITS)
| 0x0022 | 0x0102 (Binary data) | PidTagOriginatorCertificate +
(PR_ORIGINATOR_CERTIFICATE) | Originator certificate +
Contains an ASN.1 authentication certificate
| 0x0023 | 0x000b (Boolean) | PidTagOriginatorDeliveryReportRequested +
(PR_ORIGINATOR_DELIVERY_REPORT_REQUESTED) | Originator delivery report requested +
Contains TRUE if a message sender requests a delivery report for a particular recipient from the messaging system before the message is placed in the message store.
| | 0x0102 (Binary data) | | [yellow-background]*Unknown*
| 0x0024 | 0x0102 (Binary data) | PidTagOriginatorReturnAddress +
(PR_ORIGINATOR_RETURN_ADDRESS) | Originator return address +
Contains the binary-encoded return address of the message originator.
| 0x0025 | 0x0102 (Binary data) | PidTagParentKey +
(PR_PARENT_KEY) | Parent key +
Contains the search key that is used to correlate the original message and the reports about the original message. +
[yellow-background]*Contains a GUID*
| 0x0026 | 0x0003 (Integer 32-bit signed) | PidTagPriority +
(PR_PRIORITY) | Priority +
See section: <<priority_definitions,Priority definitions>>
| 0x0027 | 0x0102 (Binary data) | PidTagOriginCheck +
(PR_ORIGIN_CHECK) | Origin verification value +
Contains a binary verification value that enables a delivery report recipient to verify the origin of the original message.
| 0x0028 | 0x000b (Boolean) | PidTagProofOfSubmissionRequested +
(PR_PROOF_OF_SUBMISSION_REQUESTED) | ASN.1 proof of submission requested
| 0x0029 | 0x000b (Boolean) | PidTagReadReceiptRequested +
(PR_READ_RECEIPT_REQUESTED) | Read receipt requested +
Contains TRUE if a message sender wants the messaging system to generate a read report when the recipient has read a message.
| 0x002a | 0x0040 (Filetime) | PidTagReceiptTime +
(PR_RECEIPT_TIME) | Receipt time +
Contains the date and time a delivery report is generated.
| 0x002b | 0x000b (Boolean) | PidTagRecipientReassignmentProhibited +
(PR_RECIPIENT_REASSIGNMENT_PROHIBITED) | Recipient reassignment prohibited +
Specifies whether adding additional recipients, when forwarding the message, is prohibited for the e-mail message.
| 0x002c | 0x0102 (Binary data) | PR_REDIRECTION_HISTORY | [yellow-background]*Unknown*
| 0x002d | 0x0102 (Binary data) | PR_RELATED_IPMS | [yellow-background]*Unknown*
| 0x002e | 0x0003 (Integer 32-bit signed) | PidTagOriginalSensitivity +
(PR_ORIGINAL_SENSITIVITY) | Original sensitivity +
Contains the sensitivity value assigned by the sender of the first version of a message that is, the message before being forwarded or replied to. +
See section: <<sensitivity_definitions,Sensitivity definitions>>
| 0x002f | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_LANGUAGES | [yellow-background]*Unknown*
| 0x0030 | 0x0040 (Filetime) | PidTagReplyTime +
(PR_REPLY_TIME) | Reply deadline +
Specifies the reply deadline on a message.
| 0x0031 | 0x0102 (Binary data) | PidTagReportTag +
(PR_REPORT_TAG) | Report tag +
Contains a binary tag value that the messaging system should copy to any report generated for the message.
| 0x0032 | 0x0040 (Filetime) | PR_REPORT_TIME | [yellow-background]*Unknown*
| 0x0033 | 0x000b (Boolean) | PR_RETURNED_IPM | [yellow-background]*Unknown*
| 0x0034 | 0x0003 (Integer 32-bit signed) | PidTagSecurity +
(PR_SECURITY) | Security +
[yellow-background]*Unknown, deprecated according to MSDN*
| | 0x0102 | | [yellow-background]*Unknown* +
Contains: 4 bytes unknown, 16 bytes GUID, 4 bytes unknown, ENTRYID?
| 0x0035 | 0x000b (Boolean) | PR_INCOMPLETE_COPY | [yellow-background]*Unknown*
| 0x0036 | 0x0003 (Integer 32-bit signed) | PidTagSensitivity +
(PR_SENSITIVITY) | Sensitivity +
Contains a value that indicates the message sender's opinion of the sensitivity of a message. +
See section: <<sensitivity_definitions,Sensitivity definitions>>
| 0x0037 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagSubject +
(PR_SUBJECT) | Subject +
Contains the full subject of a message. +
The subject can start with 2 characters of control codes see section: <<subject_control_codes,Subject control codes>>
| 0x0038 | 0x0102 (Binary data) | PidTagSubjectMessageId +
(PR_SUBJECT_IPM) | Subject message identifier +
Contains a binary value that is copied from the message for which a report is being generated.
| 0x0039 | 0x0040 (Filetime) | PidTagClientSubmitTime +
(PR_CLIENT_SUBMIT_TIME) | Client submit time +
Contains the date and time the message sender submitted a message.
| 0x003a | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_REPORT_NAME | [yellow-background]*Unknown*
| 0x003b | 0x001e (ASCII string) +
0x001f (Unicode string) | | [yellow-background]*Unknown*
| | 0x0102 (Binary data) | PidTagSentRepresentingSearchKey +
(PR_SENT_REPRESENTING_SEARCH_KEY) | Sent representing search key
Contains ASCII NUL-terminated string. +
Contains the search key for the messaging user represented by the sender.
| 0x003c | 0x0102 (Binary data) | PR_X400_CONTENT_TYPE | [yellow-background]*Unknown*
| 0x003d | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagSubjectPrefix +
(PR_SUBJECT_PREFIX) | Subject prefix _
Contains a subject prefix that typically indicates some action on a message, such as "FW: " for forwarding.
| 0x003e | 0x0003 (Integer 32-bit signed) | PR_NON_RECEIPT_REASON | [yellow-background]*Unknown*
| 0x003f | 0x0102 (Binary data) | PidTagReceivedByEntryId +
(PR_RECEIVED_BY_ENTRYID) | Received by entry identifier +
Contains the entry identifier for the messaging user represented by the sender. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x0040 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagReceivedByName +
(PR_RECEIVED_BY_NAME) | Received by name
| 0x0041 | 0x0102 (Binary data) | PidTagSentRepresentingEntryId +
(PR_SENT_REPRESENTING_ENTRYID) | Sent representing entry identifier _
Contains recipient/sender structure +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x0042 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagSentRepresentingName +
(PR_SENT_REPRESENTING_NAME) | Sent representing name +
Contains the display name for the messaging user represented by the sender.
| 0x0043 | 0x0102 (Binary data) | PR_RCVD_REPRESENTING_ENTRYID | Received representing entry identifier +
Contains recipient/sender structure +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x0044 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_RCVD_REPRESENTING_NAME | Received representing name
| 0x0045 | 0x0102 (Binary data) | PR_REPORT_ENTRYID | Report entry identifier +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x0046 | 0x0102 (Binary data) | PR_READ_RECEIPT_ENTRYID | Read receipt entry identifier +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x0047 | 0x0102 (Binary data) | PR_MESSAGE_SUBMISSION_ID | [yellow-background]*Unknown*
| 0x0048 | 0x0040 (Filetime) | PR_PROVIDER_SUBMIT_TIME | [yellow-background]*Unknown*
| 0x0049 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalSubject +
(PR_ORIGINAL_SUBJECT) | Original subject +
Contains the subject of an original message for use in a report about the message.
| 0x004a | 0x000b (Boolean) | PR_DISC_VAL | [yellow-background]*Unknown*
| 0x004b | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_ORIG_MESSAGE_CLASS | [yellow-background]*Unknown*
| 0x004c | 0x0102 (Binary data) | PidTagOriginalAuthorEntryId +
(PR_ORIGINAL_AUTHOR_ENTRYID) | Original author entry identifier +
Contains the entry identifier of the author of the first version of a message, that is, the message before being forwarded or replied to. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x004d | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalAuthorName +
(PR_ORIGINAL_AUTHOR_NAME) | Original author name +
Contains the display name of the author of the first version of a message, that is, the message before being forwarded or replied to.
| 0x004e | 0x0040 (Filetime) | PidTagOriginalSubmitTime +
(PR_ORIGINAL_SUBMIT_TIME) | Original submit time +
Contains the original submission date and time of the message in the report.
| 0x004f | 0x0102 (Binary data) | PR_REPLY_RECIPIENT_ENTRIES | Reply recipients entries +
[yellow-background]*Unknown contents*
| 0x0050 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagReplyRecipientEntries +
(PR_REPLY_RECIPIENT_NAMES) | Reply recipients names
| 0x0051 | 0x0102 (Binary data) | PR_RECEIVED_BY_SEARCH_KEY | Received by search key +
Contains ASCII string with end-of-string character
| 0x0052 | 0x0102 (Binary data) | PR_RCVD_REPRESENTING_SEARCH_KEY | Received representing search key +
Contains ASCII string with end-of-string character
| 0x0053 | 0x0102 (Binary data) | PR_READ_RECEIPT_SEARCH_KEY | [yellow-background]*Unknown*
| 0x0054 | 0x0102 (Binary data) | PR_REPORT_SEARCH_KEY | [yellow-background]*Unknown*
| 0x0055 | 0x0040 (Filetime) | PR_ORIGINAL_DELIVERY_TIME | [yellow-background]*Unknown*
| 0x0056 | 0x0102 (Binary data) | PR_ORIGINAL_AUTHOR_SEARCH_KEY | [yellow-background]*Unknown*
| 0x0057 | 0x000b (Boolean) | PidTagMessageToMe +
(PR_MESSAGE_TO_ME) | My address in To field +
Contains TRUE if this messaging user is specifically named as a primary (To) recipient of this message and is not part of a distribution list.
| 0x0058 | 0x000b (Boolean) | PidTagMessageCcMe +
(PR_MESSAGE_CC_ME) | My address in CC field +
Contains TRUE if this messaging user is specifically named as a carbon copy (CC) recipient of this message and is not part of a distribution list.
| 0x0059 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagMessageRecipientMe +
(PR_MESSAGE_RECIP_ME) | Message addressed to me +
Contains TRUE if this messaging user is specifically named as a primary (To), carbon copy (CC), or blind carbon copy (BCC) recipient of this message and is not part of a distribution list.
| 0x005a | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalSenderName +
(PR_ORIGINAL_SENDER_NAME) | Original sender name +
Contains the display name of the sender of the first version of a message, that is, the message before being forwarded or replied to.
| 0x005b | 0x0102 (Binary data) | PidTagOriginalSenderEntryId +
(PR_ORIGINAL_SENDER_ENTRYID) | Original sender entry identifier +
Contains the entry identifier of the sender of the first version of a message, that is, the message before being forwarded or replied to. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x005c | 0x0102 (Binary data) | PidTagOriginalSenderSearchKey +
(PR_ORIGINAL_SENDER_SEARCH_KEY) | Original sender search key +
Contains the search key for the sender of the first version of a message, that is, the message before being forwarded or replied to.
| 0x005d | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalSentRepresentingName +
(PR_ORIGINAL_SENT_REPRESENTING_NAME) | Original sent representing name +
Contains the display name of the messaging user on whose behalf the original message was sent.
| 0x005e | 0x0102 (Binary data) | PidTagOriginalSentRepresentingEntryId +
(PR_ORIGINAL_SENT_REPRESENTING_ENTRYID) | Original sent representing entry identifier +
Contains the entry identifier of the messaging user on whose behalf the original message was sent.
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x005f | 0x0102 (Binary data) | PidTagOriginalSentRepresentingSearchKey +
(PR_ORIGINAL_SENT_REPRESENTING_SEARCH_KEY) | Original sent representing search key +
Contains the search key of the messaging user on whose behalf the original message was sent.
| 0x0060 | 0x0040 (Filetime) | PidTagStartDate +
(PR_START_DATE) | Appointment start date and time +
Contains the starting date and time of an appointment as managed by a scheduling application.
| 0x0061 | 0x0040 (Filetime) | PidTagEndDate +
(PR_END_DATE) | Appointment end date and time +
Contains the ending date and time of an appointment as managed by a scheduling application.
| 0x0062 | 0x0003 (Integer 32-bit signed) | PidTagOwnerAppointmentId +
(PR_OWNER_APPT_ID) | Appointment owner identifier +
Contains an identifier for an appointment in the owner's schedule.
| 0x0063 | 0x000b (Boolean) | PidTagResponseRequested +
(PR_RESPONSE_REQUESTED) | Response requested +
Contains TRUE if the message sender wants a response to a meeting request.
| 0x0064 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagSentRepresentingAddressType +
(PR_SENT_REPRESENTING_ADDRTYPE) | Sent representing address type +
Contains the address type for the messaging user who is represented by the sender. +
See section: <<address_type_definitions,Address type definitions>>
| 0x0065 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagSentRepresentingEmailAddress +
(PR_SENT_REPRESENTING_EMAIL_ADDRESS) | Sent representing e-mail address +
Contains the e-mail address for the messaging user who is represented by the sender.
| 0x0066 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalSenderAddressType +
(PR_ORIGINAL_SENDER_ADDRTYPE) | Original sender address type +
Contains the address type of the sender of the first version of a message, that is, the message before being forwarded or replied to. +
See section: <<address_type_definitions,Address type definitions>>
| 0x0067 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalSenderEmailAddress +
(PR_ORIGINAL_SENDER_EMAIL_ADDRESS) | Original sender e-mail address +
Contains the e-mail address of the sender of the first version of a message, that is, the message before being forwarded or replied to.
| 0x0068 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalSentRepresentingAddressType +
(PR_ORIGINAL_SENT_REPRESENTING_ADDRTYPE) | Original sent representing address type +
Contains the address type of the messaging user on whose behalf the original message was sent. +
See section: <<address_type_definitions,Address type definitions>>
| 0x0069 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalSentRepresentingEmailAddress +
(PR_ORIGINAL_SENT_REPRESENTING_EMAIL_ADDRESS) | Original sent representing e-mail address +
Contains the e-mail address of the messaging user on whose behalf the original message was sent.
| | | |
| 0x0070 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagConversationTopic +
(PR_CONVERSATION_TOPIC) | Conversation topic +
Contains the topic of the first message in a conversation thread.
| 0x0071 | 0x0102 (Binary data) | PidTagConversationIndex +
(PR_CONVERSATION_INDEX) | Conversation index +
Contains a binary value that indicates the relative position of this message within a conversation thread. +
See section: <<conversation_index_structure,conversation index structure>>
| 0x0072 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalDisplayBcc +
(PR_ORIGINAL_DISPLAY_BCC) | Original display BCC +
Contains the display names of any blind carbon copy (BCC) recipients of the original message.
| 0x0073 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalDisplayCc +
(PR_ORIGINAL_DISPLAY_CC) | Original display CC +
Contains the display names of any carbon copy (CC) recipients of the original message.
| 0x0074 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalDisplayTo +
(PR_ORIGINAL_DISPLAY_TO) | Original display TO +
Contains the display names of the primary (To) recipients of the original message.
| 0x0075 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagReceivedByAddressType +
(PR_RECEIVED_BY_ADDRTYPE) | Received by address type +
Contains the e-mail address type, such as SMTP, for the messaging user who actually receives the message. +
See section: <<address_type_definitions,Address type definitions>>
| 0x0076 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagReceivedByEmailAddress +
(PR_RECEIVED_BY_EMAIL_ADDRESS) | Received by e-mail address +
Contains the e-mail address for the messaging user who receives the message.
| 0x0077 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagReceivedRepresentingAddressType +
(PR_RCVD_REPRESENTING_ADDRTYPE) | Received representing address type +
Contains the address type for the messaging user who is represented by the user actually receiving the message. +
See section: <<address_type_definitions,Address type definitions>>
| 0x0078 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagReceivedRepresentingEmailAddress +
(PR_RCVD_REPRESENTING_EMAIL_ADDRESS) | Received representing e-mail address +
Contains the e-mail address for the messaging user who is represented by the receiving user.
| 0x0079 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalAuthorAddressType +
(PR_ORIGINAL_AUTHOR_ADDRTYPE) | Original author address type +
Contains the address type of the author of the first version of a message, that is, the message before being forwarded or replied to.
See section: <<address_type_definitions,Address type definitions>>
| 0x007a | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalAuthorEmailAddress +
(PR_ORIGINAL_AUTHOR_EMAIL_ADDRESS) | Original author e-mail address +
Contains the e-mail address of the author of the first version of a message, that is, the message before being forwarded or replied to.
| 0x007b | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginallyIntendedRecipAddrtype +
(PR_ORIGINALLY_INTENDED_RECIP_ADDRTYPE) | Originally intended recipient address type +
Contains the address type of the originally intended recipient of an auto-forwarded message. +
See section: <<address_type_definitions,Address type definitions>>
| 0x007c | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginallyIntendedRecipEmailAddress +
(PR_ORIGINALLY_INTENDED_RECIP_EMAIL_ADDRESS) | Originally intended recipient e-mail address +
Contains the e-mail address of the originally intended recipient of an autoforwarded message.
| 0x007d | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagTransportMessageHeaders +
(PR_TRANSPORT_MESSAGE_HEADERS) | Transport message headers +
Contains transport-specific message envelope information. These contain the SMTP e-mail headers.
| 0x007e | 0x0102 (Binary data) | PidTagDelegation +
(PR_DELEGATION) | Delegation +
[yellow-background]*Unknown, deprecated according to MSDN*
| 0x007f | 0x0102 (Binary data) | PidTagTnefCorrelationKey +
(PR_TNEF_CORRELATION_KEY) | TNEF correlation key +
Contains a value that correlates a Transport Neutral Encapsulation Format (TNEF) attachment with a message. +
[yellow-background]*Contains a single byte 0x00*
| 0x0080 | 0x001e (ASCII string) +
0x001f (Unicode string) | | [yellow-background]*Unknown (found in a message delivery report item)* +
Seen: "displayed"
| 0x0081 | 0x001e (ASCII string) +
0x001f (Unicode string) | | [yellow-background]*Unknown (found in a message delivery report item)* +
Seen: "automatic-action/MDN-sent-automatically"
| | | |
| 0x0083 | 0x101e (Array of ASCII string) +
0x101f (Array of Unicode string) | | [yellow-background]*Unknown (Contains sender name)*
| 0x0084 | 0x101e (Array of ASCII string) +
0x101f (Array of Unicode string) | | [yellow-background]*Unknown (Contains sender e-mail address)*
|===

=== Recipient properties (0x0c00 – 0x0dff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x0c00 | 0x0102 (Binary data) | PR_CONTENT_INTEGRITY_CHECK | [yellow-background]*Unknown*
| 0x0c01 | 0x0003 (Integer 32-bit signed) | PR_EXPLICIT_CONVERSION | [yellow-background]*Unknown*
| 0x0c02 | 0x000b (Boolean) | PidTagIpmReturnRequested +
(PR_IPM_RETURN_REQUESTED) | Return report requested +
Contains TRUE if this message should be returned with a report.
| 0x0c03 | 0x0102 (Binary data) | PidTagMessageToken +
(PR_MESSAGE_TOKEN) | Message ASN.1 secutiry token
| 0x0c04 | 0x0003 (Integer 32-bit signed) | PR_NDR_REASON_CODE | [yellow-background]*Unknown*
| 0x0c05 | 0x0003 (Integer 32-bit signed) | PR_NDR_DIAG_CODE | [yellow-background]*Unknown*
| 0x0c06 | 0x000b (Boolean) | PR_NON_RECEIPT_NOTIFICATION_REQUESTED | [yellow-background]*Unknown (Non receipt notification requested)*
| 0x0c07 | 0x0003 (Integer 32-bit signed) | PR_DELIVERY_POINT | [yellow-background]*Unknown*
| 0x0c08 | 0x000b (Boolean) | PR_ORIGINATOR_NON_DELIVERY_REPORT_REQUESTED | [yellow-background]*Unknown (Originator non delivery report requested)*
| 0x0c09 | 0x0102 (Binary data) | PR_ORIGINATOR_REQUESTED_ALTERNATE_RECIPIENT | [yellow-background]*Unknown*
| 0x0c0a | 0x000b (Boolean) | PR_PHYSICAL_DELIVERY_BUREAU_FAX_DELIVERY | [yellow-background]*Unknown*
| 0x0c0b | 0x0003 (Integer 32-bit signed) | PR_PHYSICAL_DELIVERY_MODE | [yellow-background]*Unknown*
| 0x0c0c | 0x0003 (Integer 32-bit signed) | PR_PHYSICAL_DELIVERY_REPORT_REQUEST | [yellow-background]*Unknown*
| 0x0c0d | 0x0102 (Binary data) | PR_PHYSICAL_FORWARDING_ADDRESS | [yellow-background]*Unknown*
| 0x0c0e | 0x000b (Boolean) | PR_PHYSICAL_FORWARDING_ADDRESS_REQUESTED | [yellow-background]*Unknown*
| 0x0c0f | 0x000b (Boolean) | PR_PHYSICAL_FORWARDING_PROHIBITED | [yellow-background]*Unknown*
| 0x0c10 | 0x0102 (Binary data) | PR_PHYSICAL_RENDITION_ATTRIBUTES | [yellow-background]*Unknown*
| 0x0c11 | 0x0102 (Binary data) | PR_PROOF_OF_DELIVERY | [yellow-background]*Unknown*
| 0x0c12 | 0x000b (Boolean) | PR_PROOF_OF_DELIVERY_REQUESTED | [yellow-background]*Unknown*
| 0x0c13 | 0x0102 (Binary data) | PidTagRecipientCertificate +
(PR_RECIPIENT_CERTIFICATE) | Recipient certificate +
Contains an ASN.1 authentication certificate
| 0x0c14 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_RECIPIENT_NUMBER_FOR_ADVICE | [yellow-background]*Unknown*
| 0x0c15 | 0x0003 (Integer 32-bit signed) | PidTagRecipientType +
(PR_RECIPIENT_TYPE) | Recipient type +
Contains the recipient type for a message recipient. +
See section: <<recipient_type_definitions,Recipient type definitions>>
| 0x0c16 | 0x0003 (Integer 32-bit signed) | PR_REGISTERED_MAIL_TYPE | [yellow-background]*Unknown*
| 0x0c17 | 0x000b (Boolean) | PR_REPLY_REQUESTED | Reply requested
| 0x0c18 | 0x0003 (Integer 32-bit signed) | PR_REQUESTED_DELIVERY_METHOD | [yellow-background]*Unknown*
| 0x0c19 | 0x0102 (Binary data) | PidTagSenderEntryId +
(PR_SENDER_ENTRYID) | Sender entry identifier +
Contains the message sender's entry identifier. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x0c1a | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagSenderName +
(PR_SENDER_NAME) | Sender name +
Contains the message sender's display name.
| 0x0c1b | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_SUPPLEMENTARY_INFO | [yellow-background]*Unknown*
| 0x0c1c | 0x0003 (Integer 32-bit signed) | PR_TYPE_OF_MTS_USER | [yellow-background]*Unknown*
| 0x0c1d | 0x0102 (Binary data) | PidTagSenderSearchKey +
(PR_SENDER_SEARCH_KEY) | Sender search key +
Contains the message sender's search key. Contains ASCII NUL-terminated string
| 0x0c1e | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagSenderAddressType +
(PR_SENDER_ADDRTYPE) | Sender address type +
Contains the message sender's e-mail address type. +
See section: <<address_type_definitions,Address type definitions>>
| 0x0c1f | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagSenderEmailAddress +
(PR_SENDER_EMAIL_ADDRESS) | Sender e-mail address +
Contains the message sender's e-mail address.
| 0x0c20 | 0x0003 (Integer 32-bit signed) | PR_NDR_STATUS_CODE | [yellow-background]*Unknown (None delivery status code)*
|===

=== Non-transmittable message properties (0x0e00 – 0x0fff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x0e00 | 0x0014 (Integer 64-bit signed) | PidTagCurrentVersion +
(PR_CURRENT_VERSION) | Message store verion +
Contain the current version of a message store.
| 0x0e01 | 0x000b (Boolean) | PidTagDeleteAfterSubmit +
(PR_DELETE_AFTER_SUBMIT) | Delete after submit +
Contains TRUE if a client application wants MAPI to delete the associated message after submission.
| 0x0e02 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagDisplayBcc +
(PR_DISPLAY_BCC) | Display BCC +
Contains an ASCII list of the display names of any blind carbon copy (BCC) message recipients, separated by semicolons (;).
| 0x0e03 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagDisplayCc +
(PR_DISPLAY_CC) | Display CC +
Contains an ASCII list of the display names of any carbon copy (CC) message recipients, separated by semicolons (;).
| 0x0e04 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagDisplayTo +
(PR_DISPLAY_TO) | Display To +
Contains a list of the display names of the primary (To) message recipients, separated by semicolons (;)
| 0x0e05 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagParentDisplay +
(PR_PARENT_DISPLAY) | Parent display name +
Contains the display name of the folder where a message was found during a search.
| 0x0e06 | 0x0040 (Filetime) | PidTagOriginalDeliveryTime +
(PR_MESSAGE_DELIVERY_TIME) | Message delivery time +
Contains a copy of the original message's delivery date and time in a thread.
| 0x0e07 | 0x0003 (Integer 32-bit signed) | PidTagMessageFlags +
(PR_MESSAGE_FLAGS) | Message flags +
Contains a bitmask of flags that indicate the origin and current state of a message. +
See section: <<message_flag_definitions,Message flag definitions>>
| 0x0e08 | 0x0003 (Integer 32-bit signed) | PidTagMessageSize +
(PR_MESSAGE_SIZE) | Message size +
Contains the sum, in bytes, of the sizes of all properties on a message object.
| | 0x0014 (Integer 64-bit signed) | PidTagMessageSizeExtended +
(PR_MESSAGE_SIZE_EXTENDED) | Message size +
Contains the sum, in bytes, of the sizes of all properties on a message object.
| 0x0e09 | 0x0102 (Binary data) | PidTagParentEntryId +
(PR_PARENT_ENTRYID) | Parent folder entry identifier +
Contains the entry identifier of the folder that contains a folder or message. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x0e0a | 0x0102 (Binary data) | PidTagSentMailEntryId +
(PR_SENTMAIL_ENTRYID) | Sent mail folder entry identifier +
Contains the entry identifier of the folder where the message should be moved after submission. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x0e0b | 0x000b (Boolean) | PidTagCorrelate +
(PR_CORRELATE) | Correlation requested +
Contains TRUE if the sender of a message requests the correlation feature of the messaging system.
| 0x0e0c | 0x0102 (Binary data) | PidTagCorrelateMtsid +
(PR_CORRELATE_MTSID) | Correlation  message transfer system identifier +
Contains the message transfer system (MTS) identifier used in correlating reports with sent messages
| 0x0e0e | 0x000b (Boolean) | PidTagDiscreteValues +
(PR_DISCRETE_VALUES) | Report applies to specific members only +
Contains TRUE if a nondelivery report applies only to discrete members of a distribution list rather than the entire list.
| 0x0e0f | 0x000b (Boolean) | PidTagResponsibility +
(PR_RESPONSIBILITY) | Transport provider has responsibility +
Contains TRUE if some transport provider has already accepted responsibility for delivering the message to this recipient, and FALSE if the MAPI spooler considers that this transport provider should accept responsibility.
| 0x0e10 | 0x0003 (Integer 32-bit signed) | PidTagSpoolerStatus +
(PR_SPOOLER_STATUS) | Spooler status +
Contains the status of the message based on information that is available to the MAPI spooler.
| 0x0e11 | 0x0003 (Integer 32-bit signed) | PR_TRANSPORT_STATUS | [yellow-background]*Unknown*
| 0x0e12 | 0x000d (Embedded object) | PR_MESSAGE_RECIPIENTS | [yellow-background]*Unknown*
| 0x0e13 | 0x000d (Embedded object) | PR_MESSAGE_ATTACHMENTS | [yellow-background]*Unknown*
| 0x0e14 | 0x0003 (Integer 32-bit signed) | PidTagSubmitFlags +
(PR_SUBMIT_FLAGS) | Message submit flags +
Contains a bitmask of flags indicating details about a message submission. +
See section: <<message_submit_flag_definitions,Message submit flag definitions>>
| 0x0e15 | 0x0003 (Integer 32-bit signed) | PR_RECIPIENT_STATUS | [yellow-background]*Unknown*
| 0x0e16 | 0x0003 (Integer 32-bit signed) | PR_TRANSPORT_KEY | [yellow-background]*Unknown*
| 0x0e17 | 0x0003 (Integer 32-bit signed) | PidTagMessageStatus +
(PR_MSG_STATUS) | Message status flags +
Contains a 32-bit bitmask of flags that defines the status of a message in a contents table. +
See section: <<message_status_flag_definitions,Message status flag definitions>>
| 0x0e18 | 0x0003 (Integer 32-bit signed) | PR_MESSAGE_DOWNLOAD_TIME | [yellow-background]*Unknown*
| 0x0e19 | 0x0014 (Integer 64-bit signed) | PR_CREATION_VERSION | [yellow-background]*Unknown*
| 0x0e1a | 0x0014 (Integer 64-bit signed) | PR_MODIFY_VERSION | [yellow-background]*Unknown*
| 0x0e1b | 0x000b (Boolean) | PR_HASATTACH | [yellow-background]*Unknown*
| 0x0e1c | 0x0003 (Integer 32-bit signed) | PidTagBodyCrc +
(PR_BODY_CRC) | Plain text message body checksum +
Contains a weak 32-bit cyclic redundancy check (CRC32) value on the message text.
| 0x0e1d | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagNormalizedSubject +
(PR_NORMALIZED_SUBJECT) | Normalized subject +
Contains the message subject with any prefix removed.
| | | |
| 0x0e1f | 0x000b (Boolean)
| PidTagRtfInSync +
(PR_RTF_IN_SYNC) | Compressed RTF message body in sync with plain text +
Contains TRUE if the PidTagRtfCompressed (PR_RTF_COMPRESSED) property has the same text content as the PidTagBody (PR_BODY) property for this message.
| 0x0e20 | 0x0003 (Integer 32-bit signed) | PidTagAttachSize +
(PR_ATTACH_SIZE) | Attachment size +
Contains the sum, in bytes, of the sizes of all properties on an attachment.
| 0x0e21 | 0x0003 (Integer 32-bit signed) | PidTagAttachNumber +
(PR_ATTACH_NUM) | Attachment number +
Contains a number that uniquely identifies the attachment within its parent message.
| 0x0e22 | 0x000b (Boolean) | PidTagPreprocess +
(PR_PREPROCESS) | Needs preprocessing +
Contains TRUE if the message requires preprocessing.
| 0x0e23 | 0x0003 (Integer 32-bit signed) | PidTagInternetArticleNumber +
(PR_INTERNET_ARTICLE_NUMBER) | Internet article number +
A number associated with an item in a message store.
| 0x0e24 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_NEWSGROUP_NAME | [yellow-background]*Unknown*
| 0x0e25 | 0x0102 (Binary data) | PR_ORIGINATING_MTA_CERTIFICATE | [yellow-background]*Unknown*
| 0x0e26 | 0x0102 (Binary data) | PR_PROOF_OF_SUBMISSION | [yellow-background]*Unknown*
| 0x0e27 | 0x0102 (Binary data) | PidTagSecurityDescriptor +
(PR_NT_SECURITY_DESCRIPTOR, ptagNTSD) | Permissions (NT security descriptor) +
Holds the NT security descriptors of the users or groups that can access the folder. +
See section: <<security_desciptor_structure,The security descriptor structure>>
| 0x0e28 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PRIMARY_SEND_ACCT +
(PROP_ACCT_SEND_STAMP) | Primary send account identifier +
Identifies the primary send account for a message.
| 0x0e29 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_NEXT_SEND_ACCT +
(PROP_ACCT_SEND_STAMP) | Secondary send account identifier +
Identifies the secondary send account for a message.
| 0x0e2a | 0x000b (Boolean) | | [yellow-background]*Unknown*
| | | |
| 0x0e30 | 0x0003 (Integer 32-bit signed) | PidTagReplItemid | Replication item identifier
| | 0x0102 (Binary data) | PidTagReplItemid +
(PR_REPL_ITEMID) | Replication item identifier +
[yellow-background]*Contains a GUID that maps to the contents of the 9c table in a PST.*
| 0x0e31 | 0x0102 (Binary data) | | [yellow-background]*Unknown*
| | | |
| 0x0e33 | 0x0014 (Integer 64-bit signed) | PidTagReplChangenum | Replication change number
| 0x0e34 | 0x0102 (Binary data) | PidTagReplVersionHistory | Replication version history +
[yellow-background]*Contains an entry identifier*
| | | |
| 0x0e37 | 0x0102 (Binary data) | | [yellow-background]*Unknown*
| 0x0e38 | 0x0003 (32-bit integer) | PidTagReplFlags | Replication flags +
[yellow-background]*TODO add specification*
| | | |
| 0x0e3c | 0x0102 (Binary data) | PidTagReplCopiedfromVersionhistory | Replication version information
| 0x0e3d | 0x0102 (Binary data) | PidTagReplCopiedfromItemid | Replication item identifier information
| 0x0e3e | 0x0102 (Binary data) | | [yellow-background]*Unknown*
| | | |
| 0x0e58 | 0x0102 (Binary data) | PR_CREATOR_SID | Creator (NT security identifier) +
For more information see `[NTSID]`.
| 0x0e59 | 0x0102 (Binary data) | PR_LAST_MODIFIER_SID | Last modifier (NT security identifier) +
For more information see `[NTSID]`.
| | | |
| 0x0e5e | 0x0048 (GUID) | PR_MIME_HANDLER_CLASSID | [yellow-background]*MIME handle class identifier*
| | 0x1048 (Array of GUID values) | PR_MIME_HANDLER_CLASSIDS | [yellow-background]*MIME handle class identifiers*
| | | |
| 0x0e61 | 0x0003 (Integer 32-bit signed) | PR_URL_COMP_NAME_POSTFIX | [yellow-background]*URL computer name postfix*
| 0x0e62 | 0x000b (Boolean) | PR_URL_COMP_NAME_SET | [yellow-background]*URL computer name set*
| 0x0e63 | 0x0003 (Integer 32-bit signed) | PR_SUBFOLDER_CT | [yellow-background]*Unknown*
| 0x0e64 | 0x0003 (Integer 32-bit signed) | PR_DELETED_SUBFOLDER_CT | [yellow-background]*Unknown*
| | | |
| 0x0e66 | 0x0040 (Filetime) | PR_DELETE_TIME | [yellow-background]*Unknown*
| 0x0e67 | 0x0102 (Binary data) | PR_AGE_LIMIT | [yellow-background]*Unknown*
| | | |
| 0x0e79 | 0x0003 (Integer 32-bit signed) | PR_TRUST_SENDER | [yellow-background]*Unknown*
| | | |
| 0x0e96 | 0x0102 (Binary data) | PR_ATTACH_VIRUS_SCAN_INFO | [yellow-background]*Unknown*
| | | |
| 0x0e99 | 0x0102 (Binary data) | | [yellow-background]*Unknown* +
[yellow-background]*In IPM.ExtendedRule.Message*
| 0x0e9a | 0x0102 (Binary data) | | [yellow-background]*Unknown* +
[yellow-background]*In IPM.ExtendedRule.Message*
| | | |
| 0x0ea0 | 0x0048 (GUID) | PR_ASSOCIATED_SHARING_PROVIDER PROP_TAG | [yellow-background]*Associated sharing provider identifier* +
[yellow-background]*Used for SharePoint PST files*
| | | |
| 0x0ea2 | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown*
| 0x0ea3 | 0x0102 (Binary data) | PidTagProviderItemId +
(PR_PROVIDER_ITEMID) | Provider identifier +
Specifies an identifier for a folder or an item in a store.
| 0x0ea4 | 0x0102 (Binary data) | PidTagProviderParentItemId +
(PR_PROVIDER_PARENT_ITEMID) | Parent provider identifier +
Specifies an identifier for the parent of a folder or an item in a store.
| | | |
| 0x0ff4 | 0x0003 (Integer 32-bit signed) | PidTagAccess +
(PR_ACCESS) | Client access flags +
Contains a bitmask of flags indicating the operations that are available to the client for the object. +
See section: <<access_flags_definitions,Access flags definitions>>
| 0x0ff5 | 0x0003 (Integer 32-bit signed) | PidTagRowType +
(PR_ROW_TYPE) | Row type +
See section: <<row_type_definitions,Row type definitions>>
| 0x0ff6 | 0x0003 (Integer 32-bit signed) | PidTagInstanceKey +
(PR_INSTANCE_KEY) | Instance key +
Contains the row identifier
| 0x0ff7 | 0x0003 (Integer 32-bit signed) | PidTagAccessLevel +
(PR_ACCESS_LEVEL) | Client access level flags +
See section: <<client_access_level_flags_definitions,Client access level flags definitions>>
| 0x0ff8 | 0x0102 (Binary data) | PidTagMappingSignature +
(PR_MAPPING_SIGNATURE) | Mapping signature +
Contains the mapping signature for named properties of a particular MAPI object.
| 0x0ff9 | 0x0102 (Binary data) | PidTagRecordKey +
(PR_RECORD_KEY) | Record key +
Contains a unique binary-comparable identifier for a specific object (GUID).
| 0x0ffa | 0x0102 (Binary data) | PidTagStoreRecordKey +
(PR_STORE_RECORD_KEY) | Message store record key +
Contains the unique binary-comparable identifier (record key) of the message store in which an object resides.
| 0x0ffb | 0x0102 (Binary data) | PidTagStoreEntryId +
(PR_STORE_ENTRYID) | Message store entry identifier +
Contains the unique entry identifier of the message store where an object resides. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x0ffc | 0x0102 (Binary data) | PidTagMiniIcon +
(PR_MINI_ICON) | Mini icon bitmap +
Contains a bitmap of a half-size icon (16 × 16 ICO) for a form.
| 0x0ffd | 0x0102 (Binary data) | PidTagIcon +
(PR_ICON) | Icon bitmap +
Contains a bitmap of a full size icon (32 x 32 ICO) for a form.
| 0x0ffe | 0x0003 (Integer 32-bit signed) | PidTagObjectType +
(PR_OBJECT_TYPE) | Object type +
Contains the type of an object. +
See section <<object_type,Object type>>
| 0x0fff | 0x0102 (Binary data) | PidTagEntryId +
(PR_ENTRYID) | Entry identifier +
Contains a MAPI entry identifier used to open and edit properties of a particular MAPI object. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
|===

=== Message content properties (0x1000 – 0x2fff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x1000 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagBody +
(PR_BODY) | Plain text message body +
Contains the message text. +
See section: <<message_body,The message body>>
| 0x1001 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagReportText +
(PR_REPORT_TEXT) | Report text +
Contains optional text for a report generated by the messaging system.
| 0x1002 | 0x0102 (Binary data) | PidTagOriginatorAndDistributionListExpansionHistory +
(PR_ORIGINATOR_AND_DL_EXPANSION_HISTORY) | Originator and distribution list expansion history +
Contains information about a message originator and a distribution list expansion history.
| 0x1003 | 0x0102 (Binary data) | PR_REPORTING_DL_NAME | [yellow-background]*Unknown*
| 0x1004 | 0x0102 (Binary data) | PR_REPORTING_MTA_CERTIFICATE | [yellow-background]*Unknown*
| | | |
| 0x1006 | 0x0003 (Integer 32-bit signed) | PR_RTF_SYNC_BODY_CRC | RTF Sync Body CRC
| 0x1007 | 0x0003 (Integer 32-bit signed) | PR_RTF_SYNC_BODY_COUNT | RTF Sync Body character count
| 0x1008 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_RTF_SYNC_BODY_TAG | RTF Sync body tag
| 0x1009 | 0x0102 (Binary data) | PidTagRtfCompressed +
(PR_RTF_COMPRESSED) | Compressed RTF message body +
Contains the Rich Text Format (RTF) version of the message text, usually in compressed form. The data is compressed using the LZFu algorithm.
| 0x1010 | 0x0003 (Integer 32-bit signed) | PR_RTF_SYNC_PREFIX_COUNT | RTF whitespace prefix count
| 0x1011 | 0x0003 (Integer 32-bit signed) | PR_RTF_SYNC_TRAILING_COUNT | RTF whitespace tailing count
| 0x1012 | 0x0102 (Binary data) | PR_ORIGINALLY_INTENDED_RECIP_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x1013 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagBodyHtml +
(PR_BODY_HTML) | HTML message body +
Contains the Hypertext Markup Language (HTML) version of the message text. +
See section: <<message_body,The message body>>
| | 0x0102 (Binary data) | PidTagHtml +
(PR_HTML) | HTML message body +
Contains the message body text in HTML format. +
[yellow-background]*This data is probably in 7-bit ASCII encoding extended characters are formatted in HTML encoding without an end-of-string character*
| 0x1014 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagBodyContentLocation +
(PR_BODY_CONTENT_LOCATION) | Message body content location +
Contains the value of a MIME Content-Location header field.
| | | |
| 0x1030 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_INTERNET_APPROVED | [yellow-background]*Unknown*
| 0x1031 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_INTERNET_CONTROL | [yellow-background]*Unknown*
| 0x1032 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_INTERNET_DISTRIBUTION | [yellow-background]*Unknown*
| 0x1033 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_INTERNET_FOLLOWUP_TO | [yellow-background]*Unknown*
| 0x1034 | 0x0003 (Integer 32-bit signed) | PR_INTERNET_LINES | [yellow-background]*Unknown*
| 0x1035 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagInternetMessageId +
(PR_INTERNET_MESSAGE_ID) | Message identifier +
Specifies a RFC2822 message identifier.
| 0x1036 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_INTERNET_NEWSGROUPS | [yellow-background]*Unknown*
| 0x1037 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_INTERNET_ORGANIZATION | [yellow-background]*Unknown*
| 0x1038 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_INTERNET_NNTP_PATH | [yellow-background]*Unknown*
| 0x1039 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_INTERNET_REFERENCES | [yellow-background]*Unknown*
| 0x103a | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_SUPERSEDES | [yellow-background]*Unknown*
| 0x103b | 0x0102 (Binary data) | PR_POST_FOLDER_ENTRIES | [yellow-background]*Unknown*
| 0x103c | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_POST_FOLDER_NAMES | [yellow-background]*Unknown*
| 0x103d | 0x0102 (Binary data) | PR_POST_REPLY_FOLDER_ENTRIES | [yellow-background]*Unknown*
| 0x103e | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_POST_REPLY_FOLDER_NAMES | [yellow-background]*Unknown*
| 0x103f | 0x0102 (Binary data) | PR_POST_REPLY_DENIED | [yellow-background]*Unknown*
| | | |
| 0x1040 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_NNTP_XREF | [yellow-background]*Unknown*
| 0x1041 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_INTERNET_PRECEDENCE | [yellow-background]*Unknown*
| 0x1042 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_IN_REPLY_TO_ID | In-Reply-To
| 0x1043 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_LIST_HELP | [yellow-background]*Unknown*
| 0x1044 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_LIST_SUBSCRIBE | [yellow-background]*Unknown*
| 0x1045 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_LIST_UNSUBSCRIBE | [yellow-background]*Unknown*
| 0x1046 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagInternetReturnPath +
(PR_INTERNET_RETURN_PATH) | Internet return path
| 0x1046 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalMessageId +
(ptagOriginalInternetMessageID, OriginalMessageId) | [yellow-background]*Unknown (Original message identifier)*
| | | |
| 0x1080 | 0x0003 (Integer 32-bit signed) | PidTagIconIndex +
(PR_ICON_INDEX) | Icon index +
Specifies which icon to use when to display a group of e-mail objects. +
See section: <<icon_index_definitions,Icon index definitions>>
| 0x1081 | 0x0003 (Integer 32-bit signed) | PidTagLastVerbExecuted +
(PR_LAST_VERB_EXECUTED, PR_ACTION_FLAG) | Contains the last verb executed.
| 0x1082 | 0x0040 (Filetime) | PidTagLastVerbExecutionTime +
(PR_LAST_VERB_EXECUTION_TIME, PR_ACTION_DATE) | Contains the time when the last verb was executed.
| | | |
| 0x1090 | 0x0003 (Integer 32-bit signed) | PidTagFlagStatus +
(PR_FLAG_STATUS) | Flag status +
Specifies if a message is flagged or not. +
See section: <<flag_status_definitions,Flag status definitions>>
| 0x1091 | 0x0040 (Filetime) | PR_FLAG_COMPLETE | [yellow-background]*Unknown*
| | | |
| 0x1095 | 0x0003 (Integer 32-bit signed) | PR_FLAG_ICON | [yellow-background]*Unknown (Flag icon index)*
| 0x1096 | 0x0003 (Integer 32-bit signed) | PidTagBlockStatus +
(PR_BLOCK_STATUS) | Block status +
0 => Block external content (default) +
[yellow-background]*See: `[MS-OXCSPAM]`, `[MS-OXCDATA]`*
| 0x1097 | 0x0003 (Integer 32-bit signed) | PidTagItemTemporaryFlags | Temporary item flags
| 0x1098 | 0x1102 (Array of Binary data values) | PidTagConflictItems +
(PR_CONFLICT_ITEMS) | Conflict items +
One or more entry identifiers of items that have been involved in an automatic conflict resolution. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| | | |
| 0x10c0 | 0x0102 (Binary data) | PR_SMTP_TEMP_TBL_DATA | [yellow-background]*Unknown*
| 0x10c1 | 0x0003 (Integer 32-bit signed) | PR_SMTP_TEMP_TBL_DATA_2 | [yellow-background]*Unknown*
| 0x10c2 | 0x0102 (Binary data) | PR_SMTP_TEMP_TBL_DATA_3 | [yellow-background]*Unknown*
| 0x10c3 | 0x0040 (Filetime) | PR_CAL_START_TIME | [yellow-background]*Unknown*
| 0x10c4 | 0x0040 (Filetime) | PR_CAL_END_TIME | [yellow-background]*Unknown*
| 0x10c5 | 0x0040 (Filetime) | PR_CAL_RECURRING_ID | [yellow-background]*Unknown*
| 0x10c6 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_DAV_SUBMIT_DATA | [yellow-background]*Unknown*
| 0x10c7 | 0x0003 (Integer 32-bit signed) | PR_CDO_EXPANSION_INDEX | [yellow-background]*Unknown*
| 0x10c8 | 0x0102 (Binary data) | PR_IFS_INTERNAL_DATA | [yellow-background]*Unknown*
| | | |
| 0x10ca | 0x0040 (Filetime) | PR_CAL_REMINDER_NEXT_TIME | [yellow-background]*Unknown*
| | | |
| 0x10f1 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_OWA_URL | [yellow-background]*Unknown*
| 0x10f2 | 0x000b (Boolean) | PR_DISABLE_FULL_FIDELITY | Disable full fidelity
| 0x10f3 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagUrlComponentName +
(PR_URL_COMP_NAME) | URL computer name +
The URL component name for a message.  Contains the .eml filename.
| 0x10f4 | 0x000b (Boolean) | PidTagAttributeHidden +
(PR_ATTR_HIDDEN) | [yellow-background]*Unknown (Attribute hidden)*
| 0x10f5 | 0x000b (Boolean) | PidTagAttributeSystem +
(PR_ATTR_SYSTEM) | [yellow-background]*Unknown (Attribute system)*
| 0x10f6 | 0x000b (Boolean) | PidTagAttributeReadOnly +
(PR_ATTR_READONLY) | [yellow-background]*Unknown (Attribute read only)*
| | | |
| 0x1100 | 0x0102 (Binary data) | PR_P1_CONTENT | [yellow-background]*Unknown*
| 0x1101 | 0x0102 (Binary data) | PR_P1_CONTENT_TYPE | [yellow-background]*Unknown*
|===

=== Common objects properties (0x3000 – 0x03ff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x3000 | 0x0003 (Integer 32-bit signed) | PidTagRowid +
(PR_ROWID) | Recipient row identifier +
Contains a unique identifier for a recipient in a recipient table or status table.
| 0x3001 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagDisplayName +
(PR_DISPLAY_NAME) | Display name +
Contains the display name for a given MAPI object.
| 0x3002 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAddressType +
(PR_ADDRTYPE) | Address type +
Contains the messaging user's e-mail address type. +
See section: <<address_type_definitions,Address type definitions>>
| 0x3003 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagEmailAddress +
(PR_EMAIL_ADDRESS) | E-mail address +
Contains the messaging user's e-mail address.
| 0x3004 | 0x001e (ASCII string) +
0x001f (Unicode string | PidTagComment +
(PR_COMMENT) | Comment +
Contains a comment about the purpose or content of an object.
| 0x3005 | 0x0003 (Integer 32-bit signed) | PidTagDepth +
(PR_DEPTH) | Hierarchy table depth +
Contains an integer that represents the relative level of indentation, or depth, of an object in a hierarchy table.
| 0x3006 | 0x001e (ASCII string) +
0x001f (Unicode string | PidTagProviderDisplayName +
(PR_PROVIDER_DISPLAY) | Service provider display name +
Contains the display name of a provider.
| 0x3007 | 0x0040 (Filetime) | PidTagCreationTime +
(PR_CREATION_TIME) | Creation time +
Contains the creation date and time of a message.
| 0x3008 | 0x0040 (Filetime) | PidTagLastModificationTime +
(PR_LAST_MODIFICATION_TIME) | Last modification time +
Contains the date and time when the object or subobject was last modified.
| 0x3009 | 0x0003 (Integer 32-bit signed) | PidTagResourceFlags +
(PR_RESOURCE_FLAGS) | Resource flags +
Contains a bitmask of flags for message services and providers. +
See section: <<resource_flag_definitions,Resource flag definitions>>
| 0x300a | 0x001e (ASCII string) +
0x001f (Unicode string | PidTagProviderDisplay +
(PR_PROVIDER_DLL_NAME) | Service provider DLL filename +
Contains the vendor-defined display name for a service provider.
| 0x300b | 0x0102 (Binary data) | PidTagSearchKey +
(PR_SEARCH_KEY) | Search key +
Contains a binary-comparable key that identifies correlated objects for a search.
| 0x300c | 0x0102 (Binary data) | PidTagProviderUid +
(PR_PROVIDER_UID) | Service provider identifier +
Contains a MAPIUID structure of the service provider that is handling a message.
| 0x300d | 0x0003 (Integer 32-bit signed) | PidTagProviderOrdinal +
(PR_PROVIDER_ORDINAL) | Service provider table index +
Contains the zero-based index of a service provider's position in the provider table.
| | | |
| 0x3301 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_FORM_VERSION | [yellow-background]*Unknown*
| 0x3302 | 0x0048 (GUID) | PR_FORM_CLSID | [yellow-background]*Unknown*
| 0x3303 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_FORM_CONTACT_NAME | [yellow-background]*Unknown*
| 0x3304 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_FORM_CATEGORY | [yellow-background]*Unknown*
| 0x3305 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_FORM_CATEGORY_SUB | [yellow-background]*Unknown*
| ASCII string or Unicode string
| 0x3306 | 0x1003 (Array of Integer 32-bit signed values) | PR_FORM_HOST_MAP | [yellow-background]*Unknown*
| 0x3307 | 0x000b (Boolean) | PR_FORM_HIDDEN | [yellow-background]*Unknown*
| 0x3308 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_FORM_DESIGNER_NAME | [yellow-background]*Unknown*
| 0x3309 | 0x0048 (GUID) | PR_FORM_DESIGNER_GUID | [yellow-background]*Unknown*
| 0x330a | 0x0003 (Integer 32-bit signed) | PR_FORM_MESSAGE_BEHAVIOR | [yellow-background]*Unknown*
|===

=== Message store properties (0x3400 - 0x35ff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x3400 | 0x000b (Boolean) | PR_DEFAULT_STORE | [yellow-background]*Unknown*
| | | |
| 0x340d | 0x0003 (Integer 32-bit signed) | PidTagStoreSupportMask +
(PR_STORE_SUPPORT_MASK) | Message store characteristics mask +
Contains a bitmask of flags that client applications should query to determine the characteristics of a message store. +
See section: <<message_store_characteristics_mask_definitions,Message store characteristics mask definitions>>
| 0x340e | 0x0003 (Integer 32-bit signed) | PR_STORE_STATE | [yellow-background]*Unknown*
| | | |
| 0x3410 | 0x0102 (Binary data) | PR_IPM_SUBTREE_SEARCH_KEY | [yellow-background]*Unknown*
| 0x3411 | 0x0102 (Binary data) | PR_IPM_OUTBOX_SEARCH_KEY | [yellow-background]*Unknown*
| 0x3412 | 0x0102 (Binary data) | PR_IPM_WASTEBASKET_SEARCH_KEY | [yellow-background]*Unknown*
| 0x3413 | 0x0102 (Binary data) | PR_IPM_SENTMAIL_SEARCH_KEY | [yellow-background]*Unknown*
| 0x3414 | 0x0102 (Binary data) | PidTagStoreProvider +
(PR_MDB_PROVIDER) | Message store provider +
Contains a provider-defined MAPIUID structure that indicates the type of the message store.
| 0x3415 | 0x000d (Embedded object) | PR_RECEIVE_FOLDER_SETTINGS | [yellow-background]*Unknown*
| 0x3416 | 0x0102 (Binary data) | | [yellow-background]*Unknown (Item proc search entry identifier)* +
Contains Folder information reference to "ItemProcSearch"
| | | |
| 0x3419 | 0x0003 (Integer 32-bit signed) | PR_SEARCH_OWNER_ID | Search owner identifier +
Contains the process identifier of the process that is sending notifications to the indexer about objects ready for indexing.
| | | |
| 0x35df | 0x0003 (Integer 32-bit signed) | PidTagValidFolderMask +
(PR_VALID_FOLDER_MASK) | Valid folder mask +
States which folders are valid for this message store +
See section: <<valid_folder_mask_definitions,Valid folder mask definitions>>
| 0x35e0 | 0x0102 (Binary data) | PidTagIpmSubtreeEntryId +
(PR_IPM_SUBTREE_ENTRYID) | IPM sub tree root folder entry identifier +
Contains the entry identifier of the root of the interpersonal message (IPM) folder subtree in the message store's folder tree. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| | | |
| 0x35e2 | 0x0102 (Binary data) | PidTagIpmOutboxEntryId +
(PR_IPM_OUTBOX_ENTRYID) | Outbox entry folder identifier +
Contains the entry identifier of the standard interpersonal message (IPM) Outbox folder. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x35e3 | 0x0102 (Binary data) | PidTagIpmWastebasketEntryId +
(PR_IPM_WASTEBASKET_ENTRYID) | Wastebasket folder entry identifier +
Contains the entry identifier of the standard interpersonal message (IPM) Deleted Items folder. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x35e4 | 0x0102 (Binary data) | PidTagIpmSentMailEntryId +
(PR_IPM_SENTMAIL_ENTRYID) | Sent mail folder entry identifier +
Contains the entry identifier of the standard interpersonal message (IPM) Sent Items folder. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x35e5 | 0x0102 (Binary data) | PidTagViewsEntryId +
(PR_VIEWS_ENTRYID) | Views folder entry identifier +
Contains the entry identifier of the user-defined Views folder.
| 0x35e6 | 0x0102 (Binary data) | PidTagCommonViewsEntryId +
(PR_COMMON_VIEWS_ENTRYID) | Common views folder entry identifier +
Contains the entry identifier of the predefined common view folder. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x35e7 | 0x0102 (Binary data) | PidTagFinderEntryId +
(PR_FINDER_ENTRYID) | Finder folder entry identifier +
Contains the entry identifier for the folder where search results are typically created. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
|===

=== Folder and address book container properties (0x3600 – 0x36ff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x3600 | 0x0003 (Integer 32-bit signed) | PidTagContainerFlags +
(PR_CONTAINER_FLAGS) | Address book container capabilities flags +
Contains a bitmask of flags describing capabilities of an address book container. +
See section: <<container_flag_definitions,Container flag definitions>>
| 0x3601 | 0x0003 (Integer 32-bit signed) | PidTagFolderType +
(PR_FOLDER_TYPE) | Folder type +
Contains a constant that indicates the folder type +
See section: <<folder_type_definitions,Folder type definitions>>
| 0x3602 | 0x0003 (Integer 32-bit signed) | PidTagContentCount +
(PR_CONTENT_COUNT) | Number of content items +
Contains the number of messages in a folder, as computed by the message store.
| 0x3603 | 0x0003 (Integer 32-bit signed) | PidTagContentUnreadCount +
(PR_CONTENT_UNREAD) | Number of unread content items +
Contains the number of unread messages in a folder, as computed by the message store.
| 0x3604 | 0x000d (Embedded object) | PidTagCreateTemplates +
(PR_CREATE_TEMPLATES) | Dialog box template entry identifiers +
Contains an embedded table object that contains dialog box template entry identifiers.
| 0x3605 | 0x000d (Embedded object) | PidTagDetailsTable +
(PR_DETAILS_TABLE) | Display table object +
Contains an embedded display table object.
| | | |
| 0x3607 | 0x000d (Embedded object) | PR_SEARCH | [yellow-background]*Unknown*
| | | |
| 0x3609 | 0x000b (Boolean) | PR_SELECTABLE | [yellow-background]*Unknown*
| 0x360a | 0x000b (Boolean) | PidTagSubfolders +
(PR_SUBFOLDERS) | Has sub folders +
Contains TRUE if a folder contains subfolders.
| 0x360b | 0x0003 (Integer 32-bit signed) | PR_STATUS | [yellow-background]*Unknown*
| 0x360c | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_ANR | [yellow-background]*Unknown*
| 0x360d | 0x0003 (Integer 32-bit signed) | PR_CONTENTS_SORT_ORDER | [yellow-background]*Unknown*
| 0x360e | 0x000d (Embedded object) | PR_CONTAINER_HIERARCHY | Container hierarchy
| 0x360f | 0x000d (Embedded object) | PR_CONTAINER_CONTENTS | [yellow-background]*Unknown*
| 0x3610 | 0x000d (Embedded object) | PR_FOLDER_ASSOCIATED_CONTENTS | [yellow-background]*Unknown*
| 0x3611 | 0x0102 (Binary data) | PR_DEF_CREATE_DL | [yellow-background]*Unknown*
| 0x3612 | 0x0102 (Binary data) | PR_DEF_CREATE_MAILUSER | [yellow-background]*Unknown*
| 0x3613 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagContainerClass +
(PR_CONTAINER_CLASS) | Container class +
Contains a text string describing the type of a folder. Although this property is generally ignored, versions of Exchange Server prior to Exchange Server 2003 Mailbox Manager expect this property to be present. +
See section: <<container_class_definitions,Container class definitions>>
| 0x3614 | 0x0014 (Integer 64-bit signed) | PR_CONTAINER_MODIFY_VERSION | [yellow-background]*Unknown*
| 0x3615 | 0x0102 (Binary data) | PidTagAbProviderId +
(PR_AB_PROVIDER_ID) | Address book provider +
Contains an address book provider's MAPIUID structure.
| 0x3616 | 0x0102 (Binary data) | PidTagDefaultViewEntryId +
(PR_DEFAULT_VIEW_ENTRYID) | Default view entry identifier +
Contains the entry identifier of the initial folder view. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x3617 | 0x0003 (Integer 32-bit signed) | PidTagAssociatedContentCount +
(PR_ASSOC_CONTENT_COUNT) | Number of associated content items +
Contains the count of items in the associated contents table of the folder.
| | | |
| 0x361c | 0x0102 (Binary data) | PR_PACKED_NAME_PROPS | [yellow-background]*Unknown* +
Contains references to schema
| | | |
| 0x36d0 | 0x0102 (Binary data) | PidTagIpmAppointmentEntryId +
(PR_IPM_APPOINTMENT_ENTRYID) | Calendar folder entry identifier +
Contains the entry identifier of the Outlook Calendar folder. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x36d1 | 0x0102 (Binary data) | PidTagIpmContactEntryId +
(PR_IPM_CONTACT_ENTRYID) | Contact folder entry identifier +
Contains the entry identifier of the Outlook Contacts folder. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x36d2 | 0x0102 (Binary data) | PidTagIpmJournalEntryId +
(PR_IPM_JOURNAL_ENTRYID) | Journal folder entry identifier +
Contains the entry identifier of the Outlook Journal folder. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x36d3 | 0x0102 (Binary data) | PidTagIpmNoteEntryId +
(PR_IPM_NOTE_ENTRYID) | Notes folder entry identifier +
Contains the entry identifier of the Outlook Notes folder. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x36d4 | 0x0102 (Binary data) | PidTagIpmTaskEntryId +
(PR_IPM_TASK_ENTRYID) | Tasks folder entry identifier +
Contains the entry identifier of the Outlook Tasks folder. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x36d5 | 0x0102 (Binary data) | PidTagRemindersOnlineEntryId +
(PR_REM_ONLINE_ENTRYID, ptagRemOnlineEntryId) | Online reminders folder entry identifier +
Contains folder information reference to "Online Reminders" +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x36d6 | 0x0102 (Binary data) | PR_REMINDERS_OFFLINE_ENTRYID | Offline reminders folder entry identifier +
Contains folder information reference to "Offline Reminders" +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x36d7 | 0x0102 (Binary data) | PidTagIpmDraftsEntryId +
(PR_IPM_DRAFTS_ENTRYID) | Drafts folder entry identifier +
Contains the entry identifier of the Outlook Drafts folder. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x36d8 | 0x1102 (Array of Binary data values) | PidTagAdditionalRenEntryIds +
(PR_ADDITIONAL_REN_ENTRYIDS, ptagAdditionalRenEntryIds) +
[yellow-background]*PR_OUTLOOK_2003_ENTRYIDS* | Additional REN folder entry identifiers +
A multi-value property that specifies the entry identifiers of certain special folders. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>> +
The first five entries of this multi-value property are mapped to the following special folders, if they exist in the store: +
(0) Conflicts folder, (1) Sync Issues folder, (2) Local Failures folder, (3) Server Failures folder, (4) Junk E-mail Folder
| 0x36d9 | 0x0102 (Binary data) | PidTagAdditionalRenEntryIdsEx +
(PR_ADDITIONAL_REN_ENTRYIDS_EX) | Additional REN folder entry identifiers +
See section: <<persist_data_block_structure,Persist data block structure>>
| 0x36da | 0x0102 (Binary data) | PidTagExtendedFolderFlags +
(PR_EXTENDED_FOLDER_FLAGS) | Extended folder flags +
Contains extended flags about a folder. +
See section: <<extended_folder_flags_structure,The extended folder flags structure>>
| 0x36db | 0x0040 (Filetime) | | [yellow-background]*Unknown (Found in Exchange)*
| 0x36dc | 0x0102 (Binary data) | | [yellow-background]*Unknown (Found in Exchange)* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| | | |
| 0x36de | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown (flags?)* +
[yellow-background]*0x00000000 => most folders* +
[yellow-background]*0x10000000 => set in sync issues/local failures* +
[yellow-background]*0x10000000 => set in server failures* +
[yellow-background]*0x40000000 => set in calendar*
| 0x36df | 0x0102 (Binary data) | PidTagFolderWebViewInfo +
(PR_FOLDER_WEBVIEWINFO) | Folder web view information +
Contains the URL for the home page of a folder. +
See section: <<folder_web_view_information_structure,The folder web view information structure>>
| | | |
| 0x36e0 | 0x0102 (Binary data) | PR_FOLDER_XVIEWINFO_E | [yellow-background]*Unknown* +
Used internally by Outlook to remember its last-used view of a folder.
| 0x36e1 | 0x0003 (Integer 32-bit signed) | PR_FOLDER_VIEWS_ONLY | [yellow-background]*Unknown*
| 0x36e2 | 0x0003 (Integer 32-bit signed) | PidTagOrdinalMost +
(PR_ORDINAL_MOST) | Task ordinal maximum +
[yellow-background]*Contains a positive number whose negative is less than or equal to the value of PidLidTaskOrdinal of all Task objects in the folder.*
| | | |
| 0x36e4 | 0x1102 (Array of Binary data values) | PidTagFreeBusyEntryIds +
(PR_FREEBUSY_ENTRYIDS) | Free busy entry identifiers +
Contains the entry identifiers for the delegate information message, the free/busy message of the logged in user, and the folder whose PidTagDisplayName (PR_DISPLAY_NAME) is equal to "FreeBusy Data."
| 0x36e5 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_DEF_MSG_CLASS | [yellow-background]*Unknown*
| 0x36e6 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_DEF_FORM_NAME | [yellow-background]*Unknown*
| | | |
| 0x36e9 | 0x000b (Boolean) | PR_GENERATE_EXCHANGE_VIEWS | [yellow-background]*Unknown*
| | | |
| 0x36eb | 0x0102 (Binary data) | PR_FOLDER_VIEWLIST | [yellow-background]*Unknown (Folder view list)* +
Seen "00 00 00 00"
| 0x36ec | 0x0003 (Integer 32-bit signed) | PR_AGING_PERIOD | Aging period +
Represents the number of time units that is used in determining the length of time an item remains in a folder before the item is archived.
| | | |
| 0x36ee | 0x0003 (Integer 32-bit signed) | PR_AGING_GRANULARITY | Aging period granularity +
Represents the time unit that is used in determining the length of time an item remains in a folder before the item is archived. +
See section: <<aging_granularity_definitions,Aging granularity definitions>>
|===

=== Attachment properties (0x3700 – 0x38ff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x3700 | 0x0102 (Binary data) | PR_ATTACHMENT_X400_PARAMETERS | [yellow-background]*Unknown*
| 0x3701 | 0x000d (Embedded object) | PidTagAttachDataObject +
(PR_ATTACH_DATA_OBJ) | Attachment data object +
Contains an attachment object typically accessed through the Object Linking and Embedding (OLE) IStorage interface.
| | 0x0102 (Binary data) | PidTagAttachDataBinary +
(PR_ATTACH_DATA_BIN) | Attachment data +
Contains binary attachment data typically accessed through the Object Linking and Embedding (OLE) IStream interface.
| 0x3702 | 0x0102 (Binary data) | PidTagAttachEncoding +
(PR_ATTACH_ENCODING) | Attachment encoding +
Contains an ASN.1 object identifier that specifies the encoding for an attachment. +
See section: <<mapi_x400_object_identifiers,MAPI X.400 object identifiers (MAPIOID)>>
| 0x3703 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAttachExtension +
(PR_ATTACH_EXTENSION) | Attachment extension +
Contains a file name extension that indicates the document type of an attachment.
| 0x3704 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAttachFilename +
(PR_ATTACH_FILENAME) | Attachment (short) filename +
Contains an attachment's base file name and extension, excluding path.
| 0x3705 | 0x0003 (Integer 32-bit signed) | PidTagAttachMethod +
(PR_ATTACH_METHOD) | Attachment method +
Contains a MAPI-defined constant representing the way the contents of an attachment can be accessed. +
See section: <<attachment_method_definitions,Attachment method definitions>>
| | | |
| 0x3707 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAttachLongFilename +
(PR_ATTACH_LONG_FILENAME) | Attachment long filename +
Contains an attachment's long filename and extension, excluding path.
| 0x3708 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAttachPathname +
(PR_ATTACH_PATHNAME) | Attachment (short) pathname
| 0x3709 | 0x0102 (Binary data) | PidTagAttachRendering +
(PR_ATTACH_RENDERING) | Attachment rendering information +
Contains a Microsoft Windows metafile with rendering information for an attachment.
| 0x370a | 0x0102 (Binary data) | PidTagAttachTag +
(PR_ATTACH_TAG) | Attachment application tag +
Contains an ASN.1 object identifier specifying the application that supplied an attachment. +
See section: <<mapi_x400_object_identifiers,MAPI X.400 object identifiers (MAPIOID)>>
| 0x370b | 0x0003 (Integer 32-bit signed) | PidTagRenderingPosition +
(PR_RENDERING_POSITION) | Attachment rendering offset +
Contains an offset, in characters, to use in rendering an attachment within the main message text. +
When the supplied offset is -1 (0xffffffff), the attachment is not rendered by using this property. All values other than -1 indicate the position within the PidTagBody (PR_BODY) property at which the attachment is to be rendered.
| 0x370c | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAttachTransportName +
(PR_ATTACH_TRANSPORT_NAME) | Attachment TNEF transport name +
Contains the name of an attachment file modified so that it can be associated with TNEF messages.
| 0x370d | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAttachLongPathname +
(PR_ATTACH_LONG_PATHNAME) | Attachment long pathname +
Contains an attachment's fully-qualified long path and filename.
| 0x370e | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAttachMimeTag +
(PR_ATTACH_MIME_TAG) | Attachment mime type +
Contains formatting information about a Multipurpose Internet Mail Extensions (MIME) attachment.
| 0x370f | 0x0102 (Binary data) | PidTagAttachAdditionalInformation +
(PR_ATTACH_ADDITIONAL_INFO) | Attachment encoding information
| 0x3710 | 0x0003 (Integer 32-bit signed) | PidTagAttachMimeSequence +
(R_ATTACH_MIME_SEQUENCE) | Attachment MIME sequence number
| 0x3711 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAttachContentBase +
(PR_ATTACH_CONTENT_BASE) | Attachment MIME content base header URI
| 0x3712 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAttachContentId +
(PR_ATTACH_CONTENT_ID) | Attachment MIME content identifier header
| 0x3713 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAttachContentLocation +
(PR_ATTACH_CONTENT_LOCATION) | Attachment MIME content location header
| 0x3714 | 0x0003 (Integer 32-bit signed) | PidTagAttachFlags +
(PR_ATTACH_FLAGS) | Attachment flags +
See section: <<attachment_flag_definitions,Attachment flag definitions>>
| | | |
| 0x3716 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_ATTACH_CONTENT_DISPOSITION | *[yellow-background]*Unknown (Attachment content disposition)*
| | | |
| 0x3719 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAttachPayloadProviderGuidString +
(PR_ATTACH_PAYLOAD_PROV_GUID_STR) | Attachment MIME X-Payload-Provider-Guid header
| 0x371a | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAttachPayloadClass +
(PR_ATTACH_PAYLOAD_CLASS) | Attachment MIME X-Payload-Class header
| 0x371b | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagTextAttachmentCharset +
(ptagTextAttachmentCharset) | Attachment character set
| | | |
| 0x380b | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown (Found in Exchange)*
| | | |
| 0x3880 | 0x0102 (Binary data) | PR_SYNCEVENT_SUPPRESS_GUID | [yellow-background]*Unknown (Synchronization event suppress identifier)*
|===

=== Address book properties (0x3900 – 0x39ff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x3900 | 0x0003 (Integer 32-bit signed) | PidTagDisplayType +
(PR_DISPLAY_TYPE) | Icon display type +
Contains a value used to associate an icon with a particular row of a table +
See section: <<icon_display_type_definitions,Icon display type definitions>>
| | | |
| 0x3902 | 0x0102 (Binary data) | PidTagTemplateid +
(PR_TEMPLATEID) | Service provider template entry identifier +
Contains an entry identifier that can find the code associated with a service provider.
| | | |
| 0x3904 | 0x0102 (Binary data) | PidTagPrimaryCapability +
(PR_PRIMARY_CAPABILITY) | [yellow-background]*Unknown (Primary capability)* +
deprecated according to MSDN
| 0x3905 | 0x0003 (Integer 32-bit signed) | PidTagDisplayTypeEx +
(PR_DISPLAY_TYPE_EX) | Extended icon display type +
Contains the type of an entry, with respect to how the entry should be displayed in a row in a table for the Global Address List. +
See section: <<extended_icon_display_type_definitions,Extended icon display type definitions>>
| | | |
| 0x39fe | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagSmtpAddress +
(PR_SMTP_ADDRESS) | SMTP address +
Contains the SMTP address for the address book object.
| 0x39ff | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTag7BitDisplayName +
(PR_7BIT_DISPLAY_NAME) | Messaging username +
Contains a 7-bit ASCII representation of a messaging user's name.
|===

=== Messaging user properties (0x3a00 – 0x3bff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x3a00 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAccount +
(PR_ACCOUNT) | Recipient account name
| 0x3a01 | 0x0102 (Binary data) | PidTagAlternateRecipient +
(PR_ALTERNATE_RECIPIENT) | Alternate recipient entry identifiers +
[yellow-background]*Contains: FLATENTRYLIST*
| 0x3a02 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagCallbackTelephoneNumber +
(PR_CALLBACK_TELEPHONE_NUMBER) | Callback telephone number
| 0x3a03 | 0x000b (Boolean) | PidTagConversionProhibited +
(PR_CONVERSION_PROHIBITED) | Conversion prohibited
| 0x3a04 | 0x000b (Boolean) | PR_DISCLOSE_RECIPIENTS | Disclosure recipient
| 0x3a05 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagGeneration +
(PR_GENERATION) | Generational abbreviation (or name suffix)
| 0x3a06 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagGivenName +
(PR_GIVEN_NAME) | Given name
| 0x3a07 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagGovernmentIdNumber +
(PR_GOVERNMENT_ID_NUMBER) | Government identifier
| 0x3a08 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagBusinessTelephoneNumber +
(PR_BUSINESS_TELEPHONE_NUMBER, PR_OFFICE_TELEPHONE_NUMBER) | Primary business (office) phone number
| 0x3a09 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagHomeTelephoneNumber +
(PR_HOME_TELEPHONE_NUMBER) | Home phone number
| 0x3a0a | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagInitials +
(PR_INITIALS) | Initials
| 0x3a0b | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagKeyword +
(PR_KEYWORD) | Keyword
| 0x3a0c | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagLanguage +
(PR_LANGUAGE) | Language
| 0x3a0d | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagLocation +
(PR_LOCATION) | Location
| 0x3a0e | 0x000b (Boolean) | PidTagMailPermission +
(PR_MAIL_PERMISSION) | Permitted to send/receive messaged
| 0x3a0f | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagMessageHandlingSystemCommonName +
(PR_MHS_COMMON_NAME) | Message handling system (MHS) common name
| 0x3a10 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOrganizationalIdNumber +
(PR_ORGANIZATIONAL_ID_NUMBER) | Organizational identification number
| 0x3a11 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagSurname +
(PR_SURNAME) | Surname (or last name)
| 0x3a12 | 0x0102 (Binary data) | PidTagOriginalEntryId +
(PR_ORIGINAL_ENTRY_ID) | Original entry identifier +
Contains the original entry identifier for an entry copied from an address book to a personal address book or other writeable address book. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>> +
| 0x3a13 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOriginalDisplayName +
(PR_ORIGINAL_DISPLAY_NAME) | Original display name +
Contains the original display name for an entry copied from an address book to a personal address book or other writable address book.
| 0x3a14 | 0x0102 (Binary data) | PidTagOriginalSearchKey +
(PR_ORIGINAL_SEARCH_KEY) | Original search key +
Contains the original search key for an entry copied from an address book to a personal address book or other writeable address book.
| 0x3a15 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagPostalAddress +
(PR_POSTAL_ADDRESS) | Default Postal Address
| 0x3a16 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagCompanyName +
(PR_COMPANY_NAME) | Company name
| 0x3a17 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagTitle +
(PR_TITLE) | Job title (or profession)
| 0x3a18 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagDepartmentName +
(PR_DEPARTMENT_NAME) | Department name +
Used in contact item
| 0x3a19 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOfficeLocation +
(PR_OFFICE_LOCATION) | Office location
| 0x3a1a | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagPrimaryTelephoneNumber +
(PR_PRIMARY_TELEPHONE_NUMBER) | Primary Telephone
| 0x3a1b | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagBusiness2TelephoneNumber +
(PR_BUSINESS2_TELEPHONE_NUMBER, PR_OFFICE2_TELEPHONE_NUMBER) | Secondary business (office) phone number
| 0x3a1c | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagMobileTelephoneNumber +
(PR_MOBILE_TELEPHONE_NUMBER, PR_CELLULAR_TELEPHONE_NUMBER) | Mobile phone number
| 0x3a1d | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagRadioTelephoneNumber +
(PR_RADIO_TELEPHONE_NUMBER) | Radio phone number
| 0x3a1e | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagCarTelephoneNumber +
(PR_CAR_TELEPHONE_NUMBER) | Car phone number
| 0x3a1f | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOtherTelephoneNumber +
(PR_OTHER_TELEPHONE_NUMBER) | Alternate telephone number
| 0x3a20 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagTransmittableDisplayName +
(PR_TRANSMITTABLE_DISPLAY_NAME) | Transmittable display name +
Contains a recipient's display name in a secure form that cannot be changed.
| 0x3a21 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagPagerTelephoneNumber +
(PR_PAGER_TELEPHONE_NUMBER) | Pager phone number
| 0x3a22 | 0x0102 (Binary data) | PidTagUserCertificate +
(PR_USER_CERTIFICATE) | User certificate +
Contains an ASN.1 authentication certificate.
| 0x3a23 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagPrimaryFaxNumber +
(PR_PRIMARY_FAX_NUMBER) | Primary fax number
| 0x3a24 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagBusinessFaxNumber +
(PR_BUSINESS_FAX_NUMBER) | Business (office) fax number
| 0x3a25 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagHomeFaxNumber +
(PR_HOME_FAX_NUMBER) | Home fax number
| 0x3a26 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagCountry +
(PR_COUNTRY, PR_BUSINESS_ADDRESS_COUNTRY) | Country
| 0x3a27 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagLocality  +
(PR_LOCALITY, PR_BUSINESS_ADDRESS_LOCALITY, PR_BUSINESS_ADDRESS_CITY) | Locality (town or city)
| 0x3a28 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagStateOrProvince +
(PR_STATE_OR_PROVINCE, PR_BUSINESS_ADDRESS_STATE_OR_PROVINCE) | State or province
| 0x3a29 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagStreetAddress +
(PR_STREET_ADDRESS, PR_BUSINESS_ADDRESS_STREET) | Street
| 0x3a2a | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagPostalCode +
(PR_POSTAL_CODE, PR_BUSINESS_ADDRESS_POSTAL_CODE) | Postal code
| 0x3a2b | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagPostOfficeBox +
(PR_POST_OFFICE_BOX, PR_BUSINESS_ADDRESS_PO_BOX) | Post office box
| 0x3a2c | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagTelexNumber +
(PR_TELEX_NUMBER) | Telex number
| 0x3a2d | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagIsdnNumber +
(PR_ISDN_NUMBER) | ISDN number
| 0x3a2e | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAssistantTelephoneNumber +
(PR_ASSISTANT_TELEPHONE_NUMBER) | Assistant phone number
| 0x3a2f | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagHome2TelephoneNumber +
(PR_HOME2_TELEPHONE_NUMBER) | Secondary home phone number
| 0x3a30 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagAssistant +
(PR_ASSISTANT) | Assistant name
| | | |
| 0x3a40 | 0x000b (Boolean) | PidTagSendRichInfo +
(PR_SEND_RICH_INFO) | Can receive rich text (RTF, OLE) +
Contains TRUE if the recipient can receive all message content, including Rich Text Format (RTF) and Object Linking and Embedding (OLE) objects
| 0x3a41 | 0x0040 (Filetime) | PidTagWeddingAnniversary +
(PR_WEDDING_ANNIVERSARY) | Wedding anniversary
| 0x3a42 | 0x0040 (Filetime) | PidTagBirthday +
(PR_BIRTHDAY) | Birthday
| 0x3a43 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagHobbies +
(PR_HOBBIES) | Hobbies
| 0x3a44 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagMiddleName +
(PR_MIDDLE_NAME) | Middle name(s)
| 0x3a45 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagDisplayNamePrefix +
(PR_DISPLAY_NAME_PREFIX) | Display name prefix (or Title) +
Contains the contact title (such as Mr., Ms.)
| 0x3a46 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagProfession +
(PR_PROFESSION) | Profession
| 0x3a47 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagPreferredByName +
(PR_PREFERRED_BY_NAME) | Preferred name
| 0x3a48 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagSpouseName +
(PR_SPOUSE_NAME) | Name spouse
| 0x3a49 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagComputerNetworkName +
(PR_COMPUTER_NETWORK_NAME) | Computer network name
| 0x3a4a | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagCustomerId +
(PR_CUSTOMER_ID) | Customer identifier
| 0x3a4b | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagTtyTddPhoneNumber +
PidTagTelecommunicationsDeviceForDeafTelephoneNumber +
(PR_TTYTDD_PHONE_NUMBER) | Text telephone (TTY) or telecommunication device for the deaf (TDD) phone number
| 0x3a4c | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagFtpSite +
(PR_FTP_SITE) | FTP site
| 0x3a4d | 0x0002 (Integer 16-bit signed) | PidTagGender +
(PR_GENDER) | Gender +
Contains the gender of the messaging user. +
See section: <<gender_definitions,Gender definitions>>
| 0x3a4e | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagManagerName +
(PR_MANAGER_NAME) | Name manager
| 0x3a4f | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagNickname +
(PR_NICKNAME) | Nickname
| 0x3a50 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagPersonalHomePage +
(PR_PERSONAL_HOME_PAGE) | Personal home page
| 0x3a51 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagBusinessHomePage +
(PR_BUSINESS_HOME_PAGE) | Business home page
| 0x3a52 | 0x0048 (GUID) | PidTagContactVersion +
(PR_CONTACT_VERSION) | Contact version +
Contains the version of the contact information. +
[yellow-background]*Contains a GUID?*
| 0x3a53 | 0x1102 (Array of Binary data values) | PR_CONTACT_ENTRYIDS | [yellow-background]*Unknown (Contact entry identifiers)* +
[yellow-background]*Contains ENTRYID?*
| 0x3a54 | 0x101e (Array of ASCII string values) +
0x101f (Array of Unicode string values) | PidTagContactAddressTypes +
(PR_CONTACT_ADDRTYPES) | Contact address types +
Contains a list of address types for a contact.
| 0x3a55 | 0x0003 (Integer 32-bit signed) | PR_CONTACT_DEFAULT_ADDRESS_INDEX | [yellow-background]*Unknown (Contact default address index)*
| 0x3a56 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_CONTACT_EMAIL_ADDRESSES | [yellow-background]*Unknown (Contact email addresses)*
| 0x3a57 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagCompanyMainTelephoneNumber +
(PR_COMPANY_MAIN_PHONE_NUMBER) | Company main phone number
| 0x3a58 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagChildrensNames +
(PR_CHILDRENS_NAMES) | Name(s) of children
| 0x3a59 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagHomeAddressCity +
(PR_HOME_ADDRESS_CITY) | City of home address
| 0x3a5a | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagHomeAddressCountry +
(PR_HOME_ADDRESS_COUNTRY) | Country of home address
| 0x3a5b | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagHomeAddressPostalCode +
(PR_HOME_ADDRESS_POSTAL_CODE) | Postal code of home address
| 0x3a5c | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagHomeAddressStateOrProvince +
(PR_HOME_ADDRESS_STATE_OR_PROVINCE) | State or province of home address
| 0x3a5d | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagHomeAddressStreet +
(PR_HOME_ADDRESS_STREET) | Street of home address
| 0x3a5e | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagHomeAddressPostOfficeBox +
(PR_HOME_ADDRESS_POST_OFFICE_BOX) | Post office box of home address
| 0x3a5f | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOtherAddressCity +
(PR_OTHER_ADDRESS_CITY) | City of other address
| 0x3a60 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOtherAddressCountry +
(PR_OTHER_ADDRESS_COUNTRY) | Country of other address
| 0x3a61 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOtherAddressPostalCode +
(PR_OTHER_ADDRESS_POSTAL_CODE) | Postal code of other address
| 0x3a62 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOtherAddressStateOrProvince +
(PR_OTHER_ADDRESS_STATE_OR_PROVINCE) | State or province of of other address
| 0x3a63 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOtherAddressStreet +
(PR_OTHER_ADDRESS_STREET) | Street of other address
| 0x3a64 | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagOtherAddressPostOfficeBox +
(PR_OTHER_ADDRESS_POST_OFFICE_BOX) | Post office box of other address
| | | |
| 0x3a70 | 0x1102 (Array of Binary data) | PidTagUserX509Certificate +
(PR_USER_X509_CERTIFICATE) | User X.509 certificate +
Contains a list of X.509 certificates
| 0x3a71 | 0x0003 (Integer 32-bit signed) | PidTagSendInternetEncoding +
(PR_SEND_INTERNET_ENCODING) | Message encoding preference flags +
See section: <<encoding_preference_flag_definitions,Encoding preference flag definitions>>
|===

=== Distribution list properties (0x3c00 – 0x3cff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| | | |
|===

=== Profile properties (0x3d00 – 0x3dff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x3d00 | 0x0102 (Binary data) | PR_STORE_PROVIDERS | [yellow-background]*Unknown*
| 0x3d01 | 0x0102 (Binary data) | PR_AB_PROVIDERS | [yellow-background]*Unknown*
| 0x3d02 | 0x0102 (Binary data) | PR_TRANSPORT_PROVIDERS | [yellow-background]*Unknown*
| | | |
| 0x3d04 | 0x000b (Boolean) | PR_DEFAULT_PROFILE | [yellow-background]*Unknown*
| 0x3d05 | 0x1102 (Array of Binary data values) | PR_AB_SEARCH_PATH | [yellow-background]*Unknown*
| 0x3d06 | 0x0102 (Binary data) | PR_AB_DEFAULT_DIR | [yellow-background]*Unknown*
| 0x3d07 | 0x0102 (Binary data) | PR_AB_DEFAULT_PAB | [yellow-background]*Unknown*
| 0x3d08 | 0x0102 (Binary data) | PR_FILTERING_HOOKS | [yellow-background]*Unknown*
| 0x3d09 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_SERVICE_NAME | [yellow-background]*Unknown*
| 0x3d0a | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_SERVICE_DLL_NAME | [yellow-background]*Unknown*
| 0x3d0b | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_SERVICE_ENTRY_NAME | [yellow-background]*Unknown*
| 0x3d0c | 0x0102 (Binary data) | PR_SERVICE_UID | [yellow-background]*Unknown*
| 0x3d0d | 0x0102 (Binary data) | PR_SERVICE_EXTRA_UIDS | [yellow-background]*Unknown*
| 0x3d0e | 0x0102 (Binary data) | PR_SERVICES | [yellow-background]*Unknown*
| 0x3d0f | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_SERVICE_SUPPORT_FILES | [yellow-background]*Unknown*
| 0x3d10 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_SERVICE_DELETE_FILES | [yellow-background]*Unknown*
| 0x3d11 | 0x0102 (Binary data) | PR_AB_SEARCH_PATH_UPDATE | [yellow-background]*Unknown*
| 0x3d12 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_NAME | [yellow-background]*Unknown*
| 0x3d13 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_SERVICE_INSTALL_ID | [yellow-background]*Unknown*
| | | |
| 0x3d21 | 0x0102 (Binary data) | ptagAdminNTSD +
(PR_ADMIN_SECURITY_DESCRIPTOR) | Administrator permissions (NT security descriptor) +
Holds the NT security descriptors of the Administrative users or groups that can access the folder. +
See section: <<security_desciptor_structure,The security descriptor structure>>
|===

=== Status object properties (0x3e00 – 0x3fff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x3e00 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_IDENTITY_DISPLAY | [yellow-background]*Unknown*
| 0x3e01 | 0x0102 (Binary data) | PR_IDENTITY_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x3e02 | 0x0003 (Integer 32-bit signed) | PR_RESOURCE_METHODS | [yellow-background]*Unknown*
| 0x3e03 | 0x0003 (Integer 32-bit signed) | PR_RESOURCE_TYPE | [yellow-background]*Unknown*
| 0x3e04 | 0x0003 (Integer 32-bit signed) | PR_STATUS_CODE | [yellow-background]*Unknown*
| 0x3e05 | 0x0102 (Binary data) | PR_IDENTITY_SEARCH_KEY | [yellow-background]*Unknown*
| 0x3e06 | 0x0102 (Binary data) | PR_OWN_STORE_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x3e07 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_RESOURCE_PATH | [yellow-background]*Unknown*
| 0x3e08 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_STATUS_STRING | [yellow-background]*Unknown*
| 0x3e09 | 0x000b (Boolean) | PR_X400_DEFERRED_DELIVERY_CANCEL | [yellow-background]*Unknown*
| 0x3e0a | 0x0102 (Binary data) | PR_HEADER_FOLDER_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x3e0b | 0x0003 (Integer 32-bit signed) | PR_REMOTE_PROGRESS | [yellow-background]*Unknown*
| 0x3e0c | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_REMOTE_PROGRESS_TEXT | [yellow-background]*Unknown*
| 0x3e0e | 0x000b (Boolean) | PR_REMOTE_VALIDATE_OK | [yellow-background]*Unknown*
| | | |
| 0x3f00 | 0x0003 (Integer 32-bit signed) | PR_CONTROL_FLAGS | [yellow-background]*Unknown*
| 0x3f01 | 0x0102 (Binary data) | PR_CONTROL_STRUCTURE | [yellow-background]*Unknown*
| 0x3f02 | 0x0003 (Integer 32-bit signed) | PR_CONTROL_TYPE | [yellow-background]*Unknown*
| 0x3f03 | 0x0003 (Integer 32-bit signed) | PR_DELTAX | [yellow-background]*Unknown*
| 0x3f04 | 0x0003 (Integer 32-bit signed) | PR_DELTAY | [yellow-background]*Unknown*
| 0x3f05 | 0x0003 (Integer 32-bit signed) | PR_XPOS | [yellow-background]*Unknown*
| 0x3f06 | 0x0003 (Integer 32-bit signed) | PR_YPOS | [yellow-background]*Unknown*
| 0x3f07 | 0x0102 (Binary data) | PR_CONTROL_ID | [yellow-background]*Unknown*
| 0x3f08 | 0x0003 (Integer 32-bit signed) | PR_INITIAL_DETAILS_PANE | [yellow-background]*Unknown*
| | | |
| 0x3f80 | 0x0014 (Integer 64-bit signed) | PR_DID | [yellow-background]*Unknown*
| 0x3f81 | 0x0014 (Integer 64-bit signed) | PR_SEQID | [yellow-background]*Unknown*
| 0x3f82 | 0x0014 (Integer 64-bit signed) | PR_DRAFTID | [yellow-background]*Unknown*
| 0x3f83 | 0x0040 (Filetime) | PR_CHECK_IN_TIME | [yellow-background]*Unknown*
| 0x3f84 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_CHECK_IN_COMMENT | [yellow-background]*Unknown*
| 0x3f85 | 0x0003 (Integer 32-bit signed) | PR_VERSION_OP_CODE | [yellow-background]*Unknown*
| 0x3f86 | 0x0102 (Binary data) | PR_VERSION_OP_DATA | [yellow-background]*Unknown*
| 0x3f87 | 0x0003 (Integer 32-bit signed) | PR_VERSION_SEQUENCE_NUMBER | [yellow-background]*Unknown*
| 0x3f88 | 0x0014 (Integer 64-bit signed) | PR_ATTACH_ID | [yellow-background]*Unknown*
| | | |
| 0x3f8d | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PKM_DOC_STATUS | [yellow-background]*Unknown*
| 0x3f8e | 0x101e (Array of ASCII string values) +
0x101f (Array of Unicode string values) | PR_MV_PKM_OPERATION_REQ | [yellow-background]*Unknown*
| 0x3f8f | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PKM_DOC_INTERNAL_STATE | [yellow-background]*Unknown*
| | | |
| 0x3f90 | 0x0002 (Integer 16-bit signed) | PR_VERSIONING_FLAGS | [yellow-background]*Unknown*
| 0x3f91 | 0x0102 (Binary data) | PR_PKM_LAST_UNAPPROVED_VID | [yellow-background]*Unknown*
| 0x3f92 | 0x101e (Array of ASCII string values) +
0x101f (Array of Unicode string values) | PR_MV_PKM_VERSION_LABELS | [yellow-background]*Unknown*
| 0x3f93 | 0x101e (Array of ASCII string values) +
0x101f (Array of Unicode string values) | PR_MV_PKM_VERSION_STATUS | [yellow-background]*Unknown*
| 0x3f94 | 0x0102 (Binary data) | PR_PKM_INTERNAL_DATA | [yellow-background]*Unknown*
| | | |
| 0x3fc9 | 0x0102 (Binary data) | PR_LAST_CONFLICT | [yellow-background]*Unknown*
| 0x3fca | 0x0102 (Binary data) | PR_CONFLICT_MSG_KEY | [yellow-background]*Unknown*
| | | |
| 0x3fd0 | 0x0102 (Binary data) | PR_REPL_HEADER | [yellow-background]*Unknown*
| 0x3fd1 | 0x0102 (Binary data) | PR_REPL_STATUS | [yellow-background]*Unknown*
| 0x3fd2 | 0x0102 (Binary data) | PR_REPL_CHANGES | [yellow-background]*Unknown*
| 0x3fd3 | 0x0102 (Binary data) | PR_REPL_RGM | [yellow-background]*Unknown*
| 0x3fd4 | 0x0102 (Binary data) | PR_RMI | [yellow-background]*Unknown*
| 0x3fd5 | 0x0102 (Binary data) | PR_INTERNAL_POST_REPLY | [yellow-background]*Unknown*
| 0x3fd6 | 0x0040 (Filetime) | PR_NTSD_MODIFICATION_TIME | [yellow-background]*Unknown* +
[yellow-background]*Last modification date and time of the NT security descriptor 0x0e27 (ptagNTSD)?*
| | | |
| 0x3fd8 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PREVIEW_UNREAD | [yellow-background]*Unknown*
| 0x3fd9 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PREVIEW | [yellow-background]*Unknown*
| 0x3fda | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_ABSTRACT | [yellow-background]*Unknown*
| 0x3fdb | 0x0003 (Integer 32-bit signed) | PR_DL_REPORT_FLAGS | [yellow-background]*Unknown*
| 0x3fdc | 0x0102 (Binary data) | PR_BILATERAL_INFO | [yellow-background]*Unknown*
| 0x3fdd | 0x0003 (Integer 32-bit signed) | PR_MSG_BODY_ID | [yellow-background]*Unknown*
| 0x3fde | 0x0003 (Integer 32-bit signed) | PidTagInternetCodepage +
(PR_INTERNET_CPID) | Message body codepage +
Indicates the code page used for PR_BODY (PidTagBody) or PR_BODY_HTML (PidTagBodyHtml) properties. +
See section: <<codepage_definitions,Codepage definitions>>
| 0x3fdf | 0x0003 (Integer 32-bit signed) | PidTagAutoResponseSuppress +
(PR_AUTO_RESPONSE_SUPPRESS, ptagAutoResponseSuppress) | [yellow-background]*Unknown (Suppress auto response)*
| 0x3fe0 | 0x000d (Embedded object) | PR_ACL_TABLE | Access control list table object +
Seen in Exchange 5.5
| | 0x0102 (Binary data) | PR_ACL_DATA | Access control list data
| 0x3fe1 | 0x000d (Embedded object) | PidTagRulesTable +
(PR_RULES_TABLE) | Folder rules table +
Contains a reference to the (folder) rules table object.
| | 0x0102 (Binary data) | PidTagRulesData +
(PR_RULES_DATA) | Folder rules data +
Contains a reference to the (folder) rules data.
| 0x3fe2 | 0x0003 (Integer 32-bit signed) | PR_FOLDER_DESIGN_FLAGS | [yellow-background]*Unknown*
| 0x3fe3 | 0x000b (Boolean) | PR_DELEGATED_BY_RULE | [yellow-background]*Unknown*
| 0x3fe4 | 0x000b (Boolean) | PR_DESIGN_IN_PROGRESS | [yellow-background]*Unknown*
| 0x3fe5 | 0x000b (Boolean) | PR_SECURE_ORIGINATION | [yellow-background]*Unknown*
| 0x3fe6 | 0x000b (Boolean) | PR_PUBLISH_IN_ADDRESS_BOOK | [yellow-background]*Unknown*
| 0x3fe7 | 0x0003 (Integer 32-bit signed) | PidTagResolveMethod +
(PR_RESOLVE_METHOD) | Conflict resolution method +
Contains a folder's conflict resolution value. +
See section: <<conflict_resolution_method_definitions,Conflict resolution method definitions>>
| 0x3fe8 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_ADDRESS_BOOK_DISPLAY_NAME | [yellow-background]*Unknown*
| 0x3fe9 | 0x0003 (Integer 32-bit signed) | PR_EFORMS_LOCALE_ID | [yellow-background]*Unknown*
| 0x3fea | 0x000b (Boolean) | PR_HAS_DAMS | [yellow-background]*Unknown*
| 0x3feb | 0x0003 (Integer 32-bit signed) | PR_DEFERRED_SEND_NUMBER | [yellow-background]*Unknown*
| 0x3fec | 0x0003 (Integer 32-bit signed) | PR_DEFERRED_SEND_UNITS | [yellow-background]*Unknown*
| 0x3fed | 0x0003 (Integer 32-bit signed) | PR_EXPIRY_NUMBER | [yellow-background]*Unknown*
| 0x3fee | 0x0003 (Integer 32-bit signed) | PR_EXPIRY_UNITS | [yellow-background]*Unknown*
| 0x3fef | 0x0040 (Filetime) | PR_DEFERRED_SEND_TIME | [yellow-background]*Unknown*
| 0x3ff0 | 0x0102 (Binary data) | PidTagConflictEntryId +
(PR_CONFLICT_ENTRYID) | Conflict entry identifier +
Contains the entry identifier of the conflict resolution message. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x3ff1 | 0x0003 (Integer 32-bit signed) | PidTagMessageLocaleId +
(PR_MESSAGE_LOCALE_ID) | Message locale identifier +
Contains the LCID of the user who created the message. +
See section: <<lcid_structure,The LCID structure>>
| 0x3ff2 | 0x0102 (Binary data) | PR_RULE_TRIGGER_HISTORY | [yellow-background]*Unknown*
| 0x3ff3 | 0x0102 (Binary data) | PR_MOVE_TO_STORE_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x3ff4 | 0x0003 (Integer 32-bit signed) | PR_MOVE_TO_FOLDER_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x3ff5 | 0x0003 (Integer 32-bit signed) | PR_STORAGE_QUOTA_LIMIT | [yellow-background]*Unknown*
| 0x3ff6 | 0x0003 (Integer 32-bit signed) | PR_EXCESS_STORAGE_USED | [yellow-background]*Unknown*
| 0x3ff7 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_SVR_GENERATING_QUOTA_MSG | [yellow-background]*Unknown*
| 0x3ff8 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_CREATOR_NAME | [yellow-background]*Unknown*
| 0x3ff9 | 0x0102 (Binary data) | PR_CREATOR_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x3ffa | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_LAST_MODIFIER_NAME | Last modifier name
| 0x3ffb | 0x0102 (Binary data) | PR_LAST_MODIFIER_ENTRYID | Last modifier entry identifier +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x3ffc | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_REPLY_RECIPIENT_SMTP_PROXIES | [yellow-background]*Unknown*
| 0x3ffd | 0x0003 (Integer 32-bit signed) | PidTagMessageCodepage +
(PR_MESSAGE_CODEPAGE) | Message codepage +
Contains the codepage that is used for the message. +
See section: <<codepage_definitions,Codepage definitions>>
| 0x3ffe | 0x0102 (Binary data) | PR_EXTENDED_ACL_DATA | Extended ACL data
| 0x3fff | 0x000b (Boolean) | PR_FROM_I_HAVE | [yellow-background]*Unknown*
|===

=== Message envelope properties (0x4000 – 0x57ff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x4000 | 0x0003 (Integer 32-bit signed) | PR_NEW_ATTACH | [yellow-background]*Unknown*
| 0x4001 | 0x0003 (Integer 32-bit signed) | PR_START_EMBED | [yellow-background]*Unknown*
| 0x4002 | 0x0003 (Integer 32-bit signed) | PR_END_EMBED | [yellow-background]*Unknown*
| 0x4003 | 0x0003 (Integer 32-bit signed) | PR_START_RECIP | [yellow-background]*Unknown*
| 0x4004 | 0x0003 (Integer 32-bit signed) | PR_END_RECIP | [yellow-background]*Unknown*
| 0x4005 | 0x0003 (Integer 32-bit signed) | PR_END_CC_RECIP | [yellow-background]*Unknown*
| 0x4006 | 0x0003 (Integer 32-bit signed) | PR_END_BCC_RECIP | [yellow-background]*Unknown*
| 0x4007 | 0x0003 (Integer 32-bit signed) | PR_END_P1_RECIP | [yellow-background]*Unknown*
| | | |
| 0x4009 | 0x0003 (Integer 32-bit signed) | PR_START_TOP_FLD | [yellow-background]*Unknown*
| 0x400a | 0x0003 (Integer 32-bit signed) | PR_START_SUB_FLD | [yellow-background]*Unknown*
| 0x400b | 0x0003 (Integer 32-bit signed) | PR_END_FOLDER | [yellow-background]*Unknown*
| 0x400c | 0x0003 (Integer 32-bit signed) | PR_START_MESSAGE | [yellow-background]*Unknown*
| 0x400d | 0x0003 (Integer 32-bit signed) | PR_END_MESSAGE | [yellow-background]*Unknown*
| 0x400e | 0x0003 (Integer 32-bit signed) | PR_END_ATTACH | [yellow-background]*Unknown*
| 0x400f | 0x0003 (Integer 32-bit signed) | PR_EC_WARNING | [yellow-background]*Unknown*
| 0x4010 | 0x0003 (Integer 32-bit signed) | PR_START_FAI_MSG | [yellow-background]*Unknown*
| 0x4011 | 0x0102 (Binary data) | PR_NEW_FX_FOLDER | [yellow-background]*Unknown*
| 0x4012 | 0x0003 (Integer 32-bit signed) | PR_INCR_SYNC_CHG | [yellow-background]*Unknown*
| 0x4013 | 0x0003 (Integer 32-bit signed) | PR_INCR_SYNC_DEL | [yellow-background]*Unknown*
| 0x4014 | 0x0003 (Integer 32-bit signed) | PR_INCR_SYNC_END | [yellow-background]*Unknown*
| 0x4015 | 0x0003 (Integer 32-bit signed) | PR_INCR_SYNC_MSG | [yellow-background]*Unknown*
| 0x4016 | 0x0003 (Integer 32-bit signed) | PR_FX_DEL_PROP | [yellow-background]*Unknown*
| 0x4017 | 0x0003 (Integer 32-bit signed) | PR_IDSET_GIVEN | [yellow-background]*Unknown*
| | | |
| 0x4019 | 0x0003 (Integer 32-bit signed) | PR_SENDER_FLAGS | [yellow-background]*Unknown (Sender flags)*
| 0x401a | 0x0003 (Integer 32-bit signed) | PR_SENT_REPRESENTING_FLAGS | [yellow-background]*Unknown (Sent representing flags)*
| 0x401b | 0x0003 (Integer 32-bit signed) | PR_RCVD_BY_FLAGS | [yellow-background]*Unknown (Received by flags)*
| 0x401c | 0x0003 (Integer 32-bit signed) | PR_RCVD_REPRESENTING_FLAGS | [yellow-background]*Unknown (Received representing flags)*
| 0x401d | 0x0003 (Integer 32-bit signed) | PR_ORIGINAL_SENDER_FLAGS | [yellow-background]*Unknown (Original sender flags)*
| 0x401e | 0x0003 (Integer 32-bit signed) | PR_ORIGINAL_SENT_REPRESENTING_FLAGS | [yellow-background]*Unknown (Original sent representing flags)*
| 0x401f | 0x0003 (Integer 32-bit signed) | PR_REPORT_FLAGS | [yellow-background]*Unknown*
| 0x4020 | 0x0003 (Integer 32-bit signed) | PR_READ_RECEIPT_FLAGS | [yellow-background]*Unknown*
| 0x4021 | 0x000b (Boolean) | PR_SOFT_DELETES | [yellow-background]*Unknown*
| | | |
| 0x402c | 0x0102 (Binary data) | PR_MESSAGE_SUBMISSION_ID_FROM_CLIENT | [yellow-background]*Unknown*
| | | |
| 0x4030 | 0x001f (ASCII string) +
0x001f (Unicode string) | PR_SENDER_SIMPLE_DISP_NAME | [yellow-background]*Unknown*
| 0x4031 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_SENT_REPRESENTING_SIMPLE_DISP_NAME | [yellow-background]*Unknown*
| | | |
| 0x4038 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_CREATOR_SIMPLE_DISP_NAME | [yellow-background]*Unknown*
| | | |
| 0x403d | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_ORG_ADDR_TYPE | Original e-mail address type +
[yellow-background]*(Or does ORG stand for something else?)*
| 0x403e | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_ORG_EMAIL_ADDR | Original e-mail address +
[yellow-background]*(Or does ORG stand for something else?)*
| | | |
| 0x4059 | 0x0003 (Integer 32-bit signed) | PR_CREATOR_FLAGS | [yellow-background]*Unknown*
| 0x405a | 0x0003 (Integer 32-bit signed) | PR_MODIFIER_FLAGS | [yellow-background]*Unknown*
| 0x405b | 0x0003 (Integer 32-bit signed) | PR_ORIGINATOR_FLAGS | [yellow-background]*Unknown*
| 0x405c | 0x0003 (Integer 32-bit signed) | PR_REPORT_DESTINATION_FLAGS | [yellow-background]*Unknown*
| 0x405d | 0x0003 (Integer 32-bit signed) | PR_ORIGINAL_AUTHOR_FLAGS | [yellow-background]*Unknown (Original author flags)*
| | | |
| 0x4061 | 0x0102 (Binary data) | PR_ORIGINATOR_SEARCH_KEY | [yellow-background]*Unknown*
| | | |
| 0x4064 | 0x0102 (Binary data) | PR_REPORT_DESTINATION_SEARCH_KEY | [yellow-background]*Unknown*
| 0x4065 | 0x0003 (Integer 32-bit signed) | PR_ER_FLAG | [yellow-background]*Unknown*
| | | |
| 0x4068 | 0x0102 (Binary data) | PR_INTERNET_SUBJECT | [yellow-background]*Unknown*
| 0x4069 | 0x0102 (Binary data) | PR_INTERNET_SENT_REPRESENTING_NAME | [yellow-background]*Unknown*
| | | |
| 0x4076 | 0x0003 (Integer 32-bit signed) | PR_CONTENT_FILTER_SCL | [yellow-background]*Unknown*
|===

=== Recipient properties (0x5800 - 0x5fff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x5902 | 0x0003 (Integer 32-bit signed) | PR_INET_MAIL_OVERRIDE_FORMAT | [yellow-background]*Unknown*
| | | |
| 0x5909 | 0x0003 (Integer 32-bit signed) | PidTagMessageEditorFormat +
(PR_MSG_EDITOR_FORMAT) | Message editor format +
Specifies the format for an editor to use to display a message. +
See section: <<message_editor_format_definitions,Message editor format definitions>>
| | | |
| 0x5fde | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown*
| 0x5fdf | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown (Found in NK2 file)*
| | | |
| 0x5feb | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown (Found in NK2 file)*
| | | |
| 0x5fef | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown (Found in NK2 file)*
| | | |
| 0x5ff2 | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown (Found in NK2 file)*
| | | |
| 0x5ff5 | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown (Found in NK2 file)*
| 0x5ff6 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_RECIPIENT_DISPLAY_NAME | [yellow-background]*Unknown*
| 0x5ff7 | 0x0102 (Binary data) | PR_RECIPIENT_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| | | |
| 0x5ffb | 0x0040 (Filetime) | PR_RECIPIENT_TRACKSTATUS_ME | [yellow-background]*Unknown*
| | | |
| 0x5ffd | 0x0003 (Integer 32-bit signed) | PR_RECIPIENTS_FLAGS | [yellow-background]*Unknown*
| | | |
| 0x5fff | 0x0003 (Integer 32-bit signed) | PR_RECIPIENT_TRACKSTATUS | [yellow-background]*Unknown*
|===

=== Non-transmittable message properties (0x6000 - 0x65ff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x6001 | 0x0003 (Integer 32-bit signed) | PR_DOTSTUFF_STATE | [yellow-background]*Unknown*
| | 0x001e (ASCII string) +
0x001f (Unicode string) | | Alias (Found in NK2 file)
| 0x6002 | 0x000b (Boolean) | | [yellow-background]*Unknown (Found in NK2 file)*
| 0x6003 | 0x001e (ASCII string) +
0x001f (Unicode string) | | [yellow-background]*Unknown (Found in NK2 file)* +
Contains e-mail address and name
| 0x6004 | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown (Found in NK2 file)*
| | | |
| 0x6100 | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown* +
Found in IPM.ExtendedRule.Message
| 0x6101 | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown* +
Found in IPM.ExtendedRule.Message
| 0x6102 | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown* +
Found in IPM.ExtendedRule.Message
| 0x6103 | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown* +
Found in IPM.ExtendedRule.Message
| 0x6104 | 0x001e (ASCII string) +
0x001f (Unicode string) | | [yellow-background]*Unknown* +
Found in IPM.ExtendedRule.Message
| 0x6105 | 0x001e (ASCII string) +
0x001f (Unicode string) | | [yellow-background]*Unknown* +
Found in IPM.ExtendedRule.Message
| | | |
| 0x6107 | 0x000b (Boolean) | | [yellow-background]*Unknown* +
Found in IPM.ExtendedRule.Message
| | | |
| 0x65a0 | 0x0014  (Integer 64-bit signed) | PR_RULE_SERVER_RULE_ID | [yellow-background]*Unknown*
| | | |
| 0x65c2 | 0x0102 (Binary data) | PR_REPLY_TEMPLATE_ID | [yellow-background]*Unknown*
| | | |
| 0x65c6 | 0x0003 (Integer 32-bit signed) | PidTagSecureSubmitFlags | Secure submit flags +
[yellow-background]*TODO add specification*
| | | |
| 0x65e0 | 0x0102 (Binary data) | PidTagSourceKey +
(PR_SOURCE_KEY) | Source key +
Contains the global identifier (GID) of the item.
| 0x65e1 | 0x0102 (Binary data) | PidTagParentSourceKey +
(PR_PARENT_SOURCE_KEY) | Parent source key +
Contains the global identifier (GID) of the parent folder of the item.
| 0x65e2 | 0x0102 (Binary data) | PidTagChangeKey +
(PR_CHANGE_KEY) | Change key +
Contains a global identifier (GID) indicating the last change to the object. +
See section: <<change_key_structure,The change key structure>>
| 0x65e3 | 0x0102 (Binary data) | PidTagPredecessorChangeList +
(PR_PREDECESSOR_CHANGE_LIST) | Predecessor change list +
Contains a serialized representation of a PredecessorChangeList structure. +
See section: <<change_list_structure,The change list structure>>
| 0x65e4 | 0x0003 (Integer 32-bit signed) | PR_SYNCHRONIZE_FLAGS | [yellow-background]*Unknown*
| 0x65e5 | 0x000b (Boolean) | PR_AUTO_ADD_NEW_SUBS | [yellow-background]*Unknown*
| 0x65e6 | 0x000b (Boolean) | PR_NEW_SUBS_GET_AUTO_ADD | [yellow-background]*Unknown*
| 0x65e7 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_MESSAGE_SITE_NAME | [yellow-background]*Unknown*
| 0x65e8 | 0x000b (Boolean) | PR_MESSAGE_PROCESSED | [yellow-background]*Unknown*
| 0x65e9 | 0x0003 (Integer 32-bit signed) | PR_RULE_MSG_STATE | [yellow-background]*Unknown*
| 0x65ea | 0x0003 (Integer 32-bit signed) | PR_RULE_MSG_USER_FLAGS | [yellow-background]*Unknown*
| 0x65eb | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_RULE_MSG_PROVIDER | [yellow-background]*Unknown*
| 0x65ec | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_RULE_MSG_NAME | [yellow-background]*Unknown*
| 0x65ed | 0x0003 (Integer 32-bit signed) | PR_RULE_MSG_LEVEL | [yellow-background]*Unknown*
| 0x65ee | 0x0102 (Binary data) | PR_RULE_MSG_PROVIDER_DATA | [yellow-background]*Unknown*
| 0x65ef | 0x0102 (Binary data) | PR_RULE_MSG_ACTIONS | [yellow-background]*Unknown*
| 0x65f0 | 0x0102 (Binary data) | PR_RULE_MSG_CONDITION | [yellow-background]*Unknown*
| 0x65f1 | 0x0003 (Integer 32-bit signed) | PR_RULE_MSG_CONDITION_LCID | [yellow-background]*Unknown* +
The LCID of the rule message condition (PR_RULE_MSG_CONDITION) +
See section: <<lcid_structure,The LCID structure>>
| 0x65f2 | 0x0002 (Integer 16-bit signed | PR_RULE_MSG_VERSION | [yellow-background]*Unknown*
| 0x65f3 | 0x0003 (Integer 32-bit signed) | PR_RULE_MSG_SEQUENCE | [yellow-background]*Unknown*
| 0x65f4 | 0x000b (Boolean) | PR_PREVENT_MSG_CREATE | [yellow-background]*Unknown*
| 0x65f5 | 0x0040 (GUID) | PR_IMAP_INTERNAL_DATE | [yellow-background]*Unknown*
| 0x65f6 | 0x0102 (Binary data) | | [yellow-background]*Unknown (Found in Exchange)*
|===

=== Non-transmittable properties (0x6600 – 0x67ff)

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x6600 | 0x0003 (Integer 32-bit signed) | PR_PROFILE_VERSION | [yellow-background]*Unknown*
| 0x6601 | 0x0003 (Integer 32-bit signed) | PR_PROFILE_CONFIG_FLAGS | [yellow-background]*Unknown*
| 0x6602 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_HOME_SERVER | [yellow-background]*Unknown*
| 0x6603 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_USER | [yellow-background]*Unknown*
| 0x6604 | 0x0003 (Integer 32-bit signed) | PR_PROFILE_CONNECT_FLAGS | Profile connection flags
| 0x6605 | 0x0003 (Integer 32-bit signed) | PR_PROFILE_TRANSPORT_FLAGS | [yellow-background]*Unknown*
| 0x6606 | 0x0003 (Integer 32-bit signed) | PR_PROFILE_UI_STATE | [yellow-background]*Unknown*
| 0x6607 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_UNRESOLVED_NAME | [yellow-background]*Unknown*
| 0x6608 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_UNRESOLVED_SERVER | [yellow-background]*Unknown*
| | 0x0102 (Binary data) | | [yellow-background]*Unknown*
| 0x6609 | 0x0003 (Integer 32-bit signed) | PR_PROFILE_OPEN_FLAGS | [yellow-background]*Unknown*
| | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_BINDING_ORDER | [yellow-background]*Unknown*
| | 0x0102 (Binary data) | | [yellow-background]*Unknown*
| 0x660a | 0x0003 (Integer 32-bit signed) | PR_PROFILE_TYPE | [yellow-background]*Unknown*
| | 0x0102 (Binary data) | | [yellow-background]*Unknown*
| 0x660b | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown*
| | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_MAILBOX | [yellow-background]*Unknown*
| 0x660c | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_SERVER | [yellow-background]*Unknown*
| 0x660d | 0x0003 (Integer 32-bit signed) | PR_PROFILE_MAX_RESTRICT | [yellow-background]*Unknown*
| 0x660e | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_AB_FILES_PATH | [yellow-background]*Unknown*
| 0x660f | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_FAVFLD_DISPLAY_NAME | [yellow-background]*Unknown*
| 0x6610 | 0x0003 (Integer 32-bit signed) | PR_INTERNET_MESSAGE_FORMAT | [yellow-background]*Unknown*
| | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_OFFLINE_STORE_PATH | [yellow-background]*Unknown*
| 0x6611 | 0x0003 (Integer 32-bit signed) | PidTagContactAddressBookStoreSupportMask +
(PR_CONTAB_STORE_SUPPORT_MASK) | Contact address book store support flags +
Contains the PidTagStoreSupportMask (PR_STORE_SUPPORT_MASK) property obtained from the store that contains the Contacts folder. +
See section: <<message_store_characteristics_mask_definitions,Message store characteristics mask definitions>>
| | 0x0102 (Binary data) | PR_PROFILE_OFFLINE_INFO | [yellow-background]*Unknown*
| 0x6612 | 0x0003 (Integer 32-bit signed) | PR_INTERNET_WRAPPING_LENGTH | [yellow-background]*Unknown*
| | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_HOME_SERVER_DN | [yellow-background]*Unknown*
| 0x6613 | 0x0040 (Filetime) | | [yellow-background]*Unknown*
| | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_HOME_SERVER_ADDRS | [yellow-background]*Unknown*
| 0x6614 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_SERVER_DN | [yellow-background]*Unknown*
| | 0x0102 (Binary data) | | [yellow-background]*Unknown*
| 0x6615 | 0x0048 (GUID) | | [yellow-background]*Unknown* +
Found in message store contains GUID of PFF file used in entry identifiers
| | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_FAVFLD_COMMENT | [yellow-background]*Unknown*
| 0x6616 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_ALLPUB_DISPLAY_NAME | [yellow-background]*Unknown*
| 0x6617 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_PROFILE_ALLPUB_COMMENT | [yellow-background]*Unknown*
| 0x6618 | 0x0003 (Integer 32-bit signed) | PR_DISABLE_WINSOCK | [yellow-background]*Unknown*
| | 0x000b (Boolean) | PR_IN_TRANSIT | [yellow-background]*Unknown*
| | 0x0048 (GUID) | | [yellow-background]*Unknown* +
Found in attachment
| 0x6619 | 0x0003 (Integer 32-bit signed) | PR_PROFILE_AUTH_PACKAGE | [yellow-background]*Unknown*
| | 0x001e (ASCII string) +
0x001f (Unicode string) | PidTagPstBodyPrefix | Body prefix +
Contains the first part of the e-mail body contents (short preview)
| | 0x0102 (Binary data) | PR_USER_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x661a | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_USER_NAME | [yellow-background]*Unknown*
| 0x661b | 0x0102 (Binary data) | PR_MAILBOX_OWNER_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x661c | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_MAILBOX_OWNER_NAME | [yellow-background]*Unknown*
| | 0x0102 (Binary data) | | [yellow-background]*Unknown*
| 0x661d | 0x0003 (Integer 32-bit signed) | PidTagPstBestBodyProptag | [yellow-background]*Unknown*
| | 0x000b (Boolean) | PR_OOF_STATE | [yellow-background]*Unknown*
| 0x661e | 0x0102 (Binary data) | PR_SCHEDULE_FOLDER_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x661f | 0x0014 (Integer 64-bit signed) | | [yellow-background]*Unknown* +
Found in message store and sync issues with similar value as PRQ_ID_SECURE4 +
For sync issues this value relates to the PRQ_ID_SECURE4 value of the messages in this folder. Could it be the PRQ_ID_SECURE4 value for the next new message.
| | 0x0102 (Binary data) | PR_IPM_DAF_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x6620 | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown* +
Found in message store and sync issues folder
| | 0x0102 (Binary data) | PidTagNonIpmSubtreeEntryId +
(PR_NON_IPM_SUBTREE_ENTRYID) | Non-IPM subtree entry identifier +
Shows the entry identifier of the NON_IPM_SUBTREE folder in an Exchange Public Folder store. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| | 0x1102 (Array of Binary data values) | PidTagContactAddressBookFolderEntryIds +
(PR_CONTAB_FOLDER_ENTRYIDS) | Contact address book entry identifiers +
Contains identifiers for the Contacts folders in the message stores where mail users are kept.
| 0x6621 | 0x0102 (Binary data) | PR_EFORMS_REGISTRY_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| | 0x1103 (Array of Integer 32-bit signed values) | PidTagContactAddressBookStoreSupportMasks +
(PR_CONTAB_STORE_SUPPORT_MASKS) | Contact address book store support flags +
Contains flags indicating the store's supported features. +
See section: <<message_store_characteristics_mask_definitions,Message store characteristics mask definitions>>
| 0x6622 | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_INTERNET_MIME_HEADERS | MIME headers
| | 0x0040 (Filetime) | | [yellow-background]*Unknown*
| | 0x0102 (Binary data) | PR_SPLUS_FREE_BUSY_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x6623 | 0x0003 (Integer 32-bit signed) | PR_ROH_FLAGS | RPC over HTTP flags +
Contains the settings in a profile used by Microsoft Office Outlook to connect to Microsoft Exchange Server by using a remote procedure call (RPC) over Hypertext Transfer Protocol (HTTP). +
See section: <<rpc_over_http_flag_definitions,RPC over HTTP flag definitions>>
| | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_HIERARCHY_SERVER | [yellow-background]*Unknown*
| | 0x0102 (Binary data) | PR_OFFLINE_ADDRBOOK_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x6624 | 0x0102 (Binary data) | PR_EFORMS_FOR_LOCALE_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x6625 | 0x0102 (Binary data) | PR_FREE_BUSY_FOR_LOCAL_SITE_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x6626 | 0x0102 (Binary data) | PR_ADDRBOOK_FOR_LOCAL_SITE_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x6627 | 0x0003 (Integer 32-bit signed) | PR_ROH_PROXY_AUTH_SCHEME | RPC over HTTP proxy authentication scheme +
Represents the authentication protocol to be used for this profile. +
See section: <<rpc_over_http_authentication_scheme_definitions,RPC over HTTP authentication scheme definitions>>
| | 0x0102 (Binary data) | PR_OFFLINE_MESSAGE_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x6628 | 0x0003 (Integer 32-bit signed) | PR_INTERNET_CONTENT_MD5 | [yellow-background]*Unknown*
| | 0x0014 (Integer 64-bit signed) | | [yellow-background]*Unknown*
| | 0x0102 (Binary data) | PR_GW_MTSIN_ENTRYID +
PR_MTSInFolder | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x6629 | 0x0102 (Binary data) | PR_GW_MTSOUT_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x662a | 0x000b (Boolean) | PR_TRANSFER_ENABLED | [yellow-background]*Unknown*
| 0x662b | 0x0102 (Binary data) | PR_TEST_LINE_SPEED | [yellow-background]*Unknown*
| 0x662c | 0x000d (Embedded object) | PR_HIERARCHY_SYNCHRONIZER | [yellow-background]*Unknown*
| 0x662d | 0x000d (Embedded object) | PR_CONTENTS_SYNCHRONIZER | [yellow-background]*Unknown* +
Reference to the IExchangeExportChanges object
| 0x662e | 0x000d (Embedded object) | PR_COLLECTOR | [yellow-background]*Unknown*
| 0x662f | 0x000d (Embedded object) | PR_FAST_TRANSFER | [yellow-background]*Unknown*
| 0x6630 | 0x0102 (Binary data) | PR_IPM_FAVORITES_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x6631 | 0x0102 (Binary data) | PR_IPM_PUBLIC_FOLDERS_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x6632 | 0x0003 (Integer 32-bit signed) | | [yellow-background]*Unknown*
| | 0x000b (Boolean) | PR_STORE_OFFLINE | [yellow-background]*Unknown*
| 0x6633 | 0x000b (Boolean) | PidTagPstLrnorestrictions | [yellow-background]*Unknown*
| 0x6634 | 0x000d (Embedded object) | PR_CHANGE_ADVISOR | [yellow-background]*Unknown*
| | 0x0014 (Integer 64-bit signed) | | [yellow-background]*Unknown*
| 0x6635 | 0x0003 (Integer 32-bit signed) | PidTagPstHiddenCount | Number of hidden items
| | 0x001e (ASCII string) +
0x001f (Unicode string) | PR_FAVORITES_DEFAULT_NAME | [yellow-background]*Unknown*
| 0x6636 | 0x0003 (Integer 32-bit signed) | PidTagPstHiddenUnread | Number of unread hidden items
| | 0x0102 (Binary data) | PR_SYS_CONFIG_FOLDER_ENTRYID | [yellow-background]*Unknown* +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x6637 | 0x0048 (GUID) | PR_CHANGE_NOTIFICATION_GUID | [yellow-background]*Unknown*
|===

* [yellow-background]*TODO: migrate documentation*

=== Message content properties for custom message classes (0x6800 – 0x7bff)

* [yellow-background]*TODO: migrate documentation*

=== IPM.Microsoft.WunderBar.Link

* [yellow-background]*TODO: migrate documentation*

=== IPM.Microsoft.WunderBar.SFInfo

* [yellow-background]*TODO: migrate documentation*

=== IPM.RuleOrganizer

* [yellow-background]*TODO: migrate documentation*

=== Non-transmittable properties for custom message classes (0x7c00 – 0x7fff)

* [yellow-background]*TODO: migrate documentation*

=== IPM.Configuration

Found in:

* IPM.Configuration.AvailabilityOptions
* IPM.Configuration.Calendar
* IPM.Configuration.CategoryList
* IPM.Configuration.RssRule
* IPM.Configuration.WorkHours

* [yellow-background]*TODO: migrate documentation*

=== Named properties (0x8000 – 0xfffe)

* [yellow-background]*TODO: migrate documentation*

=== Special error value (0xffff)

* [yellow-background]*TODO: migrate documentation*

=== Named properties in the name-to-id map

* [yellow-background]*TODO: migrate documentation*

=== Class identifiers

* [yellow-background]*TODO: migrate documentation*

=== Calendar property set (0x0000000 - 0x00000ff)

* [yellow-background]*TODO: migrate documentation*

=== Address property set (0x0008000 - 0x00080ff)

* [yellow-background]*TODO: migrate documentation*

=== Task property set (0x0008100 - 0x00081ff)

* [yellow-background]*TODO: migrate documentation*

=== Appointment property set (0x0008200 - 0x00082ff)

* [yellow-background]*TODO: migrate documentation*

=== Common property set (0x0008500 - 0x00085ff)

* [yellow-background]*TODO: migrate documentation*

=== Journal property set (0x0008700 - 0x00087ff)

* [yellow-background]*TODO: migrate documentation*

=== RSS feed property set (0x0008900 - 0x00089ff)

* [yellow-background]*TODO: migrate documentation*

=== Sharing property set (0x0008a00 - 0x0008aff)

* [yellow-background]*TODO: migrate documentation*

=== Sticky note property set (0x0008b00 - 0x0008bff)

* [yellow-background]*TODO: migrate documentation*

=== Public strings property set

* [yellow-background]*TODO: migrate documentation*

=== Internet headers property set

* [yellow-background]*TODO: migrate documentation*

=== Attachment property set

* [yellow-background]*TODO: migrate documentation*

=== Unified messaging property set

* [yellow-background]*TODO: migrate documentation*

=== Other property sets

==== CLSID: 0006200b-0000-0000-c000-000000000046

* [yellow-background]*TODO: migrate documentation*

==== CLSID: 00062013-0000-0000-c000-000000000046

* [yellow-background]*TODO: migrate documentation*

==== CLSID: 00062014-0000-0000-c000-000000000046

* [yellow-background]*TODO: migrate documentation*

==== CLSID: 29f3ab56-554d-11d0-a97c-00a0c911f50a

* [yellow-background]*TODO: migrate documentation*

==== CLSID: 4e3a7680-b77a-11d0-9da5-00c04fd65685

* [yellow-background]*TODO: migrate documentation*

== MAPI definitions

=== [[acknowledgment_mode_definitions]]Acknowledgment mode definitions

The acknowledgment mode definitions are used by the following properties:

* 0x0001 (PidTagAcknowledgementMode)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0 | | Manual
| 1 | | Automatic
|===

=== [[importance_definitions]]Importance definitions

The importance definitions are used by the following properties:

* 0x0017 (PidTagImportance)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0 | IMPORTANCE_LOW | Low
| 1 | IMPORTANCE_NORMAL | Normal
| 2 | IMPORTANCE_HIGH | High
|===

=== [[priority_definitions]]Priority definitions

The priority definitions are used by the following properties:

* 0x0026 (PidTagPriority)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| -1 | PRIO_NONURGENT | Non urgent
| 0 | PRIO_NORMAL | Normal
| 1 | PRIO_URGENT | Urgent
|===

=== [[sensitivity_definitions]]Sensitivity definitions

The sensitivitiy definitions are used by the following properties:

* 0x002e (PidTagOriginalSensitivity)
* 0x0036 (PidTagSensitivity)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0 | SENSITIVITY_NONE | None
| 1 | SENSITIVITY_PERSONAL | Personal
| 2 | SENSITIVITY_PRIVATE | Private
| 3 | SENSITIVITY_COMPANY_CONFIDENTIAL | Company Confidential
|===

=== [[address_type_definitions]]Address type definitions

The address type definitions are used by the following properties:

* 0x0064 (PidTagSentRepresentingAddressType)
* 0x0066 (PidTagOriginalSenderAddressType)
* 0x0068 (PidTagOriginalSentRepresentingAddressType)
* 0x0075 (PidTagReceivedByAddressType)
* 0x0077 (PidTagReceivedRepresentingAddressType)
* 0x0079 (PidTagOriginalAuthorAddressType)
* 0x007b (PidTagOriginallyIntendedRecipAddrtype)
* 0x0c1e (PidTagSenderAddressType)
* 0x3002 (PidTagAddressType)

[cols="1,5",options="header"]
|===
| Value | Identifier | Description
| "EX" | ExChange address
| "FAX" | [yellow-background]*FAX number*
| "MHS" | [yellow-background]*X.400 Message Handling Service address*
| "PROFS" |
| "SMTP" | Simple Mail Transfer Protocol address
| "UNKNOWN" |
| "X400" | X.400 address
|===

The value string should contain only the uppercase alphabetic characters from
A through Z and the numbers from 0 through 9.

=== [[recipient_type_definitions]]Recipient type definitions

The recipient type definitions are used by the following properties:

* 0x0c15 (PidTagRecipientType)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0 | MAPI_ORIG | Originator +
The originator.
| 1 | MAPI_TO | To +
The recipient is a primary (To) recipient.
| 2 | MAPI_CC | CC +
The recipient is a carbon copy (CC) recipient, a recipient that receives a message in addition to the primary recipients.
| 3 | MAPI_BCC | BCC +
The recipient is a blind carbon copy (BCC) recipient. Primary and carbon copy recipients are unaware of the existence of BCC recipients.
3+| _Special purpose flags_
| 0x10000000 | MAPI_P1 | Resend +
The recipient did not successfully receive the message on the previous attempt.
| 0x80000000 | MAPI_SUBMITTED | Already processed +
The recipient has already received the message and does not need to receive it again.
|===

=== [[message_flag_definitions]]Message flag definitions

The message flag definitions are used by the following properties:

* 0x0e07 (PidTagMessageFlags)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x0001 | MSGFLAG_READ | Read +
The message is marked as having been read.
| 0x0002 | MSGFLAG_UNMODIFIED | Unmodified +
The outgoing message has not been modified since the first time that it was saved; the incoming message has not been modified since it was delivered.
| 0x0004 | MSGFLAG_SUBMIT | Submit +
The message is marked for sending.
| 0x0008 | MSGFLAG_UNSENT | Unsent +
The message is still being composed.
| 0x0010 | MSGFLAG_HASATTACH | Has attachment(s) +
The message has at least one attachment.
| 0x0020 | MSGFLAG_FROMME | From Me +
The messaging user sending was the messaging user receiving the message.
| 0x0040 | MSGFLAG_ASSOCIATED | Associated +
The message is an associated message of a folder.
| 0x0080 | MSGFLAG_RESEND | Resend +
The message includes a request for a resend operation with a nondelivery report.
| 0x0100 | MSGFLAG_RN_PENDING | Read notification pending +
A read report needs to be sent for the message.
| 0x0200 | MSGFLAG_NRN_PENDING | Non-Read notification pending +
A nonread report needs to be sent for the message.
| | |
| 0x1000 | MSGFLAG_ORIGIN_X400 | Origin X.400 +
The incoming message arrived over an X.400 link.
| 0x2000 | MSGFLAG_ORIGIN_INTERNET | Origin Internet +
The incoming message arrived over the Internet.
| | |
| 0x8000 | MSGFLAG_ORIGIN_MISC_EXT | Origin external +
The incoming message arrived over an external link other than X.400 or the Internet.
|===

=== [[message_submit_flag_definitions]]Message submit flag definitions

The message submit flag definitions are used by the following properties:

* 0x0e14 (PidTagSubmitFlags)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | SUBMITFLAG_LOCKED | The MAPI spooler currently has the message locked.
| 0x00000002 | SUBMITFLAG_PREPROCESS | The message needs preprocessing.
|===

=== [[message_status_flag_definitions]]Message status flag definitions

The message status flag definitions are used by the following properties:

* 0x0e17 (PidTagMessageStatus)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | MSGSTATUS_HIGHLIGHTED | The message is to be highlighted in recipients' folder displays.
| 0x00000002 | MSGSTATUS_TAGGED | The message has been tagged for a client-defined purpose.
| 0x00000004 | MSGSTATUS_HIDDEN | The message is to be suppressed from recipients' folder displays.
| 0x00000008 | MSGSTATUS_DELMARKED | The message has been marked for subsequent deletion.
| | |
| 0x00000100 | MSGSTATUS_DRAFT | The message is in draft revision status.
| 0x00000200 | MSGSTATUS_ANSWERED | The message has been replied to.
| | |
| 0x00001000 | MSGSTATUS_REMOTE_DOWNLOAD | The message has been marked for downloading from the remote message store to the local client.
| 0x00002000 | MSGSTATUS_REMOTE_DELETE | The message has been marked for deletion at the remote message store without downloading to the local client.
|===

=== [[access_flags_definitions]]Access flags definitions

The access flags definitions are used by the following properties:

* 0x0ff4 (PidTagAccess)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | MAPI_ACCESS_MODIFY | Write access
| 0x00000002 | MAPI_ACCESS_READ | Read access
| 0x00000004 | MAPI_ACCESS_DELETE | Deletion permission
| 0x00000008 | MAPI_ACCESS_CREATE_HIERARCHY | Permission to create sub folders in the folder hierarchy
| 0x00000010 | MAPI_ACCESS_CREATE_CONTENTS | Permission to create content messages
| 0x00000020 | MAPI_ACCESS_CREATE_ASSOCIATED | Permission to create associated content messages
|===

=== [[row_type_definitions]]Row type definitions

The row type definitions are used by the following properties:

* 0x0ff5 (PidTagRowType)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | TBL_LEAF_ROW | Data row
| 0x00000002 | TBL_EMPTY_CATEGORY | Header row with empty category
| 0x00000004 | TBL_EXPANDED_CATEGORY | Expanded header row
| 0x00000008 | TBL_COLLAPSED_CATEGORY | Collapsed header row
|===

=== [[client_access_level_flags_definitions]]Client access level flags definitions

The client access level flags definitions are used by the following properties:

* 0x0ff7 (PidTagAccessLevel)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000000 | | Read-only
| 0x00000001 | | Modify
|===

=== [[icon_index_definitions]]Icon index definitions

The icon index definitions are used by the following properties:

* 0x1080 (PidTagIconIndex)

[cols="1,5",options="header"]
|===
| Value | Description
| 0x00000001 | Post
| |
| 0x00000003 | Other
| |
| 0x00000100 | Read mail
| 0x00000101 | Unread mail
| 0x00000102 | Submitted mail
| 0x00000103 | Unsent mail
| 0x00000104 | Receipt mail
| 0x00000105 | Replied mail
| 0x00000106 | Forwarded mail
| 0x00000107 | Remote mail
| 0x00000108 | Delivery mail
| 0x00000109 | Read mail
| 0x0000010a | Nondelivery mail
| 0x0000010b | Nonread mail
| 0x0000010c | Recall_S mail
| 0x0000010d | Recall_F mail
| 0x0000010e | Tracking mail
| |
| 0x0000011b | Out of office mail
| 0x0000011c | Recall mail
| |
| 0x00000130 | Tracked mail
| |
| 0x00000200 | Contact
| |
| 0x00000202 | Distribution list
| |
| 0x00000300 | Sticky note blue
| 0x00000301 | Sticky note green
| 0x00000302 | Sticky note pink
| 0x00000303 | Sticky note yellow
| 0x00000304 | Sticky note white
| |
| 0x00000400 | Single instance appointment
| 0x00000401 | Recurring appointment
| 0x00000402 | Single instance meeting
| 0x00000403 | Recurring meeting
| 0x00000404 | Meeting request
| 0x00000405 | Accept
| 0x00000406 | Decline
| 0x00000407 | Tentativly
| 0x00000408 | Cancellation
| 0x00000409 | Informational update
| |
| 0x00000500 | Task/Task Update
| 0x00000501 | Unassigned recurring task
| 0x00000502 | Assignee's task
| 0x00000503 | Assigner's task
| 0x00000504 | Task request
| 0x00000505 | Task acceptance
| 0x00000506 | Task rejection
| |
| 0x00000601 | Journal conversation
| 0x00000602 | Journal e-mail message
| 0x00000603 | Journal meeting request
| 0x00000604 | Journal meeting response
| |
| 0x00000606 | Journal task request
| 0x00000607 | Journal task response
| 0x00000608 | Journal note
| 0x00000609 | Journal fax
| 0x0000060a | Journal phone call
| |
| 0x0000060c | Journal letter
| 0x0000060d | Journal Microsoft Office Word
| 0x0000060e | Journal Microsoft Office Excel
| 0x0000060f | Journal Microsoft Office PowerPoint
| 0x00000610 | Journal Microsoft Office Access
| |
| 0x00000612 | Journal document
| 0x00000613 | Journal meeting
| 0x00000614 | Journal meeting cancellation
| 0x00000615 | Journal remote session
| |
| 0xffffffff | New mail
|===

=== [[verb_definitions]]Verb definitions

The verb definition are used by the following properties:

* 0x1081 (PidTagLastVerbExecuted)

Note that these values are not the same as the <<icon_index_definitions,Icon index definitions>>

[cols="1,5",options="header"]
|===
| Value | Description
| 0x00000001 | Post
| |
| 0x00000003 | Other
| |
| 0x00000100 | Read mail
| 0x00000101 | Unread mail
| 0x00000102 | Submitted mail
| 0x00000103 | Unsent mail
| 0x00000104 | Receipt mail
| 0x00000105 | Replied mail
| 0x00000106 | Forwarded mail
| 0x00000107 | Remote mail
| 0x00000108 | Delivery Receipt (Delivery mail)
| 0x00000109 | Read Receipt (Read mail)
| 0x0000010a | Nondelivery Receipt (Nondelivery mail)
| 0x0000010b | Nonread Receipt (Nonread mail)
| 0x0000010c | Recall_S mail
| 0x0000010d | Recall_F mail
| 0x0000010e | Tracking mail
| |
| 0x0000011b | Out of office mail
| 0x0000011c | Recall mail
| |
| 0x00000139 | Tracked mail
| |
| 0x00000200 | Contact
| 0x00000201 | Distribution list
| |
| 0x00000300 | Sticky note blue
| 0x00000301 | Sticky note green
| 0x00000302 | Sticky note pink
| 0x00000303 | Sticky note yellow
| 0x00000304 | Sticky note white
| |
| 0x00000400 | Single instance appointment
| 0x00000401 | Recurring appointment
| 0x00000402 | Single instance meeting
| 0x00000403 | Recurring meeting
| 0x00000404 | Meeting request / Full Update
| 0x00000405 | Accept
| 0x00000406 | Decline
| 0x00000407 | Tentatively Accept
| 0x00000408 | Cancellation
| 0x00000409 | Informational update
| |
| 0x00000500 | Task/Task Update
| 0x00000501 | Unassigned recurring task
| 0x00000502 | Assignee's task
| 0x00000503 | Assigner's task
| 0x00000504 | Task request
| 0x00000505 | Task acceptance
| 0x00000506 | Task rejection
| |
| 0x00000601 | Journal conversation
| 0x00000602 | Journal e-mail message
| 0x00000603 | Journal meeting request
| 0x00000604 | Journal meeting response
| |
| 0x00000606 | Journal task request
| 0x00000607 | Journal task response
| 0x00000608 | Journal note
| 0x00000609 | Journal fax
| 0x0000060a | Journal phone call
| 0x0000060b | Journal Task
| 0x0000060c | Journal letter
| 0x0000060d | Journal Microsoft Office Word
| 0x0000060e | Journal Microsoft Office Excel
| 0x0000060f | Journal Microsoft Office PowerPoint
| 0x00000610 | Journal Microsoft Office Access
| |
| 0x00000612 | Journal document
| 0x00000613 | Journal meeting
| 0x00000614 | Journal meeting cancellation
| 0x00000615 | Journal remote session
| |
| 0xffffffff | New mail
|===

=== [[flag_status_definitions]]Flag status definitions

The resource flag definitions are used by the following properties:

* 0x1090 (PidTagFlagStatus)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000000 | | Unflagged
| 0x00000001 | followupComplete | Flagged complete
| 0x00000002 | followupFlagged | Flagged
|===

=== [[resource_flag_definitions]]Resource flag definitions

The resource flag definitions are used by the following properties:

* 0x3009 (PidTagResourceFlags)

For a message service:

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | SERVICE_DEFAULT_STORE | The message service contains the default store.
| 0x00000002 | SERVICE_SINGLE_COPY | Any attempt to create or copy this message service into a profile where the service already exists will fail.
| 0x00000004 | SERVICE_CREATE_WITH_STORE | Reserved
| 0x00000008 | SERVICE_PRIMARY_IDENTITY | The corresponding message service contains the provider used for the primary identity for this session.
| | |
| 0x00000020 | SERVICE_NO_PRIMARY_IDENTITY | Set to indicate that none of the providers in the message service can be used to supply an identity.
|===

For a service provider:

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | STATUS_DEFAULT_OUTBOUND | This identity should be applied to outbound messages if the profile contains multiple instances of this transport provider.
| 0x00000002 | STATUS_DEFAULT_STORE | This message store is the default store for the profile.
| 0x00000004 | STATUS_PRIMARY_IDENTITY | This provider furnishes the primary identity for the session.
| 0x00000008 | STATUS_SIMPLE_STORE | This message store will be used by Simple MAPI as its default message store.
| 0x00000010 | STATUS_XP_PREFER_LAST | This transport expects to be the last transport selected to send a message when multiple transport providers are able to transmit the message.
| 0x00000020 | STATUS_NO_PRIMARY_IDENTITY | This provider does not furnish an identity in its status row.
| 0x00000040 | STATUS_NO_DEFAULT_STORE | This message store is incapable of becoming the default message store for the profile.
| 0x00000080 | STATUS_TEMP_SECTION | This message store should not be published in the message store table and will be deleted from the profile after logoff.
| 0x00000100 | STATUS_OWN_STORE | This transport provider is tightly coupled with a message store and furnishes the PR_OWN_STORE_ENTRYID  (PidTagOwnStoreEntryId) property in its status row.
| 0x00000200 | HOOK_INBOUND | The spooler hook needs to process inbound messages.
| 0x00000400 | HOOK_OUTBOUND | The spooler hook needs to process outbound messages.
| 0x00000800 | STATUS_NEED_IPM_TREE | The standard folders in this message store, including the interpersonal message (IPM) root folder, have not yet been verified.
| 0x00001000 | STATUS_PRIMARY_STORE | This message store is to be used when a client application logs on.
| 0x00002000 | STATUS_SECONDARY_STORE | This message store is to be used if the primary store is not available when a client application logs on.
|===

=== [[message_store_characteristics_mask_definitions]]Message store characteristics mask definitions

The message store characteristics maskdefinitions are used by the following properties:

* 0x340d (PidTagStoreSupportMask)
* 0x6611 (PidTagContactAddressBookStoreSupportMask)
* 0x6621 (PidTagContactAddressBookStoreSupportMasks)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | STORE_ENTRYID_UNIQUE | Entry identifiers for the objects in the message store are unique, that is, never reused during the life of the store.
| 0x00000002 | STORE_READONLY | All interfaces for the message store have a read-only access level.
| 0x00000004 | STORE_SEARCH_OK | The message store supports search-results folders.
| 0x00000008 | STORE_MODIFY_OK | The message store supports modification of its existing messages.
| 0x00000010 | STORE_CREATE_OK | The message store supports creation of new messages.
| 0x00000020 | STORE_ATTACH_OK | The message store supports attachments (OLE or non-OLE) to messages.
| 0x00000040 | STORE_OLE_OK | The message store supports OLE attachments. The OLE data is accessible through an IStorage interface, such as that available through the PidTagAttachDataObject (PR_ATTACH_DATA_OBJ) property.
| 0x00000080 | STORE_SUBMIT_OK | The message store supports marking a message for submission.
| 0x00000100 | STORE_NOTIFY_OK | The message store supports notifications.
| 0x00000200 | STORE_MV_PROPS_OK | The message store supports multivalued properties, guarantees the stability of value order in a multivalued property throughout a save operation, and supports instantiation of multivalued properties in tables
| 0x00000400 | STORE_CATEGORIZE_OK | The message store supports categorized views of tables.
| 0x00000800 | STORE_RTF_OK | The message store supports Rich Text Format (RTF) messages, usually compressed, and the store itself keeps PR_BODY and PR_RTF_COMPRESSED synchronized.
| 0x00001000 | STORE_RESTRICTION_OK | The message store supports restrictions.
| 0x00002000 | STORE_SORT_OK | The message store supports sorting views of tables.
| 0x00004000 | STORE_PUBLIC_FOLDERS | The folders in this store are public (multi-user), not private (possibly multi-instance but not multi-user).
| 0x00008000 | STORE_UNCOMPRESSED_RTF | The message store supports storage of RTF messages in uncompressed form. An uncompressed RTF stream is identified by the value dwMagicUncompressedRTF in the stream header. The dwMagicUncompressedRTF value is defined in the RTFLIB.H file.
| 0x00010000 | STORE_HTML_OK | The message store supports HTML messages, stored in the PidTagBodyHtml (PR_BODY_HTML)  property.
| 0x00020000 | STORE_ANSI_OK | The message store supports properties containing ANSI (8-bit) characters.
| 0x00040000 | STORE_UNICODE_OK | The message store supports properties containing Unicode characters.
| 0x00080000 | STORE_LOCALSTORE | This flag is reserved and should not be used.
| | |
| 0x00200000 | STORE_ITEMPROC | In a wrapped PST store, indicates that when a new message arrives at the store, the store does rules and spam filter processing on the message separately. The store calls IMAPISupport::Notify, setting fnevNewMail in the NOTIFICATION structure that is passed as a parameter, and then passes the details of the new message to the listening client. Subsequently, when the listening client receives the notification, it does not process rules on the message.
| | |
| 0x00800000 | STORE_PUSHER_OK | The MAPI Protocol Handler will not crawl the store, and the store is responsible to push any changes through notifications to the indexer to have messages indexed.
|===

=== [[valid_folder_mask_definitions]]Valid folder mask definitions

The valid folder mask definitions are used by the following properties:

* 0x35df (PidTagValidFolderMask)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x0001 | FOLDER_IPM_SUBTREE_VALID | The IPM folder subtree has a valid entry identifier.
| 0x0002 | FOLDER_IPM_INBOX_VALID | The interpersonal message (IPM) receive folder has a valid entry identifier.
| 0x0004 | FOLDER_IPM_OUTBOX_VALID | The IPM Outbox folder has a valid entry identifier
| 0x0008 | FOLDER_IPM_WASTEBOX_VALID | The IPM Deleted Items folder has a valid entry identifier.
| 0x0010 | FOLDER_IPM_SENTMAIL_VALID | The IPM Sent Items folder has a valid entry identifier.
| 0x0020 | FOLDER_VIEWS_VALID | The views folder has a valid entry identifier.
| 0x0040 | FOLDER_COMMON_VIEWS_VALID | The common views folder has a valid entry identifier
| 0x0080 | FOLDER_FINDER_VALID | The finder folder has a valid entry identifier.
|===

=== [[container_flag_definitions]]Container flag definitions

The container flag definitions are used by the following properties:

* 0x3600 (PidTagContainerFlags)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | AB_RECIPIENTS | The container can hold recipients. This flag does not indicate whether any recipients are actually present in the container, or whether they can be added or removed.
| 0x00000002 | AB_SUBCONTAINERS | The container can hold child containers. This flag does not indicate whether any subcontainers are actually present in the container, nor whether they can be added or removed.
| 0x00000004 | AB_MODIFIABLE | Entries can be added to and removed from the container. This flag does not indicate whether any entries in the container can be modified.
| 0x00000008 | AB_UNMODIFIABLE | Entries cannot be added to or removed from the container. This flag does not indicate whether any entries in the container can be modified.
| 0x00000010 | AB_FIND_ON_OPEN | Displays a dialog box to request a restriction before displaying any contents of the container.
| 0x00000020 | AB_NOT_DEFAULT | The container is not the default one
|===

=== [[folder_type_definitions]]Folder type definitions

The folder type definitions are used by the following properties:

* 0x3601 (PidTagFolderType)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0 | FOLDER_ROOT | The root folder of the folder hierarchy table, that is, a folder that has no parent folder.
| 1 | FOLDER_GENERIC | A generic folder that contains messages and other folders.
| 2 | FOLDER_SEARCH | A folder that contains the results of a search, in the form of links to messages that meet search criteria.
| | |
| 4 | | [yellow-background]*Unknown (MDB Attachments Folder)* +
Seen in an Exchange database
|===

=== [[aging_granularity_definitions]]Aging granularity definitions

The aging granularity definitions are used by the following properties:

* 0x36ee (PR_AGING_GRANULARITY)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0 | AG_MONTHS | 0x36ec (PR_AGING_PERIOD) is defined in months
| 1 | AG_WEEKS | 0x36ec (PR_AGING_PERIOD) is defined in weeks
| 2 | AG_DAYS | 0x36ec (PR_AGING_PERIOD) is defined in days
|===

=== [[attachment_method_definitions]]Attachment method definitions

The attachment method definitions are used by the following properties:

* 0x3705 (PidTagAttachMethod)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0 | NO_ATTACHMENT | None (No attachment)
| 1 | ATTACH_BY_VALUE | By value +
The PR_ATTACH_DATA_BIN (PidTagAttachDataBinary) property contains the attachment data.
| 2 | ATTACH_BY_REFERENCE | By reference +
The PidTagAttachPathname (PR_ATTACH_PATHNAME) or PidTagAttachLongPathname  (PR_ATTACH_LONG_PATHNAME) property contains a fully-qualified path identifying the attachment to recipients with access to a common file server.
| 3 | ATTACH_BY_REF_RESOLVE | By reference resolve +
The PidTagAttachPathname (PR_ATTACH_PATHNAME) or PidTagAttachLongPathname  (PR_ATTACH_LONG_PATHNAME) property  contains a fully-qualified path identifying the attachment.
| 4 | ATTACH_BY_REF_ONLY | By reference only +
The PidTagAttachPathname (PR_ATTACH_PATHNAME) or PidTagAttachLongPathname  (PR_ATTACH_LONG_PATHNAME) property  contains a fully-qualified path identifying the attachment.
| 5 | ATTACH_EMBEDDED_MSG | Embedded message +
The PidTagAttachDataObject (PR_ATTACH_DATA_OBJ) property contains an embedded object that supports the IMessage interface.
| 6 | ATTACH_OLE | OLE +
The attachment is an embedded OLE object. +
When the OLE object is in OLE 2.0 IStorage format, the data is accessible through PidTagAttachDataObject (PR_ATTACH_DATA_OBJ). When the OLE object is in OLE 1.0 OLESTREAM format, the data is accessible through PR_ATTACH_DATA_BIN as an IStream. The type of the OLE encoding can be determined by the PidTagAttachTag (PR_ATTACH_TAG) value.
|===

=== [[attachment_flag_definitions]]Attachment flag definitions

The attachment flags definitions are used by the following properties:

* 0x3714 (PidTagAttachFlags)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | ATT_INVISIBLE_IN_HTML | Attachment not available in HTML
| 0x00000002 | ATT_INVISIBLE_IN_RTF | Attachment not available in RTF
| 0x00000004 | ATT_MHTML_REF | [yellow-background]*Unknown*
|===

=== [[icon_display_type_definitions]]Icon display type definitions

The icon display type definitions are used by the following properties:

* 0x3900 (PidTagDisplayType)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
3+| _Used by address book contents tables_
| 0x00000000 | DT_MAILUSER | A typical messaging user with a mailbox.
| 0x00000001 | DT_DISTLIST | A distribution list.
| 0x00000002 | DT_FORUM | A forum, such as a bulletin board service or a public or shared folder.
| 0x00000003 | DT_AGENT | A dynamic distribution list or an automated agent, such as Quote-Of-The-Day or a weather chart display.
| 0x00000004 | DT_PRIVATE_DISTLIST | A private, personally administered distribution list.
| 0x00000005 | DT_ORGANIZATION | A special alias defined for a large group, such as helpdesk, accounting, or blood-drive coordinator.
| 0x00000006 | DT_REMOTE_MAILUSER | A recipient known to be from a foreign or remote messaging system or an address list entry in the Global Address List.
| 0x00000007 | DT_ROOM | Conference room.
| 0x00000008 | DT_EQUIPMENT | Equipment, for example, a printer or a projector.
| 0x00000009 | DT_SEC_DISTLIST | Security distribution list.
3+| _Used by address book hierarchy tables and one-off tables_
| 0x00010000 | DT_MODIFIABLE | Modifiable; the container should be denoted as modifiable in the user interface.
| 0x00020000 | DT_GLOBAL | A global address book.
| 0x00030000 | DT_LOCAL | A local address book that you share with a small workgroup.
| 0x00040000 | DT_WAN | A wide area network address book.
| 0x00050000 | DT_NOT_SPECIFIC | Does not match any of the other settings.
3+| _Used by folder hierarchy tables_
| 0x01000000 | DT_FOLDER | Display default folder icon adjacent to folder.
| 0x02000000 | DT_FOLDER_LINK | Display default folder link icon adjacent to folder rather than the default folder icon.
| 0x04000000 | DT_FOLDER_SPECIAL | Display icon for a folder with an application-specific distinction, such as a special type of public folder.
|===

If this property is not set, the client should assume the default type
appropriate for the table, typically DT_FOLDER, DT_LOCAL, or DT_MAILUSER.

=== [[extended_icon_display_type_definitions]]Extended icon display type definitions

The icon display type definitions are used by the following properties:

* 0x3905 (PidTagDisplayTypeEx)

The following are conveniance macro's for the extended icon display type defintions.

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x000000ff | DTE_MASK_LOCAL |
| 0x0000ff00 | DTE_MASK_REMOTE |
| 0x40000000 | DTE_FLAG_ACL_CAPABLE |
| 0x80000000 | DTE_FLAG_REMOTE_VALID |
|===

The actual definitions other than the icon display type definitions are currently
not specified.

* [yellow-background]*Per MSDN the client applications must not define any new
values and must be prepared to deal with an undocumented value.*

=== [[gender_definitions]]Gender definitions

The gender definitions are used by the following properties:

* 0x3a4d (PidTagGender)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x0000 | genderUnspecified | Unspecified
| 0x0001 | genderFemale | Female
| 0x0002 | genderMale | Male
|===

=== [[encoding_preference_flag_definitions]]Encoding preference flag definitions

The encoding preference flag definitions are used by the following properties:

* 0x3a71 (PidTagSendInternetEncoding)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00010000 | MAPI_SEND_NO_RICH_INFO | [yellow-background]*Unknown*
| 0x00020000 | ENCODING_PREFERENCE | If not set the encoding is left to the messaging system.
| 0x00040000 | ENCODING_MIME | Encode the message using MIME. +
If not set the message body is encoded in plain text and the attachments in UUENCODE.
| 0x00080000 | BODY_ENCODING_HTML | Encode the message body in HTML. +
Ignored unless the ENCODING_MIME is set.
| 0x00100000 | BODY_ENCODING_TEXT_AND_HTML | Encode the message body in text and HTML using Multipurpose Internet Mail Extensions (MIME) multipart alternatives. +
Ignored unless the ENCODING_MIME is set.
| 0x00200000 | MAC_ATTACH_ENCODING_UUENCODE | Encode Macintosh attachments in Apple double mode. +
Ignored unless the ENCODING_MIME is set.
| 0x00400000 | MAC_ATTACH_ENCODING_APPLESINGLE | Encode Macintosh attachments in Apple single mode. +
Ignored unless the ENCODING_MIME is set.
| 0x00600000 | MAC_ATTACH_ENCODING_APPLEDOUBLE | Encode Macintosh attachments in UUENCODE. +
If ENCODING_MIME flag is set, this flag is ignored and BinHex encoding is used.
| | |
| 0x10000000 | OOP_DONT_LOOKUP | [yellow-background]*Unknown*
|===

Note that MAC_ATTACH_ENCODING_APPLEDOUBLE (0x00600000) consists of 2 flags.

=== [[codepage_definitions]]Codepage definitions

The codepage definitions are used by the following properties:

* 0x3fde (PidTagInternetCodepage)
* 0x3ffd (PidTagMessageCodepage)

[cols="1,1,5",options="header"]
|===
| Codepage | Character Set | Description
| 874 | windows-874 | Thai (ANSI/OEM) +
The same as 28605 (ISO 8859-15)
| | |
| 932 | shift_jis +
[yellow-background]*(iso-2022-jp)* | Japanese (ANSI/OEM, Shift-JIS)
| 936 | gb2312 | Chinese Simplified (ANSI/OEM, GB2312) +
PRC, Singapore
| 949 | ks_c_5601-1987 | Korean (ANSI/OEM) +
Unified Hangul Code
| 950 | big5 | Chinese Traditional (ANSI/OEM, Big5) +
Taiwan; Hong Kong SAR, PRC
| | |
| 1200 | utf16 +
(unicode) | Unicode (UTF-16 little-endian) +
ISO-10646 BMP +
[yellow-background]*TODO: Either UTF-8 or UTF-16 little-endian. Not defined by MSDN but found in PST file created by ExMerge v6.5.7529.0.*
| 1201 | unicodeFFFE | Unicode (UTF-16 bit-endian)
| | |
| 1250 | windows-1250 | Central European (ANSI)
| 1251 | windows-1251 | Cyrillic (ANSI)
| 1252 | windows-1252 | Western European (ANSI Latin 1)
| 1253 | windows-1253 | Greek (ANSI)
| 1254 | windows-1254 | Turkish (ANSI)
| 1255 | windows-1255 | Hebrew (ANSI)
| 1256 | windows-1256 | Arabic (ANSI)
| 1257 | windows-1257 | Baltic (ANSI)
| 1258 | windows-1258 | Vietnamese (ANSI/OEM)
| | |
| 12000 | utf-32 | Unicode (UTF-32 little-endian)
| 12001 | utf-32BE | Unicode (UTF-32 big-endian)
| | |
| 20127 | us-ascii | US-ASCII
| | |
| 20866 | koi8-r | Russian (KOI8-R) +
Cyrillic
| 21866 | koi8-u | Ukrainian (KOI8-U) +
Cyrillic
| | |
| 28591 | iso-8859-1 | Western European (ISO Latin 1) +
[yellow-background]*MSDN does not define the control characters 0x80 - 0x9f*
| 28592 | iso-8859-2 | Central European (ISO) +
[yellow-background]*MSDN does not define the control characters 0x80 - 0x9f*
| 28593 | iso-8859-3 | Latin 3 (ISO) +
[yellow-background]*MSDN does not define the control characters 0x80 - 0x9f*
| 28594 | iso-8859-4 | Baltic (ISO) +
[yellow-background]*MSDN does not define the control characters 0x80 - 0x9f*
| 28595 | iso-8859-5 | Cyrillic (ISO) +
[yellow-background]*MSDN does not define the control characters 0x80 - 0x9f*
| 28596 | iso-8859-6 | Arabic (ISO) +
[yellow-background]*MSDN does not define the control characters 0x80 - 0x9f*
| 28597 | iso-8859-7 | Greek (ISO) +
[yellow-background]*MSDN does not define the control characters 0x80 - 0x9f*
| 38598 | iso-8859-8 | Hebrew (ISO-Visual) +
[yellow-background]*TODO: (iso-8859-8-i) ISO-Logical* +
[yellow-background]*MSDN does not define the control characters 0x80 – 0x9f, 0xfd and 0xfe.*
| 28599 | iso-8859-9 | Turkish (ISO) +
[yellow-background]*MSDN does not define the control characters 0x80 - 0x9f*
| 28603 | iso-8859-13 | Estonian (ISO)
| 28604 | iso-8859-14 |
| 28605 | iso-8859-15 | Latin 9 (ISO)
[yellow-background]*MSDN does not define the control characters 0x80 - 0x9f*
| 28606 | iso-8859-16 |
| | |
| 50220 | iso-2022-jp | Japanese (JIS)
| 50221 | csISO2022JP | Japanese (JIS-Allow 1 byte Kana)
| 51932 | euc-jp | Japanese (EUC)
| 51949 | euc-kr | Korean (EUC)
| 52936 | hz-gb-2312 | Chinese Simplified (HZ)
| | |
| 65000 | utf-7 | Unicode (UTF-7)
| 65001 | utf-8 | Unicode (UTF-8)
|===

* [yellow-background]*TODO: What about MacRoman? The list above is probably
incomplete. Use MSDN codepage definitions (below) to fill missing codepages.*

[cols="1,1,5",options="header"]
|===
| Codepage | Character Set | Description
| 037 | IBM037 | IBM EBCDIC US-Canada
| 437 | IBM437 | OEM United States
| 500 | IBM500 | IBM EBCDIC International
| 708 | ASMO-708 | Arabic (ASMO 708)
| 709 | | Arabic (ASMO-449+, BCON V4)
| 710 | | Arabic - Transparent Arabic
| 720 | DOS-720 | Arabic (Transparent ASMO); Arabic (DOS)
| 737 | ibm737 | OEM Greek (formerly 437G); Greek (DOS)
| 775 | ibm775 | OEM Baltic; Baltic (DOS)
| 850 | ibm850 | OEM Multilingual Latin 1; Western European (DOS)
| 852 | ibm852 | OEM Latin 2; Central European (DOS)
| 855 | IBM855 | OEM Cyrillic (primarily Russian)
| 857 | ibm857 | OEM Turkish; Turkish (DOS)
| 858 | IBM00858 | OEM Multilingual Latin 1 + Euro symbol
| 860 | IBM860 | OEM Portuguese; Portuguese (DOS)
| 861 | ibm861 | OEM Icelandic; Icelandic (DOS)
| 862 | DOS-862 | OEM Hebrew; Hebrew (DOS)
| 863 | IBM863 | OEM French Canadian; French Canadian (DOS)
| 864 | IBM864 | OEM Arabic; Arabic (864)
| 865 | IBM865 | OEM Nordic; Nordic (DOS)
| 866 | cp866 | OEM Russian; Cyrillic (DOS)
| 869 | ibm869 | OEM Modern Greek; Greek, Modern (DOS)
| 870 | IBM870 | IBM EBCDIC Multilingual/ROECE (Latin 2); IBM EBCDIC Multilingual Latin 2
| 875 | cp875 | IBM EBCDIC Greek Modern
| 1026 | IBM1026 | IBM EBCDIC Turkish (Latin 5)
| 1047 | IBM01047 | IBM EBCDIC Latin 1/Open System
| 1140 | IBM01140 | IBM EBCDIC US-Canada (037 + Euro symbol); IBM EBCDIC (US-Canada-Euro)
| 1141 | IBM01141 | IBM EBCDIC Germany (20273 + Euro symbol); IBM EBCDIC (Germany-Euro)
| 1142 | IBM01142 | IBM EBCDIC Denmark-Norway (20277 + Euro symbol); IBM EBCDIC (Denmark-Norway-Euro)
| 1143 | IBM01143 | IBM EBCDIC Finland-Sweden (20278 + Euro symbol); IBM EBCDIC (Finland-Sweden-Euro)
| 1144 | IBM01144 | IBM EBCDIC Italy (20280 + Euro symbol); IBM EBCDIC (Italy-Euro)
| 1145 | IBM01145 | IBM EBCDIC Latin America-Spain (20284 + Euro symbol); IBM EBCDIC (Spain-Euro)
| 1146 | IBM01146 | IBM EBCDIC United Kingdom (20285 + Euro symbol); IBM EBCDIC (UK-Euro)
| 1147 | IBM01147 | IBM EBCDIC France (20297 + Euro symbol); IBM EBCDIC (France-Euro)
| 1148 | IBM01148 | IBM EBCDIC International (500 + Euro symbol); IBM EBCDIC (International-Euro)
| 1149 | IBM01149 | IBM EBCDIC Icelandic (20871 + Euro symbol); IBM EBCDIC (Icelandic-Euro)
| 1361 | Johab | Korean (Johab)
| 10000 | macintosh | MAC Roman; Western European (Mac)
| 10001 | x-mac-japanese | Japanese (Mac)
| 10002 | x-mac-chinesetrad | MAC Traditional Chinese (Big5); Chinese Traditional (Mac)
| 10003 | x-mac-korean | Korean (Mac)
| 10004 | x-mac-arabic | Arabic (Mac)
| 10005 | x-mac-hebrew | Hebrew (Mac)
| 10006 | x-mac-greek | Greek (Mac)
| 10007 | x-mac-cyrillic | Cyrillic (Mac)
| 10008 | x-mac-chinesesimp | MAC Simplified Chinese (GB 2312); Chinese Simplified (Mac)
| 10010 | x-mac-romanian | Romanian (Mac)
| 10017 | x-mac-ukrainian | Ukrainian (Mac)
| 10021 | x-mac-thai | Thai (Mac)
| 10029 | x-mac-ce | MAC Latin 2; Central European (Mac)
| 10079 | x-mac-icelandic | Icelandic (Mac)
| 10081 | x-mac-turkish | Turkish (Mac)
| 10082 | x-mac-croatian | Croatian (Mac)
| 20000 | x-Chinese_CNS | CNS Taiwan; Chinese Traditional (CNS)
| 20001 | x-cp20001 | TCA Taiwan
| 20002 | x_Chinese-Eten | Eten Taiwan; Chinese Traditional (Eten)
| 20003 | x-cp20003 | IBM5550 Taiwan
| 20004 | x-cp20004 | TeleText Taiwan
| 20005 | x-cp20005 | Wang Taiwan
| 20105 | x-IA5 | IA5 (IRV International Alphabet No. 5, 7-bit); Western European (IA5)
| 20106 | x-IA5-German | IA5 German (7-bit)
| 20107 | x-IA5-Swedish | IA5 Swedish (7-bit)
| 20108 | x-IA5-Norwegian | IA5 Norwegian (7-bit)
| 20127 | us-ascii | US-ASCII (7-bit)
| 20261 | x-cp20261 | T.61
| 20269 | x-cp20269 | ISO 6937 Non-Spacing Accent
| 20273 | IBM273 | IBM EBCDIC Germany
| 20277 | IBM277 | IBM EBCDIC Denmark-Norway
| 20278 | IBM278 | IBM EBCDIC Finland-Sweden
| 20280 | IBM280 | IBM EBCDIC Italy
| 20284 | IBM284 | IBM EBCDIC Latin America-Spain
| 20285 | IBM285 | IBM EBCDIC United Kingdom
| 20290 | IBM290 | IBM EBCDIC Japanese Katakana Extended
| 20297 | IBM297 | IBM EBCDIC France
| 20420 | IBM420 | IBM EBCDIC Arabic
| 20423 | IBM423 | IBM EBCDIC Greek
| 20424 | IBM424 | IBM EBCDIC Hebrew
| 20833 | x-EBCDIC-KoreanExtended | IBM EBCDIC Korean Extended
| 20838 | IBM-Thai | IBM EBCDIC Thai
| 20871 | IBM871 | IBM EBCDIC Icelandic
| 20880 | IBM880 | IBM EBCDIC Cyrillic Russian
| 20905 | IBM905 | IBM EBCDIC Turkish
| 20924 | IBM00924 | IBM EBCDIC Latin 1/Open System (1047 + Euro symbol)
| 20932 | EUC-JP | Japanese (JIS 0208-1990 and 0121-1990)
| 20936 | x-cp20936 | Simplified Chinese (GB2312); Chinese Simplified (GB2312-80)
| 20949 | x-cp20949 | Korean Wansung
| 21025 | cp1025 | IBM EBCDIC Cyrillic Serbian-Bulgarian
| 21027 | | (deprecated)
| 29001 | x-Europa | Europa 3
| 38598 | iso-8859-8-i | ISO 8859-8 Hebrew; Hebrew (ISO-Logical)
| 50220 | iso-2022-jp | ISO 2022 Japanese with no halfwidth Katakana; Japanese (JIS)
| 50221 | csISO2022JP | ISO 2022 Japanese with halfwidth Katakana; Japanese (JIS-Allow 1 byte Kana)
| 50222 | iso-2022-jp | ISO 2022 Japanese JIS X 0201-1989; Japanese (JIS-Allow 1 byte Kana - SO/SI)
| 50225 | iso-2022-kr | ISO 2022 Korean
| 50227 | x-cp50227 | ISO 2022 Simplified Chinese; Chinese Simplified (ISO 2022)
| 50229 | | ISO 2022 Traditional Chinese
| 50930 | | EBCDIC Japanese (Katakana) Extended
| 50931 | | EBCDIC US-Canada and Japanese
| 50933 | | EBCDIC Korean Extended and Korean
| 50935 | | EBCDIC Simplified Chinese Extended and Simplified Chinese
| 50936 | | EBCDIC Simplified Chinese
| 50937 | | EBCDIC US-Canada and Traditional Chinese
| 50939 | | EBCDIC Japanese (Latin) Extended and Japanese
| 51932 | euc-jp | EUC Japanese
| 51936 | EUC-CN | EUC Simplified Chinese; Chinese Simplified (EUC)
| 51949 | euc-kr | EUC Korean
| 51950 | | EUC Traditional Chinese
| 52936 | hz-gb-2312 | HZ-GB2312 Simplified Chinese; Chinese Simplified (HZ)
| 54936 | GB18030 | Windows XP and later: GB18030 Simplified Chinese (4 byte); Chinese Simplified (GB18030)
| 57002 | x-iscii-de | ISCII Devanagari
| 57003 | x-iscii-be | ISCII Bengali
| 57004 | x-iscii-ta | ISCII Tamil
| 57005 | x-iscii-te | ISCII Telugu
| 57006 | x-iscii-as | ISCII Assamese
| 57007 | x-iscii-or | ISCII Oriya
| 57008 | x-iscii-ka | ISCII Kannada
| 57009 | x-iscii-ma | ISCII Malayalam
| 57010 | x-iscii-gu | ISCII Gujarati
| 57011 | x-iscii-pa | ISCII Punjabi
|===

=== [[conflict_resolution_method_definitions]]Conflict resolution method definitions

The conflict resolution method definitions are used by the following properties:

* 0x3fe7 (PidTagResolveMethod)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000000 | LVE_METHOD_DEFAULT | Conflict resolve message should be generated.
| 0x00000001 | RESOLVE_METHOD_LAST_WRITER_WINS | Overwrite target message with current changes being applied.
| 0x00000002 | RESOLVE_NO_CONFLICT_NOTIFICATION | Do not send conflict notification message when generating conflict resolve message in public folder.
|===

=== [[message_editor_format_definitions]]Message editor format definitions

The message editor format definitions are used by the following properties:

* 0x5909 (PidTagMessageEditorFormat)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0 | EDITOR_FORMAT_DONTKNOW | The format for the editor to use is unknown.
| 1 | EDITOR_FORMAT_PLAINTEXT | The editor should display the message in plain text format.
| 2 | EDITOR_FORMAT_HTML | The editor should display the message in HTML format.
| 3 | EDITOR_FORMAT_RTF | The editor should display the message in Rich Text Format.
|===

=== [[rpc_over_http_flag_definitions]]RPC over HTTP flag definitions

The RPC over HTTP flag definitions are used by the following properties:

* 0x6623 (PR_ROH_FLAGS)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | ROHFLAGS_USE_ROH | Connect to the Exchange Server using RPC over HTTP.
| 0x00000002 | ROHFLAGS_SSL_ONLY | Connect to the Exchange Server using Secure Socket Layer (SSL) only.
| 0x00000004 | ROHFLAGS_MUTUAL_AUTH | Mutually authenticate the session when connecting by using SSL.
| 0x00000008 | ROHFLAGS_HTTP_FIRST_ON_FAST | On fast networks, connect by using HTTP first. Then, connect by using TCP/IP.
| | |
| 0x00000020 | ROHFLAGS_HTTP_FIRST_ON_SLOW | On slow networks, connect by using HTTP first. Then, connect by using TCP/IP.
|===

=== [[rpc_over_http_authentication_scheme_definitions]]RPC over HTTP authentication scheme definitions

The RPC over HTTP authentication scheme definitions are used by the following
properties:

* 0x6627 (PR_ROH_PROXY_AUTH_SCHEME)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | ROHAUTH_BASIC | Basic authentication
| 0x00000002 | ROHAUTH_NTLM | NTLM authentication
|===

=== [[personal_storage_table_configuration_flags_definitions]]Personal storage table configuration flags definitions

The personal storage table configuration flags definitions are used by
the following entry types:

* 0x6770 (PidTagPstConfigurationFlags)

[cols="1,1,5",options="header"]
|===
| Bit(s) | Identifier | Description
| 0x00000001 | PST_CONFIG_CREATE_NOWARN | Do not warn if not configured
| 0x00000002 | PST_CONFIG_PRESERVE_DISPLAY_NAME | Preserve display name property
| | |
| 0x00000008 | OST_CONFIG_POLICY_DELAY_IGNORE_OST | Prompt user for location of missing OST file
| 0x00000010 | OST_CONFIG_CREATE_NEW_DEFAULT | Make a new copy of the OST file
| | |
| 0x80000000 | PST_CONFIG_UNICODE | Unicode PST file
|===

=== [[view_class_identifier_definitions]]View class identifier definitions

The view class identifier definitions definitions are used by the following
properties:

* 0x6833 (PR_VIEW_CLSID)

[cols="1,5",options="header"]
|===
| Identifier | Service provider
| [yellow-background]*00062000-0000-0000-c000-000000000046* |
|===

=== [[address_book_provider_type_definitions]]Address book provider type definitions

The address book provider type definitions definitions are used by
the following properties:

* 0x00008029 (PidLidAddressBookProviderArrayType)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | | Email1 is defined for the contact.
| 0x00000002 | | Email2 is defined for the contact.
| 0x00000004 | | Email3 is defined for the contact.
| 0x00000008 | | Business fax is defined for the contact.
| 0x00000010 | | Home fax is defined for the contact.
| 0x00000020 | | Primary fax is defined for the contact.
|===

=== [[appointment_sequence_definitions]]Appointment sequence definitions

The appointment sequence definitions are used by the following properties:

* 0x00008201 (PidLidAppointmentSequence)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | asfMeeting `(M)` | This flag indicates that the object is a meeting object or a meeting-related object.
| 0x00000002 | asfReceived `(R)` | This flag indicates that the represented object was received from someone else.
| 0x00000004 | asfCanceled `(C)` | This flag indicates that the meeting object represented by the object has been canceled.
|===

=== [[appointment_color_definitions]]Appointment color definitions

The appointment color definitions are used by the following properties:

* 0x00008214 (PidLidAppointmentColor)

[cols="1,5",options="header"]
|===
| Value | Description
| 0x00000000 | None
| 0x00000001 | Red
| 0x00000002 | Blue
| 0x00000003 | Green
| 0x00000004 | Grey
| 0x00000005 | Orange
| 0x00000006 | Cyan
| 0x00000007 | Olive
| 0x00000008 | Purple
| 0x00000009 | Teal
| 0x0000000a | Yellow
|===

=== [[side_effect_definitions]]Side effect definitions

The side effect definitions are used by the following properties:

* 0x00008510 (PidLidSideEffects)

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | seOpenToDelete | Additional processing is required on the message object when deleting.
| | |
| 0x00000008 | seNoFrame | No UI is associated with the message object.
| 0x00000010 | seCoerceToInbox | Additional processing is required on the message object when moving or copying to a folder object with a PidTagContainerClass (PR_CONTAINER_CLASS) property of "IPF.Note". +
See section: <<container_class_definitions,Container class definitions>>
| 0x00000020 | seOpenTocopy | Additional processing is required on the message object when copying to another folder.
| 0x00000040 | seOpenToMove | Additional processing is required on the message object when moving to another folder.
| | |
| 0x00000100 | seOpenForCtxMenu | Additional processing is required on the message object when displaying verbs to the end-user.
| | |
| 0x00000400 | seCannotUndoDelete | Cannot undo delete operation, must not be set unless "seOpenToDelete" is set.
| 0x00000800 | seCannotUndoCopy | Cannot undo copy operation, must not be set unless "seOpenTocopy" is set.
| 0x00001000 | seCannotUndoMove | Cannot undo move operation, must not be set unless "seOpenToMove" is set.
| 0x00002000 | seHasScript | The message object contains end-user script.
| 0x00004000 | seOpenToPermDelete | Additional processing is required to permanently delete the message object.
|===

=== [[task_mode_definitions]]Task mode definitions

The task mode definitions are used by the following properties:

* 0x00008518 (PidLidTaskMode)

[cols="1,5",options="header"]
|===
| Value | Description
| 0x00000000 | The task is not assigned.
| 0x00000001 | The task is embedded in a task request.
| 0x00000002 | The task was accepted (by the task assignee).
| 0x00000003 | The task was rejected (by the task assignee).
| 0x00000004 | The task is embedded in a task update.
| 0x00000005 | The task was assigned to the task assigner.
|===

== MAPI data types

=== [[mapi_x400_object_identifiers]]MAPI X.400 object identifiers (MAPIOID)

The MAPI X.400 object identifiers are used by the following properties:

* 0x3702 (PidTagAttachEncoding)
* 0x370a (PidTagAttachTag)

The MAPI X.400 object identifier consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 7 | | The MAPI prefix +
Contains: 0x2a 0x86 0x48 0x86 0xf7 0x14 0x03
| 7 | 1 | | Object identifier type +
0x0a => tag +
0x0b => encoding
| 8 | ... | | Object identifier data +
Known tags (0x0a) +
0x01 => TNEF +
0x03 => OLE +
0x03 0x01 => OLE1 +
0x03 0x01 0x01 => OLE1 storage +
0x03 0x02 => OLE2 +
0x03 0x02 0x01 => OLE2 storage +
0x04 => Mime +
 +
Known encodings (0x0b) +
0x01 => MacBinary
|===

....
References:
initoid.h
mapioid.h

OID 1 0xb0 0xb1
OID 2 0xb0 0xb1 0xb2
OID 3 0xb0 0xb1 0xb2 0xb3
OID 4 0xb0 0xb1 0xb2 0xb3 0xb4

[MSDN]
For complete information on these object identifiers, see the documentation on ASN.1, X.208, and X.209. The object identifier is found in the application-reference element of the FTBP (File Transfer Body Part) environment.
....

....
libpff_table_read_entry_value: table set: 000 entry: 006 item entry type                        : 0x370a (PR_ATTACH_TAG : Attachment application tag)
libpff_table_read_entry_value: table set: 000 entry: 006 item entry value type                  : 0x0102 (PT_BINARY : Binary data)
libpff_table_read_entry_value: table set: 000 entry: 006 item entry value                       : at offset: 211 of size: 9
00000000: 2a 86 48 86 f7 14 03 0a  04                        *.H..... .

found with a MacBinary PR_ATTACH_ENCODING
....

=== The MAPI unique identifier (MAPIUID)

The MAPIUID is a little-endian version of a GUID.

TheMAPIUID is used by the following entry types:

* 0x3414 (PidTagStoreProvider)
* 0x3615 (PidTagAbProviderId)

=== The embedded object

The embedded object has a value type of 0x000d (Embedded object)

The embedded object is used by the following entry types:

* 0x3701 (PidTagAttachDataObject)

The embedded object is 8 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Local descriptor identifier
| 4 | 4 | | [yellow-background]*Unknown*
|===

=== [[entry_identifier_structure]]The entry identifier structure (ENTRYID)

The entry type should be of value type 0x0102 (Binary data). The entry
identifier is used to define object specific references in a generic way.

The entry identifier structure is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Flags +
Contains a byte array
| 4 | 16 | | Service provider identifier +
Contains a  MAPIUID
| 20 | ... | | Object identifier
|===

==== The entry identifier flags

The first byte of the entry identifier flags can contain the following flags:

[cols="1,1,5",options="header"]
|===
| Bit(s) | Identifier | Description
| 0x08 | MAPI_NOTRESERVED | Other users cannot access the entry identifier
| 0x10 | MAPI_NOW | The entry identifier cannot be used at other times
| 0x20 | MAPI_THISSESSION | The entry identifier cannot be used on other sessions.
| 0x40 | MAPI_NOTRECIP | The entry identifier cannot be used as a recipient on a message
| 0x80 | MAPI_SHORTTERM | The entry identifier is short-term. All other values in this byte must be set unless other uses of the entry identifier are enabled.
|===

[yellow-background]*Seen 0xff being used in 0x684e of IPM.Microsoft.WunderBar.Link*

....
Entry identifier from and Exchange database table: Folders, column: N3616
Flags                           : 0xef, 0x00, 0x00, 0x00
Service provider identifier     : 19f83992-c48f-47bf-bada-7aaea4ef8ad9 (Unknown)
Object identifier data:
Descriptor identifier           : 1049576
....

The second byte of the entry identifier flags can contain the following flags:

[cols="1,1,5",options="header"]
|===
| Bit(s) | Identifier | Description
| 0x80 | MAPI_COMPOUND |
|===

==== The service provider identifier

[cols="1,5",options="header"]
|===
| Identifier | Service provider
| a41f2b81-a3be-1910-9d6e-00dd010f5402 | One-off entry identifier
| c840a7dc-42c0-1a10-b4b9-08002b2fe182 | X500 address +
[yellow-background]*Main address book?*
| |
| 4a2f9232-b9d7-4afc-a1d5-9634785b50af | [yellow-background]*Unknown (Folder reference (32-bit))*
| 4b2ef2ba-7cd4-4f00-a536-a91f779c1d42 | [yellow-background]*Unknown (Folder reference (64-bit))*
| 828a5cbd-68fa-49e8-bfab-60c8b4ee1bf6 | [yellow-background]*Unknown (Folder reference (32-bit) (Outlook 2000))*
| 829f38c5-0f8f-48db-942b-2adceac3d50b | [yellow-background]*Unknown (Folder reference (64-bit) (Outlook 2003 11.0))*
| |
| 94e24743-0110-4003-a103-7e01054f2e69 | [yellow-background]*Unknown*
| |
| d3ad91c0-9d51-11cf-a4a9-00aa0047faa4 | Windows address book (WAB) wrapped entry identifier (WAB_GUID)
| |
| f0f35091-7e99-4783-8c97-045ccd019790 | [yellow-background]*Unknown*
|===

==== Object identifiers

===== Folder reference

The folder reference has service provider identifier:

* 4a2f9232-b9d7-4afc-a1d5-9634785b50af
* 4b2ef2ba-7cd4-4f00-a536-a91f779c1d42
* 828a5cbd-68fa-49e8-bfab-60c8b4ee1bf6
* 829f38c5-0f8f-48db-942b-2adceac3d50b

The folder reference entry identifier is used by the following entry types:

* 0x3416
* 0x35e0 (PR_IPM_SUBTREE_ENTRYID)
* 0x35e2 (PR_IPM_OUTBOX_ENTRYID)
* 0x35e3 (PR_IPM_WASTEBASKET_ENTRYID)
* 0x35e4 (PR_IPM_SENTMAIL_ENTRYID)
* 0x35e5 (PR_VIEWS_ENTRYID)
* 0x35e6 (PR_COMMON_VIEWS_ENTRYID)
* 0x35e7 (PR_FINDER_ENTRYID)
* 0x36d0 (PR_IPM_APPOINTMENT_ENTRYID)
* 0x36d1 (PR_IPM_CONTACT_ENTRYID)
* 0x36d3 (PR_IPM_NOTE_ENTRYID)
* 0x36d4 (PR_IPM_TASK_ENTRYID)
* 0x36d5 (PR_REMINDERS_ONLINE_ENTRYID)
* 0x36d7 (PR_IPM_DRAFTS_ENTRYID)

The object identifier is 4 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | (item) descriptor identifier
|===

===== 94e24743-0110-4003-a103-7e01054f2e69

....
Found in 64-bit pst
libpff_table_read_entry_value: table set: 00 entry: 004 item entry type                 : 0x3416 (Folder information reference to "ItemProcSearch")
libpff_table_read_entry_value: table set: 00 entry: 004 item entry value type           : 0x0102 (Binary data)
libpff_table_read_entry_value: table set: 00 entry: 004 item entry value                : at offset: 368 of size: 46
00000000: 00 00 00 00 43 47 e2 94   10 01 03 40 a1 03 7e 01
00000010: 05 4f 2e 69 01 00 38 12   ec 33 e1 a4 38 44 bd 5c
00000020: 54 32 64 30 01 52 00 00   0e 34 00 03 00 00
....

===== One-off entry identifier

The one-off entry identifier has service provider identifier:

* a41f2b81-a3be-1910-9d6e-00dd010f5402

The one-off entry identifier is used by the following entry types:

* 0x003f (PR_RECEIVED_BY_ENTRYID)
* 0x0041 (PR_SENT_REPRESENTING_ENTRYID)
* 0x0043 (PR_RCVD_REPRESENTING_ENTRYID)
* 0x0c19 (PR_SENDER_ENTRYID)
* 0x0e0a (PR_SENTMAIL_ENTRYID)

One-off entry identifiers are used for addresses not found in any available address books.

The object identifier of the one-off entry identifier consists off:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 2 | 0x0000 | Version
| 2 | 2 | | Flags
| 4 | ... | | Display name +
ASCII or Unicode string terminated by end-of-string character
| ... | ... | | Address type +
ASCII or Unicode string terminated by end-of-string character +
See section: <<address_type_definitions,Address type definitions>>
| ... | ... | | E-mail address +
ASCII or Unicode string terminated by end-of-string character
|===

====== One-off entry identifier flags

The one-off entry identifier flags

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x0001 | MAPI_ONE_OFF_NO_RICH_INFO | Set if a recipient should not receive message content in the Transport Neutral Encapsulation Format (TNEF)
| | |
| 0x1000 | | [yellow-background]*Unknown*
| | |
| 0x8000 | MAPI_ONE_OFF_UNICODE | Set if the display name and e-mail address are Unicode strings
|===

===== X500 address

The X500 address has service provider identifier:

* c840a7dc-42c0-1a10-b4b9-08002b2fe182

The X500 address entry identifier is used by the following entry types:

* 0x003f (PR_RECEIVED_BY_ENTRYID)
* 0x0041 (PR_SENT_REPRESENTING_ENTRYID)
* 0x0043 (PR_RCVD_REPRESENTING_ENTRYID)
* 0x0c19 (PR_SENDER_ENTRYID)
* 0x0e0a (PR_SENTMAIL_ENTRYID)

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | 0x00000001 | [yellow-background]*Unknown* +
X500 type indicator?
| 4 | 4 | 0x00000000 +
0x00000001 | [yellow-background]*Unknown*
| 10 | | | X500 address +
ASCII string terminated by end-of-string character
|===

===== Windows address book (WAB) wrapped entry identifier

The Windows address book (WAB) wrapped entry identifier has service provider identifier:

* d3ad91c0-9d51-11cf-a4a9-00aa0047faa4

Notes:

....
Object identifier data:
00000000: c3 00 00 00 00                                     .....f.k ....O.&.

00000000:                66 1d 6b  0b d8 0f eb 4f a6 26 99   .....f.k ....O.&.
00000010: 8f 17 10 df 2f                                     ..../..c q.9.T.E.

00000010:                07 00                               ..../..c q.9.T.E.

00000010:                      63  71 e1 39 15 54 85 45 9f   ..../..c q.9.T.E.
00000020: 77 30 f7 fd 71 c3 84                               w0..q... ....A..c

00000020:                      00  00 00 01 00 41 00 00      w0..q... ....A..c

00000020:                                               63   w0..q... ....A..c
00000030: 71 e1 39 15 54 85 45 9f  77 30 f7 fd 71 c3 84      q.9.T.E. w0..q...

00000030:                                               00   q.9.T.E. w0..q...
00000040: 00 00 02 07 15 00 00                               .......

00000000: 83 00 00 00 00 eb 0b 71  48 23 72 4d 4c ad 56 a1   .......q H#rML.V.
00000010: a5 06 22 32 5b c4 08 2d  00                        .."2[..- .

enum
{
BFLAGS_INTERNAL_MAILUSER		= 0x03,	// Outlook Contact
BFLAGS_INTERNAL_DISTLIST,			// Outlook Distribution List
BFLAGS_EXTERNAL_MAILUSER,			// external (MAPI) Contact
BFLAGS_EXTERNAL_DISTLIST,			// external (MAPI) Distribution List
BFLAGS_MASK_OUTLOOK		= 0x80,	// bit pattern 1000 0000
};
....


=== The entries structure

The entries structure has a value type of 0x0102 (Binary data). It is basically
an array of entry identifiers. The entries structure is used by:

* 0x004f (PR_REPLY_RECIPIENT_ENTRIES)

The entries structure is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 |4 | |The number of entries
| 4 |4 | |The size of the entries
4+| _Entries_
| 8 | 4 | | Entry data size
| 12 | ... | | Entry data +
(consists of an entry identifier structure)
|===

=== The multi value entry identifiers structure

The multi value entry identifiers structure has a value type of 0x1102 (Array
of Binary data values). It is basically an array followed by an entry
identifier. The multi value entry identifiers structure is used by:

* 0x36d8 (PR_ADDITIONAL_REN_ENTRYIDS)
* 0x36e4 (PR_FREEBUSY_ENTRYIDS)

The entries structure is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | The number of entries
4+| _Entries_
| 4 | 4 | | Entry identifier offset +
The offset is relative to the start of the multi value entry identifiers structure and stored after the entries
4+| _Entries data (stored after the entries)_
| ... | [yellow-background]*24* | | Entry data +
(consists of an entry identifier structure)
|===

[yellow-background]*Contains a folder reference entry identifier; is the size
fixed or does it need to be determined run-time?*

=== [[change_key_structure]]The change key structure

The change key structure has a value type of 0x0102 (Binary data) and is used
by:

* 0x65e2 (PR_CHANGE_KEY)

The change list structure consists of a variable size:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 10 | 16 | | [yellow-background]*GUID*
| 16 | ... | | [yellow-background]*Data*
|===

=== [[change_list_structure]]The change list structure

The change list (PredecessorChangeList) structure has a value type of 0x0102
(Binary data) and is used by:

* 0x65e3 (PR_PREDECESSOR_CHANGE_LIST)

The change list structure consists of multiple entries of a variable size:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 1 | | [yellow-background]*Size*
| 1 | 16 | | [yellow-background]*GUID*
| 17 | Size – 16 | | [yellow-background]*Data*
|===

[yellow-background]*The first (in PST) and the second (in OST) entry
(GUID + Data) equals the search key*

....
Contains a set of external identifiers (XIDs) (is GUID) that represent change
numbers of messaging objects in different replicas. The order of the XIDs does
not have significance for interpretation, but is significant for serialization
and deserialization. The set of XIDs MUST be serialized without padding as an
array of SizedXid structures binary-sorted by the value of NamespaceGuid field
of the XID structure in the ascending order.
....

=== [[conversation_index_structure]]The conversation index structure

The conversation index structure has a value type of 0x0102 (Binary data). The
conversation index structure is used by:

* 0x0071 (PidTagConversationIndex)

The conversation index structure consists of:

* a header block
* optional child blocks

The header block is 22 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 6 | | Current system time in UTC +
The 6 most significant bytes of a filetime structure in big-endian +
According to [MAPI] the first byte is reserved 0x01, however it makes more sense that the first byte is part of the current system time
| 6 | 16 | | GUID +
[yellow-background]*It is assumed that the GUID is also in big-endian*
|===

The current system time can be converted into a little-endian filetime stream,
in which the lower 32-bit of the filetime are stored first.

....
stream[ 0 ] = 0
stream[ 1 ] = 0
stream[ 2 ] = header_block[ 5 ]
stream[ 3 ] = header_block[ 4 ]
stream[ 4 ] = header_block[ 3 ]
stream[ 5 ] = header_block[ 2 ]
stream[ 6 ] = header_block[ 1 ]
stream[ 7 ] = header_block[ 0 ]
....

The stream needs to be converted into two 32-bit values.

....
filetime.lower = convert_stream_to_32bit( stream[ 0 – 3 ], little_endian )
filetime.upper = convert_stream_to_32bit( stream[ 4 – 7 ], little_endian )
....

The child blocks is 5 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 1 bit | | The time range bit +
Represents the difference between the current time and the time stored in the header block.
| 0.1 | 31 bits | | Current system time delta +
The difference between the current time and the time in the previous header or child block expressed in filetime units. This value is stored in big-endian. +
[yellow-background]*Note that MSDN refers to this as the difference between the current time and the header block, after looking at the creation time of multiple e-mail messages this does not make sense.*
| 4 | 4 bits | | A random number generated by calling the Win32 function GetTickCount.
| 4.4 | 4 bits | | A sequence count that is taken from part of the random number.
|===

The current system time delta is represented in two different ways. If the
time range bit is:

* not set (0) the difference is less than .02 second and greater than two years. This results in that the high 15 bits and the low 18 bits of the current system time in the header block are discarded.
* set (1) the difference is less than one second and greater than 56 years. This results in that the high 10 bits and the low 23 bits of the current system time in the header block are discarded.

=== The embedded object information reference record

The entry type should be of value type 0x000d (Embedded object)

The Embedded object information reference record consists of 8 bytes:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | The descriptor index identifier
| 4 | 4 | | The object size
|===

=== [[security_desciptor_structure]]The security descriptor structure

The entry type should be of value type 0x0102 (Binary data)

The security descriptor structure is used by the following entry types:

* 0x0e27 (ptagNTSD)
* 0x3d21 (ptagAdminNTSD)

The security descriptor is variable of size and consists of:

* security descriptor transfer header
* NT security descriptor

The security descriptor transfer header is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 2 | | Byte size of the header
| 2 | 2 | | The version +
[yellow-background]*(SECURITY_DESCRIPTOR_TRANSFER_VERSION)*
| 4 | 4 | | Security information flags
| 8 | ...  | | [yellow-background]*Additional data*
|===

The additional data consists of:

....

//  <0 or more>
//          2 BYTES                                 Property Tag
//          16 BYTES                                Named Property GUID
//          1 BYTE                                  Named property "kind"
//          if (kind == MNID_ID)
//                  4 BYTES                         Named property ID
//          else
//                  <null terminated property name in UNICODE!!!!!>
....

The security descriptor transfer header is followed by the NT security
descriptor which is also used in several other parts of Windows NT, like NTFS.
For more information see `[NTSID]`.

==== Security information flags

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | OWNER_SECURITY_INFORMATION | The owner identifier of the object is being referenced.
| 0x00000002 | GROUP_SECURITY_INFORMATION | The primary group identifier of the object is being referenced.
| 0x00000004 | DACL_SECURITY_INFORMATION | The DACL of the object is being referenced.
| 0x00000008 | SACL_SECURITY_INFORMATION | The SACL of the object is being referenced.
| 0x00000010 | LABEL_SECURITY_INFORMATION | The mandatory integrity label is being referenced.
| 0x10000000 | PROTECTED_SACL_SECURITY_INFORMATION | The SACL cannot inherit ACEs.
| 0x20000000 | PROTECTED_DACL_SECURITY_INFORMATION | The DACL cannot inherit access control entries (ACEs).
| 0x40000000 | UNPROTECTED_SACL_SECURITY_INFORMATION | The SACL inherits ACEs from the parent object.
| 0x80000000 | UNPROTECTED_DACL_SECURITY_INFORMATION | The DACL inherits ACEs from the parent object.
|===

=== [[persist_data_block_structure]]Persist data block structure

The entry type should be of value type 0x0102 (Binary data)

The persist data block structure is used by the following entry types:

* 0x36d9 (PidTagAdditionalRenEntryIdsEx)

The persist data block structure is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 2 | | Block type (PersistID)
| 2 | 2 | | Size of elements data (DataElementsSize)
| 4 | ...  | | Array of elements (DataElements)
|===

==== Block type

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x0000 | PERSIST_SENTINEL | No more persist data blocks need to be processed.
| | |
| 0x8001 | RSF_PID_RSS_SUBSCRIPTION | Block data contains: RSS Subscriptions folder.
| 0x8002 | RSF_PID_SEND_AND_TRACK | Block data contains: Tracked Mail Processing folder.
| | |
| 0x8004 | RSF_PID_TODO_SEARCH | Block data contains: To-Do Search folder.
| | |
| 0x8006 | RSF_PID_CONV_ACTIONS | Block data contains: Conversation Action Settings folder.
| 0x8007 | RSF_PID_COMBINED_ACTIONS | [yellow-background]*Unknown (reserved)*
| 0x8008 | RSF_PID_SUGGESTED_CONTACTS | Block data contains: Suggested Contacts folder.
| 0x8009 | RSF_PID_CONTACT_SEARCH | Block data contains: Contacts Search folder. +
Used only by Outlook.
| 0x800a | RSF_PID_BUDDYLIST_PDLS | Block data contains: Instant Messaging (IM) Contact Lists folder. +
The referenced folder contains Personal Distribution Lists (PDLs) representing each group within the IM Contact list. +
Used by both Outlook and Exchange.
| 0x800b | RSF_PID_BUDDYLIST_CONTACTS | Block data contains: IM Contacts folder. +
The referenced folder contains the individual contacts referenced by the IM Contact List groups. +
Used by both Outlook and Exchange.
|===

If the persists data block type is not one of the ones defined here, the block
is ignored and processing is continued until either a PERSIST_SENTINEL type is
found or the end of the data is reached.

==== Persist data block element

The persist data block element is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 2 | | Element type (ElementID)
| 2 | 2 | | Size of element data (ElementDataSize)
| 4 | ...  | | Data
|===

===== Element type

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x0000 | ELEMENT_SENTINEL | No more persist data elements need to be processed.
| 0x0001 | RSF_ELID_ENTRYID | Data contains the entry identifier of the folder specified by block. +
See section: <<entry_identifier_structure,The entry identifier structure (ENTRYID)>>
| 0x0002 | RSF_ELID_HEADER | [yellow-background]*The data contains a 32-bit (header) value.* +
[yellow-background]*The meaning of this value is dependent on the block type. Also see: `[MS-OXOSFLD]`.*
|===

=== [[lcid_structure]]The LCID structure

The entry type should be of value type 0x0003 (Integer 32-bit signed)

The LCID structure is used by the following entry types:

* 0x3ff1 (PidTagMessageLocaleId)
* 0x65f1 (PR_RULE_MSG_CONDITION_LCID)

For more information see `[NTLCID]`.

=== The free/busy data structure

The entry type should be of value type 0x0102 (Binary data)

The free/busy data structure is used by the following entry types:

* 0x686c (PR_PERSONAL_FREEBUSY)

[yellow-background]*Item type 0x686c with value type 0x0102*

....
00000000: ef be ad de 40 00 00 00   00 00 01 00 00 00 00 00
00000010: 00 00 00 00 00 00 00 00   08 00 00 00 04 00 00 00
00000020: 00 00 00 00 00 00 00 00   00 00 00 00 00 00 00 00
00000030: 00 30 85 90 7a 93 c8 01   00 f0 4b 09 4c b2 c9 01
....

=== The appointment recur structure

The entry type should be of value type 0x0102 (Binary data)

The appointment recur structure is used by the following entry types:

* 0x8216 (PidLidAppointmentRecur)

[yellow-background]*TODO*

....
00000000: 04 30 04 30 0b 20 01 00  00 00 c0 21 00 00 01 00   .0.0. .. ...!....
00000010: 00 00 00 00 00 00 20 00  00 00 23 20 00 00 0a 00   ...... . ..# ....
00000020: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 60 71   ........ ......`q
00000030: c7 0c df 80 e9 5a 06 30  00 00 08 30 00 00 1c 02   .....Z.0 ...0....
00000040: 00 00 3a 02 00 00 00 00  00 00 00 00 00 00 00 00   ..:..... ........
....

=== The time zone structure

The entry type should be of value type 0x0102 (Binary data)

The time zone structure is used by the following entry types:

* 0x8233 (PidLidTimeZoneStruct)

[yellow-background]*TODO*

....
00000000: c4 ff ff ff 00 00 00 00  c4 ff ff ff 00 00 00 00   ........ ........
00000010: 0a 00 00 00 05 00 03 00  00 00 00 00 00 00 00 00   ........ ........
00000020: 00 00 03 00 00 00 05 00  02 00 00 00 00 00 00 00   ........ ........
....

=== The time zone definitions structure

The entry type should be of value type 0x0102 (Binary data)

The time zone definitions structure is used by the following entry types:

* 0x825e (PidLidAppointmentTimeZoneDefinitionStartDisplay)
* 0x825f (PidLidAppointmentTimeZoneDefinitionEndDisplay)

[yellow-background]*TODO*

....
00000000: 02 01 34 00 02 00 17 00  57 00 2e 00 20 00 45 00   ..4..... W... .E.
00000010: 75 00 72 00 6f 00 70 00  65 00 20 00 53 00 74 00   u.r.o.p. e. .S.t.
00000020: 61 00 6e 00 64 00 61 00  72 00 64 00 20 00 54 00   a.n.d.a. r.d. .T.
00000030: 69 00 6d 00 65 00 01 00  02 01 3e 00 02 00 41 06   i.m.e... ..>...A.
00000040: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 c4 ff   ........ ........
00000050: ff ff 00 00 00 00 c4 ff  ff ff 00 00 0a 00 00 00   ........ ........
00000060: 05 00 03 00 00 00 00 00  00 00 00 00 03 00 00 00   ........ ........
00000070: 05 00 02 00 00 00 00 00  00 00                     ........ ..
....

=== [[extended_folder_flags_structure]]The extended folder flags structure

The entry type should be of value type 0x0102 (Binary data)

The extended folder flags are used by the following entry types:

* 0x36da (PidTagExtendedFolderFlags)
* 0x6848 (PidTagSearchFolderEfpFlags)

From `[MAPI]`:

....
This property is a binary stream that contains encoded sub-properties for the
folder. It is formatted as a series of variable length sub items. The first 8
bits of the sub item is an ID field, which indicates what kind of flag the sub
item represents. The second 8 bits is the number of bytes of data that follow.
....

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 1 | | Extended flag type
| 1 | 1 | | Extended flag data size
| 2 | ...
|===

Extended flag data

Extended flags types:

[cols="1,1,5",options="header"]
|===
| Value | Name | Remarks
| 0x00 | Invalid | Do not use this value
| 0x01 | ExtendedFlags |
| 0x02 | SearchFolderID | The data field is a 16-byte field. When the application creates a persistent search folder, it must set this field on the folder to the same value as the PR_WB_SF_TAG (PidTagSearchFolderId) binary property on the Search Folder Message.
| 0x03 | SearchFolderTag | Specified in `[MS- OXOSRCH]`
| 0x04 | Reserved |
| 0x05 | ToDoFolderVersion | The data field is a 4-byte field. When the application creates the to-do search folder, it must set the value of this field on the folder to the little-endian integer value of" 0x000c0000":
| 0x06 | Reserved |
|===

Extended flag data of type: ExtendedFlags

[cols="1,5",options="header"]
|===
| Bits | Description
| 0‑1 | Reserved.
| 2 | Set to 0 if the application should show a policy description.
| 3‑5 | Reserved.
| 6‑7 | Controls the display of the number of messages in the folder. +
0x00 – Use the default setting +
0x01 – Use the number of unread messages +
0x02 – Use the total number of messages +
0x03 - Invalid
| 8‑31 | Reserved.
|===

Example:

....
0x36da (PidTagExtendedFolderFlags : Extended folder flags)
0x0102 (PT_BINARY : Binary data)
00000000: 01 04 00 00 10 00

01 => extended flags
04 => 32-bit value
0x00100000 => some unknown flag is set
....

....
01 04 00 00 00 01 (Reminders)
01 04 00 00 10 00 (Deleted Items, Inbox, Outbox, Sent Items, Calendar, Journal, Drafts, Notes, RSS Feeds, Tasks, Renamed by MAE)
01 04 08 00 10 00 (Sync Issues, Conflicts, Local Failures, Server Failures)
01 04 00 00 40 00 05 04  00 00 0c 00 (To-Do Search)
01 04 00 00 40 00 (Tracked Mail Processing)
01 04 00 40 10 00 (Contacts)
01 04 00 80 1e 00 (Junk E-mail)
06 04 02 00 00 00 (IPM_SUBTREE)
....

=== The global identifier structure

The entry type should be of value type [yellow-background]*0x0102 (Binary data)*

The global identifier structure (GID) used by the following entry types:

* [yellow-background]*TODO*

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 16 | | Database identifier +
Contains a GUID
| 16 | 6 | | Item object identifier (or global counter)
|===

=== [[message_identifier_structure]]The message identifier structure

The entry type should be of value type 0x0014 (Integer 64-bit signed)

The message identifier structure (MID) used by the following entry types:

* 0x674a (PidTagMid)

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 2 | | Store object identifier (or replica identifier)
| 2 | 6 | | Message object identifier (or global counter)
|===

=== [[folder_identifier_structure]]The folder identifier structure

The entry type should be of value type 0x0014 (Integer 64-bit signed)

The folder identifier structure (FID) used by the following entry types:

* 0x6748 (PidTagFolderId)

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 2 | | Store object identifier (or replica identifier)
| 2 | 6 | | Folder object identifier (or global counter)
|===

=== [[folder_web_view_information_structure]]The folder web view information structure

[yellow-background]*TODO*

....
The following is a parse of the sample data for the WebViewPersistenceObject stream.

dwVersion
    Offset 0x0, 4 bytes: 0x00000002 (WEBVIEW_PERSISTENCE_VERSION).

dwType
    Offset 0x4, 4 bytes: 0x00000001 (WEBVIEWURL).

dwFlags
    Offset 0x8, 4 bytes: 0x00000001 (WEBVIEW_FLAGS_SHOWBYDEFAULT).

dwUnused[7]
    Offset 0xC, 28 bytes: all zeros.

cbData
    Offset 0x28, 4 bytes: 0x00000032.

wzURL
    Offset 0x2C, 0x32 bytes: array of 25 WCHARs. A Unicode zero-terminated string value: "http://www.microsoft.com".
....

=== Other structures

==== The 0x6835 (binary view data) structure

The entry type should be of value type 0x0102 (Binary data)

The 0x6835 (binary view data) structure is used by the following entry types:

* 0x6835 (binary view data)

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | [yellow-background]*Signature* +
0xda 0xda 0x00 0x00
| 4 | 4 | | [yellow-background]*Empty*
| 8 | 4 | | [yellow-background]*Unknown* +
0x5c 0xed 0x01 0x00 +
0x6c 0xed 0x01 0x00
| 12 | 4 | | [yellow-background]*Unknown* +
0x33 0x0c 0x00 0x00
| 16 | 4 | | [yellow-background]*Unknown* +
0x80 0x80 0x80 0x00
| 20 | 4 | | [yellow-background]*Unknown* +
0x03 0x00 0x00 0x00
| 24 | 4 | | [yellow-background]*Unknown* +
0x08 0x00 0x00 0x00
| 28 | 4 | | Size of the collapse state
| 32 | ... | | Collapse state data
|===

Examples of the collapse state data

....
00000020: 52 4d 4a 47 02 00 00 00  44 63 30 00 ff ff 02 00   RMJG.... Dc0.....
00000030: 03 00 00 00 01 00 00 00  01 00 00 00 03 00 90 10   ........ ........
00000040: 00 00 00 00 03 00 95 10  00 00 00 00 40 00 06 0e   ........ ....@...
00000050: 01 00 00 00 44 63 30 00  24 d1 2e 00 01 01         ....Dc0. $.....
....

....
00000020: 41 67 67 54 61 62 53 74  61 74 65 00 0c 00 00 00   AggTabSt ate.....
00000030: 01 00 00 00 01 00 00 00  0c 00 00 00 01 00 00 00   ........ ........
00000040: 01 00 00 00 00 00 00 00                            ........
....

Font related data [yellow-background]*(related to the 0x80 0x80 0x80 0x00 value?)*

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 2 | | [yellow-background]*Size of the following string in little-endian*
| 2 | 8 | "Segoe UI" | [yellow-background]*Unknown (Name of font)* +
| 10 | 2 | | [yellow-background]*Unknown* +
[yellow-background]*0x50 0x00*
| 12 | 2 | | [yellow-background]*Unknown* +
[yellow-background]*0x20 0x00*
| 14 | 2 | | [yellow-background]*Unknown* +
[yellow-background]*0x40 0x00*
| 16 | 4 | | [yellow-background]*Unknown*
| 20 | 2 | | [yellow-background]*Size of the following string in little-endian*
| 22 | 8 | "Segoe UI" | [yellow-background]*Unknown (Name of font)*
| 30 | 2 | | [yellow-background]*Unknown* +
[yellow-background]*0x50 0x00*
| 32 | 2 | | [yellow-background]*Unknown* +
[yellow-background]*0x20 0x00*
| 34 | 2 | | [yellow-background]*Unknown* +
[yellow-background]*0x40 0x00*
| 36 | 4 | | [yellow-background]*Unknown*
| 40 | 2 | | [yellow-background]*Size of the following string in little-endian*
| 42 | 8 | "Segoe UI" | [yellow-background]*Unknown (Name of font)*
| 50 | 2 | | [yellow-background]*Unknown* +
[yellow-background]*0x50 0x00*
| 52 | 2 | | [yellow-background]*Unknown* +
[yellow-background]*0x20 0x00*
| 54 | 2 | | [yellow-background]*Unknown* +
[yellow-background]*0x40 0x00*
| 56 | 4 | | [yellow-background]*Unknown*
| 60 | 4 | | [yellow-background]*Unknown* +
[yellow-background]*0x10 0x00 0x00 0x00*
| 64 | 4 | | [yellow-background]*Unknown* +
[yellow-background]*0x58 0x00 0x00 0x00*
| 68 | 4 | | [yellow-background]*Unknown* +
[yellow-background]*0xf4 0x01 0x00 0x00*
| 72 | 12 | | [yellow-background]*Empty*
| 84 | 4 | | Number of visible columns
| 88 | ( amount x 4 ) | | Visible column order +
Contains the column index number
| ... | 4 | | Number of column definitions
| ... | ... | | Column definition entries
|===

Column definition entry

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | [yellow-background]*Unknown* +
0x06 0x1f 0x00 0x00 +
0x09 0x1f 0x00 0x00 +
0x11 0x0a 0x40 0x08
| 4 | 4 | | [yellow-background]*Unknown* +
0x80 0x04 0x03 0x00 +
0x80 0x02 0x00 0x00 +
0x00 0x01 0x00 0x00
| 8 | 4 | | [yellow-background]*Unknown* +
0x00 0x06 0x00 0x00 +
0x00 0x09 0x00 0x00 +
0x00 0x11 0x00 0x00 +
Relates to value at offset 0
| 12 | 2 | | [yellow-background]*Unknown* +
0x00 0x00
| 14 | 2 | | Property value type
| 15 | 1 | | [yellow-background]*Unknown* +
0x00 => empty +
0x02 => Class identifier
| 16 | ... | | [yellow-background]*Data after previous unknown*
| ... | 1 | | [yellow-background]*Unknown* +
0x00 => empty +
0x01 => 2 byte number of characters + UTF-16 string
| ... | ... | | [yellow-background]*Data after previous unknown*
| ... | 2 | | Property entry type
| ... | 2 | | [yellow-background]*Unknown* +
0x00 0x00
| | 1 | | [yellow-background]*Unknown* +
0x00 => empty +
0x02 => 20 bytes data ? +
0x03 => 7 bytes data? +
0x04 => 4 bytes data +
0x06 => +
| | ... | | [yellow-background]*Data after previous unknown*
| | 1 | | [yellow-background]*Unknown* +
0x00 => empty +
0x0b => 14 bytes data ? +
0x0e => 7 bytes data ?
| | ... | | [yellow-background]*Data after previous unknown*
| ... | 1 | | [yellow-background]*Unknown* +
0x00 => empty
| ... | ... | | [yellow-background]*Data after previous unknown*
| ... | 1 | | [yellow-background]*Unknown* +
0x00 => empty +
0x01 => byte
| ... | ... | | [yellow-background]*Data after previous unknown*
| ... | 4 | | [yellow-background]*Unknown* +
0x00 0x00 0x00 0x00
| ... | 2 | | Narrow heading string length in big-endian
| ... | ... | | Narrow heading string +
ASCII string not NUL-terminated
| ... | 2 | | [yellow-background]*Unknown* +
0x64 0x00
| ... | 2 | | [yellow-background]*Unknown* +
0x02 0x00
| ... | 2 | | [yellow-background]*Unknown* +
0x00 0x00
| ... | 2 | | Text alignment +
0x49 0x01 align left +
0x6a 0x01 align center
| ... | 2 | | [yellow-background]*Unknown* +
0x00 0x00
| ... | 2 | | Column width
| ... | 4 | | Column index number in big-endian +
0x00fe (not used column?)
| ... | 1 | | [yellow-background]*Unknown* +
0x00 +
0xff (not used column?)
| ... | 1 | | [yellow-background]*Unknown* +
0x01 +
0x02
| ... | 4 | | Wide heading string byte size
| ... | 2 | | Wide heading string length in big-endian +
byte size = length x 2
| ... | ...  | | Wide heading string +
UTF-16 string NUL-terminated
| ... | 2 | | [yellow-background]*Unknown* +
[yellow-background]*0x00 0x00*
|===

==== The 0x859c (PidLidSpamOriginalFolder) structure

The entry type should be of value type 0x0102 (Binary data)

The 0x859c (PidLidSpamOriginalFolder) structure is used by the following entry
types:

* 0x859c (PidLidSpamOriginalFolder)

The 00x859c (PidLidSpamOriginalFolder) structure consists of multiple entries
of a variable size:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | [yellow-background]*Empty*
| 4 | 16 | | [yellow-background]*GUID*
| 20 | 2 | | [yellow-background]*Unknown* +
01 00
| 22 | 16 | | [yellow-background]*GUID*
| 38 | 4 | | [yellow-background]*Empty*
| 42 | 4 | | [yellow-background]*Unknown*
|===

== MAPI data

=== [[message_body]]The message body

Both the plain text message body (PidTagBody) and the HTML message body
(PidTagBodyHtml) are stored using a codepage. The codepage (character set) used
can determined as following:

1. use the PidTagInternetCodepage if available
2. else use the PidTagMessageCodepage if available
3. else use the system codepage.

Note that some items do contain both a PidTagInternetCodepage and
PidTagMessageCodepage, but the PidTagMessageCodepage is used to code the plain
text message body (PidTagBody).

== Item classes

The item classes are defined by the MAPI interface definitions:

[cols="1,1,5",options="header"]
|===
| Item class | Corresponding MAPI interface | Parent MAPI interface
| | IMAPIProp | (IUnknown)
| Container | IMAPIContainer | IMAPIProp
| Folder | IMAPIFolder | IMAPIContainer
| Message | IMessage | IMAPIProp
| Message store | IMsgStore | IMAPIProp
| Address book folder | IABContainer | IMAPIContainer
| Attachment | IAttach | IMAPIProp
| Distribution list | IDistList | IMAPIContainer
| Task | |
| Appointment | |
| Contact | |
|===

IUnknown is not a MAPI interface, but actually a COM interface that specifies
the most basic of interfaces. IMAPIProp is the most basic MAPI interface.

=== [[object_type]]Object type

MAPI items sometimes define 0x0ffe PidTagObjectType (PR_OBJECT_TYPE). This
value contains the following values.

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | MAPI_STORE | Message store
| 0x00000002 | MAPI_ADDRBOOK | Address book
| 0x00000003 | MAPI_FOLDER | Folder
| 0x00000004 | MAPI_ABCONT | Address book container
| 0x00000005 | MAPI_MESSAGE | Message
| 0x00000006 | MAPI_MAILUSER | (Individual) Recipient
| 0x00000007 | MAPI_ATTACH | Attachment
| 0x00000008 | MAPI_DISTLIST | Distribution list (recipient)
| 0x00000009 | MAPI_PROFSECT | Profile section
| 0x0000000a | MAPI_STATUS | Status object
| 0x0000000b | MAPI_SESSION | Session
| 0x0000000c | MAPI_FORMINFO | Form information
|===

=== [[container_class_definitions]]Container class definitions

The container classes are defined by PidTagContainerClass (PR_CONTAINER_CLASS).
The following are known:

[cols="1,5",options="header"]
|===
| Message type | Usage
| IPF | (inter-personal folder)
| IPF.Note | Folder containing e-mails
| IPF.Appointment | Folder containing appointments
| IPF.Contact | Folder containing contacts
| IPF.Journal | Folder containing journal entries (activities)
| IPF.StickyNote | Folder containing notes
| IPF.Task | Folder containing tasks
| Outlook.ItemProcessor |
| IPF.Note.OutlookHomepage | (used by RSS Feeds folder)
|===

=== [[message_class_definitions]]Message class definitions

Message classes are defined by PidTagMessageClass (PR_MESSAGE_CLASS). The IPM
prefix stands for inter-personal message and is used for most of the visible
items used in Microsoft Outlook. The message class can have a prefix like REPORT
and a suffix like NDR. The middle portion of the message class describes the
item type.

[cols="1,5",options="header"]
|===
| Item type | Usage
| IPM | Common (inter-personal message) +
Items for which the specified form cannot be found
| IPM.Activity | Journal entry
| IPM.Appointment | Appointment
| IPM.Configuration.* | [yellow-background]*Configuration*
| IPM.Conflict.Message | Conflict message
| IPM.Contact | Contact
| IPM.DistList | Distribution list
| IPM.Document.* | Document
| IPM.OLE.Class | [yellow-background]*The exception item of a recurrence series*
| IPM.OLE.CLASS.{00061055-0000-0000-C000-000000000046} | Recurring appointment
| IPM.Note | E-mail message (note)
| IPM.FAX +
IPM.Note.Fax | Fax
| IPM.Note.IMC.Notification | Reports from the Internet Mail Connect (the Exchange Server gateway to the Internet)
| IPM.Note.Mobile.SMS | Mobile text message
| IPM.Note.Mobile.MMS | Mobile multimedia message
| IPM.Note.Rules.OofTemplate.Microsoft | Out-of-office template
| IPM.Note.Secure | Encrypted notes to other people
| IPM.Note.Secure.Sign | Digitally signed notes to other people
| IPM.Note.SMIME | S/MIME e-mail
| IPM.Note.SMIME.MultipartSigned | S/MIME e-mail
| IPM.Note.Voicemail | Voicemail
| IPM.Post | Posting note in a folder
| IPM.Post.RSS | RSS feed
| IPM.Report | Reporting item status
| IPM.Sharing +
IPM.Sharing.* | [yellow-background]*Sharing*
| IPM.Schedule.Meeting.Request | Request for meeting
| IPM.Schedule.Meeting.Resp.* | Response on request for meeting
| IPM.Schedule.Meeting.Canceled | Meeting cancellation
| IPM.Schedule.Meeting.Notification | Notification for meeting
| IPM.StickyNote | Sticky note +
[yellow-background]*MSDN: Creating note*
| IPM.Task | Task
| IPM.TaskRequest.* | Task request
|===

[cols="1,5",options="header"]
|===
| Prefix | Usage
| REPORT | Report +
According to the Exchange protocol documentation REPORT is only used with IPM.Note
|===

[cols="1,5",options="header"]
|===
| Suffix | Usage
2+| REPORT.IPM.Note.*
| REPORT.IPM.Note.DR | Delivery report +
The e-mail was delivered
| REPORT.IPM.Note.NDR | Nondelivery report +
The e-mail could not be delivered
| REPORT.IPM.Note.IPNRN | Read receipt +
The recipient read the e-mail
| REPORT.IPM.Note.IPNNRN | Non-read receipt +
The recipient deleted the e-mail without reading
2+| IPM.Schedule.Meeting.Resp.*
| IPM.Schedule.Meeting.Resp.Neg | Responses to decline meeting requests
| IPM.Schedule.Meeting.Resp.Pos | Responses to accept meeting requests
| IPM.Schedule.Meeting.Resp.Tent | A new time for the meeting is proposed +
[yellow-background]*MSDN: Responses to tentatively accept meeting requests*
2+| REPORT.IPM.Schedule.Meeting.Resp.*
| [yellow-background]*REPORT.IPM.Schedule.Meeting.Request.NDR* |
2+| IPM.TaskRequest.*
| IPM.TaskRequest.Accept | Responses to accept task requests
| IPM.TaskRequest.Decline | Responses to decline task requests
| IPM.TaskRequest.Update | Update for a task requested
2+| IPM.Document.*
| |
|===

==== Notes

Other message classes:

[cols="1,5",options="header"]
|===
| Item type | Usage
| IPM.Microsoft.ScheduleData.FreeBusy | Free Busy Schedule Data
| IPM.Microsoft.FolderDesign.NamedView |
| IPM.Microsoft.WunderBar.Persistence |
| IPM.Microsoft.WunderBar.SFInfo |
| IPM.Microsoft.WunderBar.Link |
| IPM.Microsoft.MigrationStatus |
| |
| IPC.MS.Outlook.AgingProperties |
| |
| IPC.MS.REN.USERFIELDS | Is used for message delivery/read notice?
| |
| IPM.ContactLinkingViews |
| IPM.Contact.OlTrans | (some kind of contact class)
| |
| IPM.MessageManager |
| |
| IPM.Note.StorageQuotaWarning | Storage quota warning
| |
| IPM.Rule.Message |
| IPM.RuleOrganizer | Outlook Rules Organizer
| IPM.Schedule.Meeting | Meeting
| IPM.ExtendedRule.Message |
| |
| IPM.Configuration.Calendar |
| IPM.Configuration.AvailabilityOptions |
| IPM.Configuration.WorkHours |
| IPM.Configuration.RssRule |
| IPM.Configuration.HomeTimeZone |
| IPM.Configuration.CategoryList |
| |
| IPM.ContactLinkingViews |
| IPM.Contact.OlTrans | Contact
| |
| IPM.Note.StorageQuotaWarning |
| |
| IPM.Microsoft.SniffData |
|===
....
IPC
REPORT.IPM

MSDN:
IPM.Recall.Report 	Message recall reports
IPM.Outlook.Recall 	Recalling sent messages from recipient Inboxes
IPM.Remote 	Remote Mail message headers
IPM.Note.Rules.ReplyTemplate.Microsoft 	Editing rule reply templates
IPM.Resend 	Resending a failed message
....

== Other item classes

=== Name to identifier map

[cols="1,1,1,5",options="header"]
|===
| Item | Value | Identifier | Description
| 0x0001 | 0x0003 (Integer 32-bit signed) | PidTagNameidBucketCount | Name-to-ID Map Number of Validation Entries +
[yellow-background]*(Hash bucket count)*
| 0x0002 | 0x0102 (Binary data) | PidTagNameidStreamGuid | Name-to-ID map Class Identifiers +
Contains the name-to-id map table class identifiers
| 0x0003 | 0x0102 (Binary data) | PidTagNameidStreamEntry | Name-to-ID map Entries +
Contains the name-to-id map table entries
| 0x0004 | 0x0102 (Binary data) | PidTagNameidStreamString | Name-to-ID map Strings +
Contains the name-to-id map table strings
| 0x1000 - 0xfffe | 0x0102 (Binary data) | PidTagNameidBucketBase | Name-to-ID Map Validation Entries +
[yellow-background]*(Hash buckets)* +
According to `[MS-PST]` a hash bucket can hold up to 8 validation entries
|===

== [[error_values]]Error values (SCODE)

Error values are stored in a SCODE structure. The SCODE structure is also known
as HRESULT.

The SCODE structure consist of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 (LSB) | 16 bits | | The error or warning code
| 2 | 11 bits | | Error facility
| 3.3 | 1 bit | | r-bit (Reserved)
| 3.4 | 1 bit | | N-bit (Reserved)
| 3.5 | 1 bit | | C-bit (Reserved)
| 3.6 | 1 bit | | R-bit (Reserved)
| 3.7 | 1 bit | | S-bit (success-bit) +
0 indicates success and 1 failure.
|===

=== Error facility definitions

The SCODE specifies error and warning values for different facilities:

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x000 | FACILITY_NULL | Used for broadly applicable common status codes such as S_OK or E_OUTOF_MEMORY.
| 0x001 | FACILITY_RPC | For status codes returned from remote procedure calls.
| 0x002 | FACILITY_DISPATCH | For late binding IDispatch interface errors.
| 0x003 | FACILITY_STORAGE | For status codes returned from IStorage or IStream method calls relating to structured storage. Status codes with code (lower 16 bits) values in the range of Windows error codes (that is, less than 256) have the same meaning as the corresponding Windows errors.
| 0x004 | FACILITY_ITF | For most status codes returned from interface methods; the value is defined by the interface. That is, two HRESULT values with exactly the same 32-bit value returned from two different interfaces might have different meanings.
3+|
| 0x008 | FACILITY_WINDOWS |
3+|
| 0x010 | FACILITY_SCARD |
| 0x011 | FACILITY_COMPLUS |
3+|
| 0x019 | FACILITY_HTTP |
| 0x020 | FACILITY_BACKGROUNDCOPY |
3+|
| 0x026 | FACILITY_GRAPHICS |
| 0x027 | FACILITY_NAP FACILITY_SHELL |
| 0x028 | FACILITY_INK |
3+|
| 0x030 | FACILITY_PLA |
| 0x031 | FACILITY_FVE |
| 0x032 | FACILITY_FWP |
3+|
| 0x034 | FACILITY_NDIS |
3+|
| 0x7ff | FACILITY_BACKUP |
| 0x800 | FACILITY_NTDSB |
|===

=== Error values

* [yellow-background]*TODO: complete documentation*

== Notes

....
Where is PidTagConversationTracking (Boolean) ?
Where is PidTagConversationId (Binary Data) ?
....

=== Conversation identifier

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 2 | | [yellow-background]*Unknown (i)*
| 2 | 4 | | Buffer
| 6 | 64 | | [yellow-background]*Unknown (in)* +
GUID
| 70 | 16 | | MD5 digest hash
|===

=== [[subject_control_codes]]Subject control codes

The PidTagSubject sometimes contains 2 control code character values at the
start of the string.

....
0x01 0x01
0x01 0x04  IPM.Note, ?
0x01 0x05 (RE:)
0x01 0x06  IPM.Note, ?
0x01 0x07  REPORT.IPM.Note.IPNRN, Read Receipt
0x01 0x10  REPORT.IPM.Note.NDR, Undeliverable
0x01 0x14  REPORT.IPM.Note.NDR, Undeliverable
0x01 0x1a  IPM.Note.Rules.OofTemplate.Microsoft, Out of Office AutoReply
....

=== IExchangeModifyTable

[cols="1,5",options="header"]
|===
| MAPI property | Usage
| PR_RULE_ACTIONS | (Defined by MAPI)
| PR_RULE_CONDITION | (Defined by MAPI)
| PR_RULE_ID | (Defined by MAPI)
| PR_RULE_LEVEL | (Defined by MAPI)
| PR_RULE_NAME | (Defined by MAPI)
| PR_RULE_PROVIDER | (Defined by MAPI)
| PR_RULE_PROVIDER_DATA | (Defined by MAPI)
| PR_RULE_SEQUENCE | (Defined by MAPI)
| PR_RULE_STATE | (Defined by MAPI)
| PR_RULE_USER_FLAGS | (Defined by MAPI)
| PR_MEMBER_ENTRYID | (Defined by MAPI)
| PR_MEMBER_ID | (Defined by MAPI)
| PR_MEMBER_NAME | (Defined by MAPI)
| PR_MEMBER_RIGHTS | (Defined by MAPI)
|===

=== IMailUser

[cols="1,5",options="header"]
|===
| MAPI property | Usage
| PR_ADDRTYPE | (Defined by MAPI)
| PR_DISPLAY_NAME | (Defined by MAPI)
| PR_DISPLAY_TYPE | (Defined by MAPI)
| PR_EMAIL_ADDRESS | (Defined by MAPI)
| PR_ENTRYID | (Defined by MAPI)
| PR_OBJECT_TYPE | (Defined by MAPI)
| PR_RECORD_KEY | (Defined by MAPI)
| PR_SEARCH_KEY | (Defined by MAPI)
| PR_ACCOUNT | (Defined by MAPI)
| PR_ASSISTANT | (Defined by MAPI)
| PR_BUSINESS_TELEPHONE_NUMBER | (Defined by MAPI)
| PR_GIVEN_NAME | (Defined by MAPI)
| PR_GOVERNMENT_ID_NUMBER | (Defined by MAPI)
| PR_LOCALITY | (Defined by MAPI)
| PR_POSTAL_ADDRESS | (Defined by MAPI)
|===

=== IMAPIStatus

[cols="1,5",options="header"]
|===
| MAPI property | Usage
| PR_DISPLAY_NAME | (Defined by MAPI)
| PR_PROVIDER_DISPLAY | (Defined by MAPI)
| PR_PROVIDER_DLL_NAME | (Defined by MAPI)
| PR_RESOURCE_FLAGS | (Defined by MAPI)
| PR_RESOURCE_METHODS | (Defined by MAPI)
| PR_RESOURCE_TYPE | (Defined by MAPI)
| PR_STATUS_CODE | (Defined by MAPI)
|===

==== IProfSect

[cols="1,5",options="header"]
|===
| MAPI property | Usage
| PR_OBJECT_TYPE | (Defined by MAPI)
| PR_PROFILE_NAME | (Defined by MAPI)
|===

=== COM class identifiers

[cols="1,5",options="header"]
|===
| Class identifier | Interface
| 00000000-0000-0000-c000-000000000046 | IUnknown
| 00020400-0000-0000-c000-000000000046 | IDispatch
|===

=== The free/busy entry identifiers structure

The entry type should be of value type 0x0102 (Binary data)

The free/busy entry identifiers structure is used by the following entry types:

* 0x36e4 (PR_FREEBUSY_ENTRYIDS)

[yellow-background]*Item type 0x36e4 with value type 0x0102*

....
00000000: 03 00 00 00 10 00 00 00   28 00 00 00 28 00 00 00
Array of 3 values followed by a folder information reference ?
00000010: 00 00 00 00 c5 38 9f 82   8f 0f db 48 94 2b 2a dc
00000020: ea c3 d5 0b 28 00 10 00
Refers to "IPM.Microsoft.ScheduleData.FreeBusy"
....

The value type should be 0x1102

=== Recipient types

....
#define MAPI_P1     0x10000000  /* Recipient is a P1 resend recipient       */
#define MAPI_SUBMITTED 0x80000000 /* Recipient is already processed         */
/* #define MAPI_AUTHORIZE 4        recipient is a CMC authorizing user      */
/*#define MAPI_DISCRETE 0x10000000 Recipient is a P1 resend recipient       */
....

=== PRQ_ID_SECURE4

....
0x0000004400000000 => SPAM Search Folder 2

0x0100000000000000 => IPM_SUBTREE
0x0200000000000000 => NON_IPM_SUBTREE
0x0300000000000000 => EFORMS REGISTRY
0x0400000000000000 => Organization Forms
0x0500000000000000 => Private root folder
0x0600000000000000 => Common Views
0x0700000000000000 => Finder
0x0800000000000000 => Shortcuts
0x0900000000000000 => Views
0x0a00000000000000 => IPM_SUBTREE
0x0f00000000000000 => ~MAPISP(Internal)

0x1000000000000000 => Drizzle
0x1200000000000000 => Shared Data
....

=== Unknown long property identifier (libpst)?

[cols="1,1,1,5",options="header"]
|===
| Item type | Value type | Identifier | Description
| 0xffffffff | 0x101e +
0x101f | | [yellow-background]*Unknown* +
Array of ASCII or Unicode string value
|===

=== FILETIME precision

An estimation of the significance of the bits in the FILETIME (PT_SYSTIME) structure.

[cols="1,5",options="header"]
|===
| Bits | Usage
2+| Lower 32-bit
| 0 – 24 | Mainly significant for the 100ns intervals
| 25 – 29 | Mainly significant for the seconds
| 30 – 31 | Mainly significant for the minutes
2+| Upper 32-bit
| 32 – 35 | Mainly significant for the minutes
| 36 – 40 | Mainly significant for the hours
| 41 – 63 | Mainly significant for the days
|===

=== PR_ATTACH_VIRUS_SCAN_INFO

Found in EDB does not change often

....
03 00 43 41 49 5f 56 00  00 00 00 68 69 80 00 00
00 00 00
....

=== PR_INTERNET_MESSAGE_INFO

Found in EDB does not change often

....
49 4e 46 4f 0a 00 00 00  04 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00  00 00 00 00
....

=== PR_INTERNET_PARSE_STATE

Found in EDB, start of data changes

....
01 00 f2 bd 00 00 00 00  94 00 00 00 f2 bd 00 00
01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00  94 00 00 00 94 00 00 00
00 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00
....

=== PR_INTERNET_CONTENT

Found in EDB,

....
D0 01 00 00 00 00 00 00  01 00 00 00 00 00 00 00
01 00 00 00 00 00 00 00  00 10 00 00 00 00 00 00
00 20 00 00 00 00 00 00  00 00 00 00 00 00 00 00
....

=== 0x67b2 0x0102

....
03 00 79 0e (0x0e79 0x0003) PR_TRUST_SENDER
03 00 a1 66
03 00 f1 3f
02 01 20 67
03 01 59 66
02 01 c6 66
03 00 fd 3f
03 00 de 3f
02 01 c7 66
0b 00 5a 66
b0 84 55 80
b0 84 42 80
0b 00 47 80
b0 84 41 80
0b 00 46 80
0b 00 48 80
0b 00 49 80
0b 00 4a 80
0b 00 4c 80
48 10 1d 82
0b 00 1f 0e
40 00 39 00
....

=== 0x677f 0x0102

MAPI identifiers

....
14 00 48 67
14 00 88 3f
02 01 b0 67
40 00 8f 66
03 00 43 67 40 00 39 00 14 00 a4 67 02 01 a5 67
14 10 a6 67 02 01 e0 65 02 01 e2 65 02 01 e3 65
02 00 a9 67 0b 00 ad 67 03 00 07 0e 0b 00 aa 67
0b 00 1b 0e 03 00 17 0e 03 00 ab 67 40 00 06 0e
b0 84 1a 00 b0 84 3d 00 b0 84 1d 0e 03 00 17 00
0b 00 ae 67 0b 00 af 67 0b 00 57 00 0b 00 58 00
0b 00 59 00 0b 00 ea 3f 40 00 48 00 02 01 47 00
40 00 07 30 40 00 08 30 0b 00 01 0e fb 00 40 67
02 01 45 67 14 00 4a 67 14 00 80 3f 02 01 c2 65
02 01 f3 3f 02 01 f4 3f 02 01 d4 3f 03 00 23 0e
b0 84 35 10 b0 84 39 10 02 01 68 40 02 01 69 40
b0 84 36 10 02 01 12 10 14 00 4b 67 02 00 f2 65
03 00 f3 65 03 00 e9 65 02 01 f0 65 03 00 f1 65
0b 00 53 67 0b 00 08 67 03 00 00 66 03 00 01 66
03 00 02 66 03 00 03 66 03 00 04 66 b0 84 f3 10
03 00 10 67 b0 84 07 67 40 00 54 66 0b 00 f4 10
0b 00 f5 10 0b 00 f6 10 40 00 09 67 48 10 0c 67
03 00 61 0e 0b 00 62 0e 03 00 08 0e 02 01 b9 67
02 01 ba 67 02 01 bd 67 02 01 be 67
....

=== PR_CONTENTS_SYNCHRONIZER

Flags used by Exchange Incremental Change Synchronization Interface

....
#define SYNC_UNICODE                         0x01
#define SYNC_NO_DELETIONS                    0x02
#define SYNC_NO_SOFT_DELETIONS                   0x04
#define SYNC_READ_STATE                      0x08
#define SYNC_ASSOCIATED                      0x10
#define SYNC_NORMAL                          0x20
#define SYNC_NO_CONFLICTS                    0x40
#define SYNC_ONLY_SPECIFIED_PROPS            0x80
#define SYNC_NO_FOREIGN_KEYS                 0x100
#define SYNC_LIMITED_IMESSAGE                0x200
#define SYNC_CATCHUP                         0x400
#define SYNC_NEW_MESSAGE                     0x800 // only applicable to ImportMessageChange()
#define SYNC_MSG_SELECTIVE                   0x1000 // Used internally. Will reject if used by clients.
#define SYNC_BEST_BODY                       0x2000
#define SYNC_IGNORE_SPECIFIED_ON_ASSOCIATED  0x4000
#define SYNC_PROGRESS_MODE                   0x8000 // AirMapi progress mode
#define SYNC_FXRECOVERMODE                   0x10000
#define SYNC_DEFER_CONFIG                    0x20000
#define SYNC_FORCE_UNICODE                   0x40000 // Forces server to return Unicode properties
....

....
#define CONVENIENT_DEPTH  ((ULONG) 0x00000001
#define SHOW_SOFT_DELETES ((ULONG) 0x00000002)
#define SHOW_SUBFOLDERS   ((ULONG 0x00000004)
....

=== PR_FOLDER_XVIEWINFO_E

....
00000000: 00 00 00 00 4c 02 e1 00  4d 00 65 00 73 00 73 00   ....L... M.e.s.s.
00000010: 61 00 67 00 65 00 73 00  00 00                     a.g.e.s. ..
....

Contains a version number, some flags and a view name in Unicode, all of which
are Outlook specific.

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Version?
| 4 | 4 | | Flags?
| 8 | ... | | View name +
Contains an UTF-16 little-endian string with an end-of-string character.
|===

:numbered!:
[appendix]
== References

`[SMITH02]`

[cols="1,5",options="header"]
|===
| Title: | outlook.pst -- format of MS Outlook .pst file
| Author(s): | David Smith, Joe Nahmias, Brad Hards, Carl Byington
| URL: | https://www.five-ten-sg.com/libpst/rn01re05.html
|===

`[RUSSON]`

[cols="1,5",options="header"]
|===
| Title: | NTFS Documentation
| Author(s): | Richard Russon, Yuval Flede
| URL: | https://dubeyko.com/development/FileSystems/NTFS/ntfsdoc.pdf
|===

`[MSDN]`

[cols="1,5",options="header"]
|===
| Title: | Microsoft Developer Network
| URL: | http://msdn.microsoft.com/
|===

`[MS-OXCFXICS]`

[cols="1,5",options="header"]
|===
| Title: | `[MS-OXCFXICS]`: Bulk Data Transfer Protocol Specification
| URL: | http://msdn.microsoft.com/
|===

`[MS-OXOAB]`

[cols="1,5",options="header"]
|===
| Title: | `[MS-OXOAB]`: Offline Address Book (OAB) File Format and Schema
| URL: | http://msdn.microsoft.com/
|===

`[MS-OXORULE]`

[cols="1,5",options="header"]
|===
| Title: | `[MS-OXORULE]`: E-Mail Rules Protocol Specification
| URL: | http://msdn.microsoft.com/
|===

`[MS-PST]`

[cols="1,5",options="header"]
|===
| Title: | `[MS-PST]` Outlook Personal Folders File Format (.pst) structure specification
| URL: | http://msdn.microsoft.com/
|===

`[NTLCID]`

[cols="1,5",options="header"]
|===
| Tile: | Locale identifier (LCID) definitions
| URL: | https://github.com/libyal/libfwnt/blob/main/documentation/Language%20Code%20identifiers.asciidoc
|===

`[NTSID]`

[cols="1,5",options="header"]
|===
| Tile: | NT security descriptor definitions
| URL: | https://github.com/libyal/libfwnt/blob/main/documentation/Security%20Descriptor.asciidoc
|===

`[OPENCHANGE]`

[cols="1,5",options="header"]
|===
| Title: | Openchange MAPI library
| URL: | http://www.openchange.org/index.php
|===

[appendix]
== GNU Free Documentation License

Version 1.3, 3 November 2008
Copyright © 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
<http://fsf.org/>

Everyone is permitted to copy and distribute verbatim copies of this license
document, but changing it is not allowed.

=== 0. PREAMBLE

The purpose of this License is to make a manual, textbook, or other functional
and useful document "free" in the sense of freedom: to assure everyone the
effective freedom to copy and redistribute it, with or without modifying it,
either commercially or noncommercially. Secondarily, this License preserves for
the author and publisher a way to get credit for their work, while not being
considered responsible for modifications made by others.

This License is a kind of "copyleft", which means that derivative works of the
document must themselves be free in the same sense. It complements the GNU
General Public License, which is a copyleft license designed for free software.

We have designed this License in order to use it for manuals for free software,
because free software needs free documentation: a free program should come with
manuals providing the same freedoms that the software does. But this License is
not limited to software manuals; it can be used for any textual work,
regardless of subject matter or whether it is published as a printed book. We
recommend this License principally for works whose purpose is instruction or
reference.

=== 1. APPLICABILITY AND DEFINITIONS

This License applies to any manual or other work, in any medium, that contains
a notice placed by the copyright holder saying it can be distributed under the
terms of this License. Such a notice grants a world-wide, royalty-free license,
unlimited in duration, to use that work under the conditions stated herein. The
"Document", below, refers to any such manual or work. Any member of the public
is a licensee, and is addressed as "you". You accept the license if you copy,
modify or distribute the work in a way requiring permission under copyright law.

A "Modified Version" of the Document means any work containing the Document or
a portion of it, either copied verbatim, or with modifications and/or
translated into another language.

A "Secondary Section" is a named appendix or a front-matter section of the
Document that deals exclusively with the relationship of the publishers or
authors of the Document to the Document's overall subject (or to related
matters) and contains nothing that could fall directly within that overall
subject. (Thus, if the Document is in part a textbook of mathematics, a
Secondary Section may not explain any mathematics.) The relationship could be a
matter of historical connection with the subject or with related matters, or of
legal, commercial, philosophical, ethical or political position regarding them.

The "Invariant Sections" are certain Secondary Sections whose titles are
designated, as being those of Invariant Sections, in the notice that says that
the Document is released under this License. If a section does not fit the
above definition of Secondary then it is not allowed to be designated as
Invariant. The Document may contain zero Invariant Sections. If the Document
does not identify any Invariant Sections then there are none.

The "Cover Texts" are certain short passages of text that are listed, as
Front-Cover Texts or Back-Cover Texts, in the notice that says that the
Document is released under this License. A Front-Cover Text may be at most 5
words, and a Back-Cover Text may be at most 25 words.

A "Transparent" copy of the Document means a machine-readable copy, represented
in a format whose specification is available to the general public, that is
suitable for revising the document straightforwardly with generic text editors
or (for images composed of pixels) generic paint programs or (for drawings)
some widely available drawing editor, and that is suitable for input to text
formatters or for automatic translation to a variety of formats suitable for
input to text formatters. A copy made in an otherwise Transparent file format
whose markup, or absence of markup, has been arranged to thwart or discourage
subsequent modification by readers is not Transparent. An image format is not
Transparent if used for any substantial amount of text. A copy that is not
"Transparent" is called "Opaque".

Examples of suitable formats for Transparent copies include plain ASCII without
markup, Texinfo input format, LaTeX input format, SGML or XML using a publicly
available DTD, and standard-conforming simple HTML, PostScript or PDF designed
for human modification. Examples of transparent image formats include PNG, XCF
and JPG. Opaque formats include proprietary formats that can be read and edited
only by proprietary word processors, SGML or XML for which the DTD and/or
processing tools are not generally available, and the machine-generated HTML,
PostScript or PDF produced by some word processors for output purposes only.

The "Title Page" means, for a printed book, the title page itself, plus such
following pages as are needed to hold, legibly, the material this License
requires to appear in the title page. For works in formats which do not have
any title page as such, "Title Page" means the text near the most prominent
appearance of the work's title, preceding the beginning of the body of the text.

The "publisher" means any person or entity that distributes copies of the
Document to the public.

A section "Entitled XYZ" means a named subunit of the Document whose title
either is precisely XYZ or contains XYZ in parentheses following text that
translates XYZ in another language. (Here XYZ stands for a specific section
name mentioned below, such as "Acknowledgements", "Dedications",
"Endorsements", or "History".) To "Preserve the Title" of such a section when
you modify the Document means that it remains a section "Entitled XYZ"
according to this definition.

The Document may include Warranty Disclaimers next to the notice which states
that this License applies to the Document. These Warranty Disclaimers are
considered to be included by reference in this License, but only as regards
disclaiming warranties: any other implication that these Warranty Disclaimers
may have is void and has no effect on the meaning of this License.

=== 2. VERBATIM COPYING

You may copy and distribute the Document in any medium, either commercially or
noncommercially, provided that this License, the copyright notices, and the
license notice saying this License applies to the Document are reproduced in
all copies, and that you add no other conditions whatsoever to those of this
License. You may not use technical measures to obstruct or control the reading
or further copying of the copies you make or distribute. However, you may
accept compensation in exchange for copies. If you distribute a large enough
number of copies you must also follow the conditions in section 3.

You may also lend copies, under the same conditions stated above, and you may
publicly display copies.

=== 3. COPYING IN QUANTITY

If you publish printed copies (or copies in media that commonly have printed
covers) of the Document, numbering more than 100, and the Document's license
notice requires Cover Texts, you must enclose the copies in covers that carry,
clearly and legibly, all these Cover Texts: Front-Cover Texts on the front
cover, and Back-Cover Texts on the back cover. Both covers must also clearly
and legibly identify you as the publisher of these copies. The front cover must
present the full title with all words of the title equally prominent and
visible. You may add other material on the covers in addition. Copying with
changes limited to the covers, as long as they preserve the title of the
Document and satisfy these conditions, can be treated as verbatim copying in
other respects.

If the required texts for either cover are too voluminous to fit legibly, you
should put the first ones listed (as many as fit reasonably) on the actual
cover, and continue the rest onto adjacent pages.

If you publish or distribute Opaque copies of the Document numbering more than
100, you must either include a machine-readable Transparent copy along with
each Opaque copy, or state in or with each Opaque copy a computer-network
location from which the general network-using public has access to download
using public-standard network protocols a complete Transparent copy of the
Document, free of added material. If you use the latter option, you must take
reasonably prudent steps, when you begin distribution of Opaque copies in
quantity, to ensure that this Transparent copy will remain thus accessible at
the stated location until at least one year after the last time you distribute
an Opaque copy (directly or through your agents or retailers) of that edition
to the public.

It is requested, but not required, that you contact the authors of the Document
well before redistributing any large number of copies, to give them a chance to
provide you with an updated version of the Document.

=== 4. MODIFICATIONS

You may copy and distribute a Modified Version of the Document under the
conditions of sections 2 and 3 above, provided that you release the Modified
Version under precisely this License, with the Modified Version filling the
role of the Document, thus licensing distribution and modification of the
Modified Version to whoever possesses a copy of it. In addition, you must do
these things in the Modified Version:

A. Use in the Title Page (and on the covers, if any) a title distinct from that
of the Document, and from those of previous versions (which should, if there
were any, be listed in the History section of the Document). You may use the
same title as a previous version if the original publisher of that version
gives permission.

B. List on the Title Page, as authors, one or more persons or entities
responsible for authorship of the modifications in the Modified Version,
together with at least five of the principal authors of the Document (all of
its principal authors, if it has fewer than five), unless they release you from
this requirement.

C. State on the Title page the name of the publisher of the Modified Version,
as the publisher.

D. Preserve all the copyright notices of the Document.

E. Add an appropriate copyright notice for your modifications adjacent to the
other copyright notices.

F. Include, immediately after the copyright notices, a license notice giving
the public permission to use the Modified Version under the terms of this
License, in the form shown in the Addendum below.

G. Preserve in that license notice the full lists of Invariant Sections and
required Cover Texts given in the Document's license notice.

H. Include an unaltered copy of this License.

I. Preserve the section Entitled "History", Preserve its Title, and add to it
an item stating at least the title, year, new authors, and publisher of the
Modified Version as given on the Title Page. If there is no section Entitled
"History" in the Document, create one stating the title, year, authors, and
publisher of the Document as given on its Title Page, then add an item
describing the Modified Version as stated in the previous sentence.

J. Preserve the network location, if any, given in the Document for public
access to a Transparent copy of the Document, and likewise the network
locations given in the Document for previous versions it was based on. These
may be placed in the "History" section. You may omit a network location for a
work that was published at least four years before the Document itself, or if
the original publisher of the version it refers to gives permission.

K. For any section Entitled "Acknowledgements" or "Dedications", Preserve the
Title of the section, and preserve in the section all the substance and tone of
each of the contributor acknowledgements and/or dedications given therein.

L. Preserve all the Invariant Sections of the Document, unaltered in their text
and in their titles. Section numbers or the equivalent are not considered part
of the section titles.

M. Delete any section Entitled "Endorsements". Such a section may not be
included in the Modified Version.

N. Do not retitle any existing section to be Entitled "Endorsements" or to
conflict in title with any Invariant Section.

O. Preserve any Warranty Disclaimers.

If the Modified Version includes new front-matter sections or appendices that
qualify as Secondary Sections and contain no material copied from the Document,
you may at your option designate some or all of these sections as invariant. To
do this, add their titles to the list of Invariant Sections in the Modified
Version's license notice. These titles must be distinct from any other section
titles.

You may add a section Entitled "Endorsements", provided it contains nothing but
endorsements of your Modified Version by various parties—for example,
statements of peer review or that the text has been approved by an organization
as the authoritative definition of a standard.

You may add a passage of up to five words as a Front-Cover Text, and a passage
of up to 25 words as a Back-Cover Text, to the end of the list of Cover Texts
in the Modified Version. Only one passage of Front-Cover Text and one of
Back-Cover Text may be added by (or through arrangements made by) any one
entity. If the Document already includes a cover text for the same cover,
previously added by you or by arrangement made by the same entity you are
acting on behalf of, you may not add another; but you may replace the old one,
on explicit permission from the previous publisher that added the old one.

The author(s) and publisher(s) of the Document do not by this License give
permission to use their names for publicity for or to assert or imply
endorsement of any Modified Version.

=== 5. COMBINING DOCUMENTS

You may combine the Document with other documents released under this License,
under the terms defined in section 4 above for modified versions, provided that
you include in the combination all of the Invariant Sections of all of the
original documents, unmodified, and list them all as Invariant Sections of your
combined work in its license notice, and that you preserve all their Warranty
Disclaimers.

The combined work need only contain one copy of this License, and multiple
identical Invariant Sections may be replaced with a single copy. If there are
multiple Invariant Sections with the same name but different contents, make the
title of each such section unique by adding at the end of it, in parentheses,
the name of the original author or publisher of that section if known, or else
a unique number. Make the same adjustment to the section titles in the list of
Invariant Sections in the license notice of the combined work.

In the combination, you must combine any sections Entitled "History" in the
various original documents, forming one section Entitled "History"; likewise
combine any sections Entitled "Acknowledgements", and any sections Entitled
"Dedications". You must delete all sections Entitled "Endorsements".

=== 6. COLLECTIONS OF DOCUMENTS

You may make a collection consisting of the Document and other documents
released under this License, and replace the individual copies of this License
in the various documents with a single copy that is included in the collection,
provided that you follow the rules of this License for verbatim copying of each
of the documents in all other respects.

You may extract a single document from such a collection, and distribute it
individually under this License, provided you insert a copy of this License
into the extracted document, and follow this License in all other respects
regarding verbatim copying of that document.

=== 7. AGGREGATION WITH INDEPENDENT WORKS

A compilation of the Document or its derivatives with other separate and
independent documents or works, in or on a volume of a storage or distribution
medium, is called an "aggregate" if the copyright resulting from the
compilation is not used to limit the legal rights of the compilation's users
beyond what the individual works permit. When the Document is included in an
aggregate, this License does not apply to the other works in the aggregate
which are not themselves derivative works of the Document.

If the Cover Text requirement of section 3 is applicable to these copies of the
Document, then if the Document is less than one half of the entire aggregate,
the Document's Cover Texts may be placed on covers that bracket the Document
within the aggregate, or the electronic equivalent of covers if the Document is
in electronic form. Otherwise they must appear on printed covers that bracket
the whole aggregate.

=== 8. TRANSLATION

Translation is considered a kind of modification, so you may distribute
translations of the Document under the terms of section 4. Replacing Invariant
Sections with translations requires special permission from their copyright
holders, but you may include translations of some or all Invariant Sections in
addition to the original versions of these Invariant Sections. You may include
a translation of this License, and all the license notices in the Document, and
any Warranty Disclaimers, provided that you also include the original English
version of this License and the original versions of those notices and
disclaimers. In case of a disagreement between the translation and the original
version of this License or a notice or disclaimer, the original version will
prevail.

If a section in the Document is Entitled "Acknowledgements", "Dedications", or
"History", the requirement (section 4) to Preserve its Title (section 1) will
typically require changing the actual title.

=== 9. TERMINATION

You may not copy, modify, sublicense, or distribute the Document except as
expressly provided under this License. Any attempt otherwise to copy, modify,
sublicense, or distribute it is void, and will automatically terminate your
rights under this License.

However, if you cease all violation of this License, then your license from a
particular copyright holder is reinstated (a) provisionally, unless and until
the copyright holder explicitly and finally terminates your license, and (b)
permanently, if the copyright holder fails to notify you of the violation by
some reasonable means prior to 60 days after the cessation.

Moreover, your license from a particular copyright holder is reinstated
permanently if the copyright holder notifies you of the violation by some
reasonable means, this is the first time you have received notice of violation
of this License (for any work) from that copyright holder, and you cure the
violation prior to 30 days after your receipt of the notice.

Termination of your rights under this section does not terminate the licenses
of parties who have received copies or rights from you under this License. If
your rights have been terminated and not permanently reinstated, receipt of a
copy of some or all of the same material does not give you any rights to use it.

=== 10. FUTURE REVISIONS OF THIS LICENSE

The Free Software Foundation may publish new, revised versions of the GNU Free
Documentation License from time to time. Such new versions will be similar in
spirit to the present version, but may differ in detail to address new problems
or concerns. See http://www.gnu.org/copyleft/.

Each version of the License is given a distinguishing version number. If the
Document specifies that a particular numbered version of this License "or any
later version" applies to it, you have the option of following the terms and
conditions either of that specified version or of any later version that has
been published (not as a draft) by the Free Software Foundation. If the
Document does not specify a version number of this License, you may choose any
version ever published (not as a draft) by the Free Software Foundation. If the
Document specifies that a proxy can decide which future versions of this
License can be used, that proxy's public statement of acceptance of a version
permanently authorizes you to choose that version for the Document.

=== 11. RELICENSING

"Massive Multiauthor Collaboration Site" (or "MMC Site") means any World Wide
Web server that publishes copyrightable works and also provides prominent
facilities for anybody to edit those works. A public wiki that anybody can edit
is an example of such a server. A "Massive Multiauthor Collaboration" (or
"MMC") contained in the site means any set of copyrightable works thus
published on the MMC site.

"CC-BY-SA" means the Creative Commons Attribution-Share Alike 3.0 license
published by Creative Commons Corporation, a not-for-profit corporation with a
principal place of business in San Francisco, California, as well as future
copyleft versions of that license published by that same organization.

"Incorporate" means to publish or republish a Document, in whole or in part, as
part of another Document.

An MMC is "eligible for relicensing" if it is licensed under this License, and
if all works that were first published under this License somewhere other than
this MMC, and subsequently incorporated in whole or in part into the MMC, (1)
had no cover texts or invariant sections, and (2) were thus incorporated prior
to November 1, 2008.

The operator of an MMC Site may republish an MMC contained in the site under
CC-BY-SA on the same site at any time before August 1, 2009, provided the MMC
is eligible for relicensing.

